{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/tabs/tab-pane.ts","webpack:///./src/jigsaw/pc-components/tabs/tab-item.ts","webpack:///./src/jigsaw/pc-components/tabs/tab-item.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tabs/tab-item.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tabs/tab-item.ts.JigsawTabLabel.html","webpack:///./src/jigsaw/pc-components/tabs/tab-item.ts.JigsawTabContent.html","webpack:///./src/jigsaw/pc-components/tabs/tab.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tabs/tab.html","webpack:///./src/jigsaw/pc-components/tabs/tab.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tabs/tab.ts","webpack:///./src/jigsaw/pc-components/tabs/tab-pane.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tabs/tab-pane.ts.JigsawTabPane.html","webpack:///./src/jigsaw/pc-components/tabs/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","JigsawTabPane","this","disabled","hidden","async","lazy","tab_item_JigsawTabBase","_super","JigsawTabBase","_changeDetector","_componentFactory","_this","call","tslib_es6","prototype","_insert","_tabItemRef","_createTab","tabItem","initData","detectChanges","_destroy","destroy","what","core","_body","createEmbeddedView","factory","resolveComponentFactory","componentRef","createComponent","instance","ngOnDestroy","tab_item_JigsawTabLabel","JigsawTabLabel","elementRef","remove","change","getOffsetLeft","nativeElement","offsetLeft","getOffsetTop","offsetTop","getOffsetWidth","offsetWidth","_$handleRemove","e","preventDefault","stopPropagation","emit","key","ngAfterViewInit","tab_item_JigsawTabContent","JigsawTabContent","Object","defineProperty","get","_isActive","set","active","initialized","enumerable","configurable","RenderType_JigsawTabLabel","encapsulation","styles","data","View_JigsawTabLabel_1","_l","View_JigsawTabLabel_2","_v","en","$event","ad","component","View_JigsawTabLabel_0","common","ngIf","_ck","editable","RenderType_JigsawTabContent","View_JigsawTabContent_1","View_JigsawTabContent_0","RenderType_JigsawTab","View_JigsawTab_0","View_JigsawTab_2","_co","_$tabClick","context","index","titleChange","$implicit","label","_$selectedIndex","View_JigsawTab_3","_$handleAdd","View_JigsawTab_4","_$popupTabList","parent","_$menuAreaLeave","View_JigsawTab_1","ngStyle","ngForOf","_$inkBarStyle","_$selectTabStyle","_$tabPanes","_$showOverflowButton","View_JigsawTab_5","transform","transition","isActive","currVal_3","enableAnimation","content","selectedIndex","View_JigsawTab_8","View_JigsawTab_7","_$handleClick","_$listOptionClick","list_ngfactory","list","value","selected","_$tabList","View_JigsawTab_6","_$clearPopupTimeout","fesm5_forms","p0_0","ngx_perfect_scrollbar_es5","config","suppressScrollX","wheelSpeed","wheelPropagation","minScrollbarLength","_items","currVal_4","valid","width","height","_tabLabels","_tabContents","_tabsInkBar","_tabsNavWrap","_tabsNav","length","_$headless","JigsawTab","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_tab_pane__WEBPACK_IMPORTED_MODULE_2__","_common_common__WEBPACK_IMPORTED_MODULE_3__","_common_service_popup_service__WEBPACK_IMPORTED_MODULE_4__","_cfr","_viewContainer","_elementRef","_popupService","selectChange","add","selectedIndexChange","_tabLeftMap","Map","_updateTitlePosition","_handleSelectChange","_getTabPaneByIndex","_asyncSetStyle","_setInkBarStyle","labelPos","_getLabelOffsetByKey","display","offSet","currentLabel","find","item","_autoSelect","toArray","findIndex","tabPane","callLater","removeTab","ngOnInit","_createTabList","_tabLabelsChangeHandler","changes","subscribe","unsubscribe","ngAfterViewChecked","tabElem","match","style","hideTab","_isTabPane","_handleSelect","showTab","console","info","addTab","title","activateImmediately","tabTemp","push","reset","link","querySelector","click","splice","tabsList","event","overflowButton","_tabsListPopupInfo","size","popup","modal","showBorder","pos","posOffset","top","offsetHeight","right","posReviser","popupElement","positionReviser","direction","_popupTimeout","dispose","element","clearCallLater","clear","forEach","rootNodes","i","HTMLElement","outerHTML","textContent","trim","distance","_updateOverflowButton","left","onResize","RenderType_JigsawTabPane","View_JigsawTabPane_0","JigsawTabPaneNgFactory","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_tab_pane__WEBPACK_IMPORTED_MODULE_1__","View_JigsawTabPane_1","View_JigsawTabPane_Host_0","JigsawTabsModule"],"mappings":"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","file":"12.7a159e71580b634212e7.js","sourcesContent":["import {Component, ContentChild, Input, TemplateRef, Type, ViewChild} from '@angular/core';\nimport {IDynamicInstantiatable} from \"../../common/common\";\n\n@Component({\n    selector: 'jigsaw-tab-pane, j-tab-pane',\n    template: `\n        <ng-template #label>\n            {{title}}\n            <ng-content select=\"[jigsaw-title]\"></ng-content>\n        </ng-template>\n    `\n})\nexport class JigsawTabPane {\n    @Input()\n    public title: string;\n\n    @Input()\n    public disabled: boolean = false;\n\n    @Input()\n    public hidden: boolean = false;\n\n    /**\n     * @deprecated use `lazy` instead\n     *\n     * @internal\n     */\n    @Input()\n    public async: boolean = true; // 默认异步加载\n\n    /**\n     * 为true时，Tab页的视图延将被迟到该Tab页被打开的时候才被初始化。\n     *\n     *\n     */\n    @Input()\n    public lazy: boolean = true;\n\n    @Input()\n    public initData: Object;\n\n    @ViewChild('label', {static: true}) label: TemplateRef<any> | Type<IDynamicInstantiatable>;\n    @ContentChild(TemplateRef, {static: true}) content: TemplateRef<any> | Type<IDynamicInstantiatable>;\n}\n\n\n","import {\n    Component, Input, ViewContainerRef, TemplateRef, ViewChild, ElementRef,\n    AfterViewInit, EmbeddedViewRef, ChangeDetectorRef, Type, ComponentFactoryResolver,\n    ComponentRef, OnDestroy, Output, EventEmitter\n} from '@angular/core';\nimport {AbstractJigsawComponent, IDynamicInstantiatable} from \"../../common/common\";\n\n/**\n * 改变tab标题时发送事件的携带数据类型。\n */\nexport class TabTitleInfo {\n    key: number;\n    title: string\n}\n\nexport abstract class JigsawTabBase extends AbstractJigsawComponent implements OnDestroy {\n\n    constructor(protected _changeDetector: ChangeDetectorRef, protected _componentFactory: ComponentFactoryResolver) {\n        super()\n    }\n\n    @Input()\n    public key: number;\n\n    @Input()\n    public tabItem: TemplateRef<any> | Type<IDynamicInstantiatable>;\n\n    @Input()\n    public initData: Object;\n\n    @ViewChild('body', {read: ViewContainerRef, static: false})\n    protected _body: ViewContainerRef;\n\n    /**\n     * @internal\n     */\n    public _tabItemRef: EmbeddedViewRef<any> | ComponentRef<IDynamicInstantiatable>;\n\n    protected _insert(): void {\n        if (!this._tabItemRef) {\n            this._tabItemRef = this._createTab(this.tabItem, this.initData);\n            this._changeDetector.detectChanges()\n        }\n    }\n\n    protected _destroy(): void {\n        if (this._tabItemRef) {\n            this._tabItemRef.destroy();\n            this._tabItemRef = null\n        }\n    }\n\n    protected _createTab(what: Type<IDynamicInstantiatable> | TemplateRef<any>,\n                         initData: Object): EmbeddedViewRef<any> | ComponentRef<IDynamicInstantiatable> {\n        if (what instanceof TemplateRef) {\n            return this._body.createEmbeddedView(what, initData);\n        } else if (what) {\n            const factory = this._componentFactory.resolveComponentFactory(what);\n            const componentRef = this._body.createComponent(factory);\n            componentRef.instance.initData = initData;\n            return componentRef;\n        }\n    }\n\n    ngOnDestroy() {\n        this._destroy()\n    }\n}\n\n/**\n * @internal\n */\n@Component({\n    selector: 'jigsaw-tab-label',\n    template: `\n        <ng-template #body></ng-template>\n        <span class=\"jigsaw-tabs-remove-bar\" *ngIf=\"editable\" (click)=\"_$handleRemove($event)\">&times;</span>\n    `\n})\nexport class JigsawTabLabel extends JigsawTabBase implements AfterViewInit {\n\n    constructor(public elementRef: ElementRef,\n                protected _changeDetector: ChangeDetectorRef,\n                protected _componentFactory: ComponentFactoryResolver) {\n        super(_changeDetector, _componentFactory)\n    }\n\n    @Input()\n    public editable: boolean;\n\n    @Output()\n    public remove = new EventEmitter<number>();\n\n    @Output()\n    public change = new EventEmitter<TabTitleInfo>();\n\n    // label 左侧的距离\n    public getOffsetLeft(): number {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n\n    public getOffsetTop(): number {\n        return this.elementRef.nativeElement.offsetTop;\n    }\n\n    // 组件的宽度\n    public getOffsetWidth(): number {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleRemove(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.remove.emit(this.key);\n    }\n\n    ngAfterViewInit() {\n        this._insert()\n    }\n\n}\n\n/**\n * @internal\n */\n@Component({\n    selector: 'jigsaw-tab-content',\n    host: {\n        '[class.jigsaw-tabs-tabpane]': 'true',\n        '[class.jigsaw-tabs-tabpane-active]': 'isActive',\n        '[class.jigsaw-tabs-tabpane-inactive]': '!isActive'\n    },\n    template: `\n        <ng-template #body></ng-template>\n    `\n})\nexport class JigsawTabContent extends JigsawTabBase implements AfterViewInit {\n\n    constructor(protected _changeDetector: ChangeDetectorRef, protected _componentFactory: ComponentFactoryResolver) {\n        super(_changeDetector, _componentFactory)\n    }\n\n    @Input()\n    public lazy: boolean;\n\n    private _isActive: boolean;\n\n    @Input()\n    public get isActive(): boolean {\n        return this._isActive;\n    }\n\n    public set isActive(active: boolean) {\n        this._isActive = active;\n        if (this.initialized && active) {\n            this._insert();\n        }\n    }\n\n    ngAfterViewInit() {\n        if (!this.lazy || this._isActive) {\n            // 同步加载，或者处于激活状态\n            this._insert();\n        }\n    }\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { ViewContainerRef, TemplateRef, ElementRef, AfterViewInit, EmbeddedViewRef, ChangeDetectorRef, Type, ComponentFactoryResolver, ComponentRef, OnDestroy, EventEmitter } from '@angular/core';\nimport { AbstractJigsawComponent } from \"../../common/common\";\n/**\n * 改变tab标题时发送事件的携带数据类型。\n */\nvar TabTitleInfo = /** @class */ (function () {\n    function TabTitleInfo() {\n    }\n    return TabTitleInfo;\n}());\nexport { TabTitleInfo };\nvar JigsawTabBase = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTabBase, _super);\n    function JigsawTabBase(_changeDetector, _componentFactory) {\n        var _this = _super.call(this) || this;\n        _this._changeDetector = _changeDetector;\n        _this._componentFactory = _componentFactory;\n        return _this;\n    }\n    JigsawTabBase.prototype._insert = function () {\n        if (!this._tabItemRef) {\n            this._tabItemRef = this._createTab(this.tabItem, this.initData);\n            this._changeDetector.detectChanges();\n        }\n    };\n    JigsawTabBase.prototype._destroy = function () {\n        if (this._tabItemRef) {\n            this._tabItemRef.destroy();\n            this._tabItemRef = null;\n        }\n    };\n    JigsawTabBase.prototype._createTab = function (what, initData) {\n        if (what instanceof TemplateRef) {\n            return this._body.createEmbeddedView(what, initData);\n        }\n        else if (what) {\n            var factory = this._componentFactory.resolveComponentFactory(what);\n            var componentRef = this._body.createComponent(factory);\n            componentRef.instance.initData = initData;\n            return componentRef;\n        }\n    };\n    JigsawTabBase.prototype.ngOnDestroy = function () {\n        this._destroy();\n    };\n    return JigsawTabBase;\n}(AbstractJigsawComponent));\nexport { JigsawTabBase };\n/**\n * @internal\n */\nvar JigsawTabLabel = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTabLabel, _super);\n    function JigsawTabLabel(elementRef, _changeDetector, _componentFactory) {\n        var _this = _super.call(this, _changeDetector, _componentFactory) || this;\n        _this.elementRef = elementRef;\n        _this._changeDetector = _changeDetector;\n        _this._componentFactory = _componentFactory;\n        _this.remove = new EventEmitter();\n        _this.change = new EventEmitter();\n        return _this;\n    }\n    // label 左侧的距离\n    JigsawTabLabel.prototype.getOffsetLeft = function () {\n        return this.elementRef.nativeElement.offsetLeft;\n    };\n    JigsawTabLabel.prototype.getOffsetTop = function () {\n        return this.elementRef.nativeElement.offsetTop;\n    };\n    // 组件的宽度\n    JigsawTabLabel.prototype.getOffsetWidth = function () {\n        return this.elementRef.nativeElement.offsetWidth;\n    };\n    /**\n     * @internal\n     */\n    JigsawTabLabel.prototype._$handleRemove = function (e) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.remove.emit(this.key);\n    };\n    JigsawTabLabel.prototype.ngAfterViewInit = function () {\n        this._insert();\n    };\n    return JigsawTabLabel;\n}(JigsawTabBase));\nexport { JigsawTabLabel };\n/**\n * @internal\n */\nvar JigsawTabContent = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTabContent, _super);\n    function JigsawTabContent(_changeDetector, _componentFactory) {\n        var _this = _super.call(this, _changeDetector, _componentFactory) || this;\n        _this._changeDetector = _changeDetector;\n        _this._componentFactory = _componentFactory;\n        return _this;\n    }\n    Object.defineProperty(JigsawTabContent.prototype, \"isActive\", {\n        get: function () {\n            return this._isActive;\n        },\n        set: function (active) {\n            this._isActive = active;\n            if (this.initialized && active) {\n                this._insert();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTabContent.prototype.ngAfterViewInit = function () {\n        if (!this.lazy || this._isActive) {\n            // 同步加载，或者处于激活状态\n            this._insert();\n        }\n    };\n    return JigsawTabContent;\n}(JigsawTabBase));\nexport { JigsawTabContent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./tab-item\";\nvar styles_JigsawTabLabel = [];\nvar RenderType_JigsawTabLabel = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTabLabel, data: {} });\nexport { RenderType_JigsawTabLabel as RenderType_JigsawTabLabel };\nfunction View_JigsawTabLabel_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_JigsawTabLabel_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-tabs-remove-bar\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$handleRemove($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00D7\"]))], null, null); }\nexport function View_JigsawTabLabel_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _body: 0 }), (_l()(), i0.ɵand(16777216, [[1, 3], [\"body\", 2]], null, 0, null, View_JigsawTabLabel_1)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTabLabel_2)), i0.ɵdid(3, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.editable; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_JigsawTabLabel_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-tab-label\", [], null, null, null, View_JigsawTabLabel_0, RenderType_JigsawTabLabel)), i0.ɵdid(1, 4440064, null, 0, i2.JigsawTabLabel, [i0.ElementRef, i0.ChangeDetectorRef, i0.ComponentFactoryResolver], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar JigsawTabLabelNgFactory = i0.ɵccf(\"jigsaw-tab-label\", i2.JigsawTabLabel, View_JigsawTabLabel_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", key: \"key\", tabItem: \"tabItem\", initData: \"initData\", editable: \"editable\" }, { remove: \"remove\", change: \"change\" }, []);\nexport { JigsawTabLabelNgFactory as JigsawTabLabelNgFactory };\nvar styles_JigsawTabContent = [];\nvar RenderType_JigsawTabContent = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTabContent, data: {} });\nexport { RenderType_JigsawTabContent as RenderType_JigsawTabContent };\nfunction View_JigsawTabContent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_JigsawTabContent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _body: 0 }), (_l()(), i0.ɵand(16777216, [[1, 3], [\"body\", 2]], null, 0, null, View_JigsawTabContent_1))], null, null); }\nexport function View_JigsawTabContent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-tab-content\", [], [[2, \"jigsaw-tabs-tabpane\", null], [2, \"jigsaw-tabs-tabpane-active\", null], [2, \"jigsaw-tabs-tabpane-inactive\", null]], null, null, View_JigsawTabContent_0, RenderType_JigsawTabContent)), i0.ɵdid(1, 4440064, null, 0, i2.JigsawTabContent, [i0.ChangeDetectorRef, i0.ComponentFactoryResolver], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = i0.ɵnov(_v, 1).isActive; var currVal_2 = !i0.ɵnov(_v, 1).isActive; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar JigsawTabContentNgFactory = i0.ɵccf(\"jigsaw-tab-content\", i2.JigsawTabContent, View_JigsawTabContent_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", key: \"key\", tabItem: \"tabItem\", initData: \"initData\", lazy: \"lazy\", isActive: \"isActive\" }, {}, []);\nexport { JigsawTabContentNgFactory as JigsawTabContentNgFactory };\n","\n        <ng-template #body></ng-template>\n        <span class=\"jigsaw-tabs-remove-bar\" *ngIf=\"editable\" (click)=\"_$handleRemove($event)\">&times;</span>\n    ","\n        <ng-template #body></ng-template>\n    ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tab-item.ngfactory\";\nimport * as i2 from \"./tab-item\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../list-and-tile/list.ngfactory\";\nimport * as i5 from \"../list-and-tile/list\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"ngx-perfect-scrollbar\";\nimport * as i8 from \"./tab\";\nimport * as i9 from \"../../common/service/popup.service\";\nvar styles_JigsawTab = [];\nvar RenderType_JigsawTab = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTab, data: {} });\nexport { RenderType_JigsawTab as RenderType_JigsawTab };\nfunction View_JigsawTab_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-tab-label\", [[\"class\", \"jigsaw-tabs-tab\"]], [[2, \"jigsaw-tabs-tab-active\", null], [2, \"jigsaw-tabs-tab-disabled\", null], [2, \"jigsaw-tabs-tab-hidden\", null]], [[null, \"click\"], [null, \"remove\"], [null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$tabClick(_v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"remove\" === en)) {\n        var pd_1 = (_co._$handleRemove($event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"change\" === en)) {\n        var pd_2 = (_co.titleChange.emit($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i1.View_JigsawTabLabel_0, i1.RenderType_JigsawTabLabel)), i0.ɵdid(1, 4440064, [[1, 4]], 0, i2.JigsawTabLabel, [i0.ElementRef, i0.ChangeDetectorRef, i0.ComponentFactoryResolver], { key: [0, \"key\"], tabItem: [1, \"tabItem\"], editable: [2, \"editable\"] }, { remove: \"remove\", change: \"change\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.context.index; var currVal_4 = _v.context.$implicit.label; var currVal_5 = _co.editable; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co._$selectedIndex === _v.context.index); var currVal_1 = _v.context.$implicit.disabled; var currVal_2 = _v.context.$implicit.hidden; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nfunction View_JigsawTab_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \"span\", [[\"class\", \"fa fa-plus-square-o jigsaw-tabs-add-bar\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$handleAdd() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], null, null); }\nfunction View_JigsawTab_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[\"overflowButton\", 1]], null, 1, \"div\", [[\"class\", \"jigsaw-tabs-overflow-button\"]], null, [[null, \"mouseenter\"], [null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mouseenter\" === en)) {\n        var pd_0 = (_co._$popupTabList(i0.ɵnov(_v.parent.parent, 11), $event, i0.ɵnov(_v, 0)) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_1 = (_co._$menuAreaLeave() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \"span\", [[\"class\", \"fa  fa-angle-double-right\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawTab_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 14, \"div\", [[\"class\", \"jigsaw-tabs-bar\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 13, \"div\", [[\"class\", \"jigsaw-tabs-nav-container\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, [[3, 0], [\"tabsInkBar\", 1]], null, 2, \"div\", [[\"class\", \"jigsaw-tabs-ink-bar\"]], null, null, null, null, null)), i0.ɵprd(512, null, i3.ɵNgStyleImpl, i3.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(4, 278528, null, 0, i3.NgStyle, [i3.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵeld(5, 0, [[4, 0], [\"tabsNavWrap\", 1]], null, 7, \"div\", [[\"class\", \"jigsaw-tabs-nav-wrap\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, [[5, 0], [\"tabsNav\", 1]], null, 6, \"div\", [[\"class\", \"jigsaw-tabs-nav\"]], null, null, null, null, null)), i0.ɵprd(512, null, i3.ɵNgStyleImpl, i3.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(8, 278528, null, 0, i3.NgStyle, [i3.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_2)), i0.ɵdid(10, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_3)), i0.ɵdid(12, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_4)), i0.ɵdid(14, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$inkBarStyle; _ck(_v, 4, 0, currVal_0); var currVal_1 = _co._$selectTabStyle; _ck(_v, 8, 0, currVal_1); var currVal_2 = _co._$tabPanes; _ck(_v, 10, 0, currVal_2); var currVal_3 = _co.editable; _ck(_v, 12, 0, currVal_3); var currVal_4 = _co._$showOverflowButton; _ck(_v, 14, 0, currVal_4); }, null); }\nfunction View_JigsawTab_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"jigsaw-tab-content\", [], [[2, \"jigsaw-tabs-tabpane\", null], [2, \"jigsaw-tabs-tabpane-active\", null], [2, \"jigsaw-tabs-tabpane-inactive\", null]], null, null, i1.View_JigsawTabContent_0, i1.RenderType_JigsawTabContent)), i0.ɵprd(512, null, i3.ɵNgStyleImpl, i3.ɵNgStyleR2Impl, [i0.ElementRef, i0.KeyValueDiffers, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i3.NgStyle, [i3.ɵNgStyleImpl], { ngStyle: [0, \"ngStyle\"] }, null), i0.ɵpod(3, { transform: 0, transition: 1 }), i0.ɵdid(4, 4440064, [[2, 4]], 0, i2.JigsawTabContent, [i0.ChangeDetectorRef, i0.ComponentFactoryResolver], { key: [0, \"key\"], tabItem: [1, \"tabItem\"], initData: [2, \"initData\"], lazy: [3, \"lazy\"], isActive: [4, \"isActive\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _ck(_v, 3, 0, ((\"translate3d(\" + ((_v.context.index - _co._$selectedIndex) * 100)) + \"%, 0px, 0px)\"), (_co.enableAnimation ? \"transform 0.5s\" : \"\")); _ck(_v, 2, 0, currVal_3); var currVal_4 = _v.context.index; var currVal_5 = _v.context.$implicit.content; var currVal_6 = _v.context.$implicit.initData; var currVal_7 = _v.context.$implicit.lazy; var currVal_8 = (_co.selectedIndex === _v.context.index); _ck(_v, 4, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = i0.ɵnov(_v, 4).isActive; var currVal_2 = !i0.ɵnov(_v, 4).isActive; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nfunction View_JigsawTab_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \"span\", [[\"class\", \"fa fa-check\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawTab_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"jigsaw-list-option\", [], [[2, \"jigsaw-list-option-hidden\", null], [2, \"jigsaw-list-option\", null], [2, \"jigsaw-list-option-active\", null], [2, \"jigsaw-list-option-disabled\", null], [2, \"jigsaw-list-option-separator\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._$handleClick() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"click\" === en)) {\n        var pd_1 = (_co._$listOptionClick(_v.context.index) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i4.View_JigsawListOption_0, i4.RenderType_JigsawListOption)), i0.ɵdid(1, 245760, [[6, 4]], 0, i5.JigsawListOption, [i0.ChangeDetectorRef, i0.ElementRef], { value: [0, \"value\"], disabled: [1, \"disabled\"] }, null), (_l()(), i0.ɵeld(2, 0, null, 2, 3, \"div\", [], [[2, \"jigsaw-list-option-selected\", null]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_8)), i0.ɵdid(4, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"span\", [[\"style\", \"display: inline-block\"]], [[8, \"innerHTML\", 1]], null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_5 = _v.context.$implicit; var currVal_6 = _v.context.$implicit.disabled; _ck(_v, 1, 0, currVal_5, currVal_6); var currVal_8 = (_co._$selectedIndex === _v.context.index); _ck(_v, 4, 0, currVal_8); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.context.$implicit.hidden; var currVal_1 = true; var currVal_2 = i0.ɵnov(_v, 1).selected; var currVal_3 = i0.ɵnov(_v, 1).disabled; var currVal_4 = !i0.ɵnov(_v, 1).value; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); var currVal_7 = (_co._$selectedIndex === _v.context.index); _ck(_v, 2, 0, currVal_7); var currVal_9 = _co._$tabList[_v.context.index]; _ck(_v, 5, 0, currVal_9); }); }\nfunction View_JigsawTab_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"j-list\", [[\"class\", \"jigsaw-tabs-list\"]], [[2, \"jigsaw-list\", null], [2, \"jigsaw-list-error\", null], [4, \"width\", null], [4, \"height\", null]], [[null, \"mouseenter\"], [null, \"mouseleave\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"mouseenter\" === en)) {\n        var pd_0 = (_co._$clearPopupTimeout() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"mouseleave\" === en)) {\n        var pd_1 = (_co._$menuAreaLeave() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i4.View_JigsawList_0, i4.RenderType_JigsawList)), i0.ɵprd(5120, null, i6.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawList]), i0.ɵdid(2, 999424, null, 0, i7.PerfectScrollbarDirective, [i0.NgZone, i0.KeyValueDiffers, i0.ElementRef, i0.PLATFORM_ID, [2, i7.PERFECT_SCROLLBAR_CONFIG]], { config: [0, \"config\"] }, null), i0.ɵpod(3, { suppressScrollX: 0, wheelSpeed: 1, wheelPropagation: 2, minScrollbarLength: 3 }), i0.ɵdid(4, 1294336, null, 1, i5.JigsawList, [], null, null), i0.ɵqud(603979776, 6, { _items: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_JigsawTab_7)), i0.ɵdid(7, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_4 = _ck(_v, 3, 0, true, 0.5, true, 20); _ck(_v, 2, 0, currVal_4); _ck(_v, 4, 0); var currVal_5 = _co._$tabPanes; _ck(_v, 7, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 4).valid; var currVal_2 = i0.ɵnov(_v, 4).width; var currVal_3 = i0.ɵnov(_v, 4).height; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_JigsawTab_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _tabLabels: 1 }), i0.ɵqud(671088640, 2, { _tabContents: 1 }), i0.ɵqud(671088640, 3, { _tabsInkBar: 0 }), i0.ɵqud(671088640, 4, { _tabsNavWrap: 0 }), i0.ɵqud(671088640, 5, { _tabsNav: 0 }), (_l()(), i0.ɵeld(5, 0, null, null, 5, \"div\", [[\"class\", \"jigsaw-tabs\"]], [[2, \"jigsaw-tabs-vertical-response\", null]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_1)), i0.ɵdid(7, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"div\", [[\"class\", \"jigsaw-tabs-content\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTab_5)), i0.ɵdid(10, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵand(0, [[\"tabsList\", 2]], null, 0, null, View_JigsawTab_6))], function (_ck, _v) { var _co = _v.component; var currVal_1 = (((_co._$tabPanes && (_co._$tabPanes.length > 0)) || _co.editable) && !_co._$headless); _ck(_v, 7, 0, currVal_1); var currVal_2 = _co._$tabPanes; _ck(_v, 10, 0, currVal_2); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = !!_co.height; _ck(_v, 5, 0, currVal_0); }); }\nexport function View_JigsawTab_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 16777216, null, null, 2, \"jigsaw-tab\", [], [[2, \"jigsaw-tabs-host\", null], [4, \"width\", null], [4, \"height\", null]], [[\"window\", \"resize\"]], function (_v, en, $event) { var ad = true; if ((\"window:resize\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1).onResize() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_JigsawTab_0, RenderType_JigsawTab)), i0.ɵdid(1, 12828672, null, 1, i8.JigsawTab, [i0.ComponentFactoryResolver, i0.ChangeDetectorRef, i0.ViewContainerRef, i0.ElementRef, i9.PopupService], null, null), i0.ɵqud(603979776, 1, { _$tabPanes: 1 })], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = i0.ɵnov(_v, 1).width; var currVal_2 = i0.ɵnov(_v, 1).height; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar JigsawTabNgFactory = i0.ɵccf(\"jigsaw-tab, j-tab, jigsaw-tabs, j-tabs\", i8.JigsawTab, View_JigsawTab_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", editable: \"editable\", headless: \"headless\", enableAnimation: \"enableAnimation\", selectedIndex: \"selectedIndex\" }, { selectChange: \"selectChange\", remove: \"remove\", add: \"add\", titleChange: \"titleChange\", selectedIndexChange: \"selectedIndexChange\" }, []);\nexport { JigsawTabNgFactory as JigsawTabNgFactory };\n","<div class=\"jigsaw-tabs\" [class.jigsaw-tabs-vertical-response]=\"!!height\">\n    <div *ngIf=\"((_$tabPanes && _$tabPanes.length > 0) || editable ) && !_$headless\" class=\"jigsaw-tabs-bar\">\n        <div class=\"jigsaw-tabs-nav-container\">\n            <div #tabsInkBar class=\"jigsaw-tabs-ink-bar\" [ngStyle]=\"_$inkBarStyle\"></div>\n            <div #tabsNavWrap class=\"jigsaw-tabs-nav-wrap\">\n                <div #tabsNav class=\"jigsaw-tabs-nav\" [ngStyle]=\"_$selectTabStyle\">\n                    <jigsaw-tab-label class=\"jigsaw-tabs-tab\"\n                                      *ngFor=\"let tab of _$tabPanes; let i = index\"\n                                      [key]=\"i\"\n                                      [tabItem]=\"tab.label\"\n                                      [editable]=\"editable\"\n                                      [class.jigsaw-tabs-tab-active]=\"_$selectedIndex === i\"\n                                      [class.jigsaw-tabs-tab-disabled]=\"tab.disabled\"\n                                      [class.jigsaw-tabs-tab-hidden]=\"tab.hidden\"\n                                      (click)=\"_$tabClick(i)\"\n                                      (remove)=\"_$handleRemove($event)\"\n                                      (change)=\"titleChange.emit($event)\">\n                    </jigsaw-tab-label>\n                    <span class=\"fa fa-plus-square-o jigsaw-tabs-add-bar\" *ngIf=\"editable\"\n                          (click)=\"_$handleAdd()\"></span>\n                </div>\n            </div>\n            <div class=\"jigsaw-tabs-overflow-button\" *ngIf=\"_$showOverflowButton\"\n                 (mouseenter)=\"_$popupTabList(tabsList,$event,overflowButton)\"\n                 (mouseleave)=\"_$menuAreaLeave()\" #overflowButton>\n                <span class=\"fa  fa-angle-double-right\">\n                </span>\n            </div>\n        </div>\n    </div>\n    <div class=\"jigsaw-tabs-content\">\n        <jigsaw-tab-content\n            *ngFor=\"let tab of _$tabPanes; let i = index;\"\n            [key]=\"i\"\n            [tabItem]=\"tab.content\"\n            [isActive]=\"selectedIndex === i\"\n            [lazy]=\"tab.lazy\"\n            [initData]=\"tab.initData\"\n            [ngStyle]=\"{transform: 'translate3d('+(i-_$selectedIndex)*100+'%, 0px, 0px)', transition: enableAnimation ?  'transform 0.5s' : ''}\">\n        </jigsaw-tab-content>\n    </div>\n</div>\n\n<ng-template #tabsList>\n    <j-list class=\"jigsaw-tabs-list\"\n            (mouseenter)=\"_$clearPopupTimeout()\"\n            (mouseleave)=\"_$menuAreaLeave()\"\n            [perfectScrollbar]=\"{suppressScrollX: true, wheelSpeed: 0.5, wheelPropagation: true, minScrollbarLength: 20}\">\n        <jigsaw-list-option *ngFor=\"let tab of _$tabPanes; let i = index;\" [value]=\"tab\" (click)=\"_$listOptionClick(i)\"\n                            [disabled]=\"tab.disabled\" [class.jigsaw-list-option-hidden]=\"tab.hidden\">\n            <div [class.jigsaw-list-option-selected]=\"_$selectedIndex === i\">\n                <span class=\"fa fa-check\" *ngIf=\"_$selectedIndex === i\"></span>\n                <span style=\"display: inline-block\" [innerHTML]=\"_$tabList[i]\"></span>\n            </div>\n        </jigsaw-list-option>\n    </j-list>\n</ng-template>\n","import * as tslib_1 from \"tslib\";\nimport { QueryList, AfterViewInit, EventEmitter, TemplateRef, ViewContainerRef, ComponentFactoryResolver, Type, ChangeDetectorRef, AfterViewChecked, ElementRef, EmbeddedViewRef } from '@angular/core';\nimport { JigsawTabPane } from \"./tab-pane\";\nimport { JigsawTabContent, JigsawTabLabel } from \"./tab-item\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { PopupService, PopupSize } from \"../../common/service/popup.service\";\n/**\n * 使用`JigsawTab`来将一组视图叠加在同一个区域使用，并以页签的方式来切换这些视图。\n * `JigsawTab`提供了多个api用于动态创建、销毁、隐藏tab页，\n * 这些是利用`JigsawTab`实现复杂、交互密集的视图的有力工具。\n *\n * 如果需要动态增减的视图内容形式比较单一，也可以通过`ng-for`来实现tab动态化，\n * 参考[这个demo]($demo=tab/with-ngfor)。\n *\n * $demo = tab/basic\n * $demo = tab/update-title\n * $demo = tab/with-input\n */\nvar JigsawTab = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTab, _super);\n    function JigsawTab(_cfr, _changeDetector, _viewContainer, _elementRef, _popupService) {\n        var _this = _super.call(this) || this;\n        _this._cfr = _cfr;\n        _this._changeDetector = _changeDetector;\n        _this._viewContainer = _viewContainer;\n        _this._elementRef = _elementRef;\n        _this._popupService = _popupService;\n        /**\n         * 当所选的tab页发生变化时发出此事件，事件携带的是被选中的tab页实例，\n         * 如果需要索引值，请使用`selectedIndexChange`事件。\n         *\n         */\n        _this.selectChange = new EventEmitter();\n        /**\n         * 删除tab时，发出事件，携带删除的tab索引值\n         *\n         * $demo = tab/editable\n         *\n         */\n        _this.remove = new EventEmitter();\n        /**\n         * 发送add事件，携带tabs的实例\n         *\n         * $demo = tab/editable\n         *\n         */\n        _this.add = new EventEmitter();\n        /**\n         * 改变tab标题时发送此事件，事件携带一个`TabTitleInfo`类型的数据。\n         *\n         *\n         */\n        _this.titleChange = new EventEmitter();\n        _this._$headless = false;\n        _this.enableAnimation = true;\n        /**\n         * 当前选中的tab页编号发生变化时，发出此事件。\n         * 事件携带的是索引值，如果需要获取更多信息，请参考`selectChange`事件。\n         *\n         *\n         */\n        _this.selectedIndexChange = new EventEmitter();\n        /**\n         * @internal\n         */\n        _this._$inkBarStyle = {};\n        /**\n         * @internal\n         */\n        _this._$showOverflowButton = false;\n        /**\n         * @internal\n         */\n        _this._$selectTabStyle = {};\n        /**\n         * @internal\n         */\n        _this._$tabList = [];\n        _this._tabLeftMap = new Map();\n        return _this;\n    }\n    Object.defineProperty(JigsawTab.prototype, \"headless\", {\n        /**\n         * 控制tab头部是否显示\n         *\n         * $demo = tab/headless\n         *\n         *\n         */\n        get: function () {\n            return this._$headless;\n        },\n        set: function (value) {\n            if (this._$headless == value) {\n                return;\n            }\n            this._$headless = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * tab页点击\n     * @internal\n     */\n    JigsawTab.prototype._$tabClick = function (index) {\n        this.selectedIndex = index;\n        this._updateTitlePosition(index);\n    };\n    Object.defineProperty(JigsawTab.prototype, \"selectedIndex\", {\n        /**\n         * 当前选中的tab页编号，在双绑模式下，改变这个值可以实现选中tab页的切换。\n         *\n         */\n        get: function () {\n            return this._$selectedIndex;\n        },\n        set: function (value) {\n            if (this._$selectedIndex !== value && typeof value == 'number') {\n                this._$selectedIndex = value;\n                if (this.initialized) {\n                    this._handleSelectChange(value);\n                }\n                this._changeDetector.detectChanges();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTab.prototype._handleSelectChange = function (index) {\n        this.selectChange.emit(this._getTabPaneByIndex(index));\n        this.selectedIndexChange.emit(index);\n        this._asyncSetStyle(index);\n    };\n    JigsawTab.prototype._setInkBarStyle = function (index) {\n        if (!this._tabsInkBar || this._tabLabels.length == 0)\n            return;\n        var labelPos = this._getLabelOffsetByKey(index);\n        if (!labelPos) {\n            return;\n        }\n        this._$inkBarStyle = {\n            'display': 'block',\n            'transform': 'translate3d(' + (labelPos.offSet + this._tabLeftMap.get(this.selectedIndex)) + 'px, 0px, 0px)',\n            'width': labelPos.width + 'px'\n        };\n    };\n    // 将有纵向切换的封装.\n    JigsawTab.prototype._getLabelOffsetByKey = function (key) {\n        var currentLabel = this._tabLabels.find(function (item) { return item.key === key; });\n        if (currentLabel) {\n            return {\n                offSet: currentLabel.getOffsetLeft(),\n                width: currentLabel.getOffsetWidth()\n            };\n        }\n        else {\n            return null;\n        }\n    };\n    JigsawTab.prototype._getTabPaneByIndex = function (key) {\n        return this._$tabPanes.find(function (item, index) { return index === key; });\n    };\n    JigsawTab.prototype._autoSelect = function () {\n        this.selectedIndex = this._$tabPanes.toArray().findIndex(function (tabPane) { return !tabPane.disabled && !tabPane.hidden; });\n    };\n    JigsawTab.prototype._asyncSetStyle = function (index) {\n        var _this = this;\n        this.callLater(function () { return _this._setInkBarStyle(index); });\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$handleAdd = function () {\n        this.add.emit(this);\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$handleRemove = function (index) {\n        this.removeTab(index);\n        this.remove.emit(index);\n    };\n    JigsawTab.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n    };\n    JigsawTab.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._createTabList();\n        this._tabLabelsChangeHandler = this._tabLabels.changes.subscribe(function () { return _this._createTabList(); });\n        if (this.selectedIndex != null) {\n            this._handleSelectChange(this.selectedIndex);\n        }\n        else {\n            this._autoSelect();\n        }\n        this.length = this._$tabPanes.length;\n    };\n    JigsawTab.prototype.ngOnDestroy = function () {\n        if (this._tabLabelsChangeHandler) {\n            this._tabLabelsChangeHandler.unsubscribe();\n        }\n    };\n    // 注意此方法会被频繁调用，性能要求高\n    JigsawTab.prototype.ngAfterViewChecked = function () {\n        if (!this._tabsInkBar || this._tabLabels.length == 0)\n            return;\n        this._createTabList();\n        var labelPos = this._getLabelOffsetByKey(this.selectedIndex);\n        if (!labelPos) {\n            return;\n        }\n        var tabElem = this._tabsInkBar.nativeElement;\n        if (tabElem.offsetWidth != labelPos.width) {\n            this._setInkBarStyle(this.selectedIndex);\n        }\n        else {\n            var match = (tabElem.style.transform + '').match(/\\btranslate3d\\s*\\((\\d+)px\\s*,/);\n            var offset = match ? match[1] : -1;\n            if (offset != labelPos.offSet + this._tabLeftMap.get(this.selectedIndex)) {\n                this._setInkBarStyle(this.selectedIndex);\n            }\n        }\n    };\n    /**\n     * 隐藏对应的Tab页，使用户在界面上看不到它，页无法对它做操作。\n     * 注意这个方法不会销毁tab页内的组件，如果需要销毁tab页，请使用`removeTab`。\n     * 被隐藏的tab页可以通过`showTab`方法让他们再次显示出来。\n     *\n     * $demo = tab/api\n     * $demo = tab/hide-tab\n     *\n     * @param index tab页的编号，从0开始\n     */\n    JigsawTab.prototype.hideTab = function (index) {\n        var tabPane = this._getTabPaneByIndex(index);\n        if (!this._isTabPane(tabPane))\n            return;\n        tabPane.hidden = true;\n        this._handleSelect();\n    };\n    /**\n     * 将对应的Tab页切换为激活状态，当指定的tab页是隐藏状态时，它将被设置为正常状态并被激活。\n     *\n     * $demo = tab/api\n     * $demo = tab/show-tab\n     *\n     * @param index tab页的编号，从0开始\n     */\n    JigsawTab.prototype.showTab = function (index) {\n        var tabPane = this._getTabPaneByIndex(index);\n        if (!this._isTabPane(tabPane))\n            return;\n        tabPane.hidden = false;\n        this.selectedIndex = index;\n    };\n    JigsawTab.prototype._isTabPane = function (tabPane) {\n        if (!tabPane) {\n            console.info(\"no tab-pane found...\");\n            return false;\n        }\n        else {\n            return true;\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype.addTab = function (title, content, initData, activateImmediately) {\n        var _this = this;\n        if (activateImmediately === void 0) { activateImmediately = true; }\n        var factory = this._cfr.resolveComponentFactory(JigsawTabPane);\n        var tabPane = this._viewContainer.createComponent(factory).instance;\n        if (typeof title == 'string') {\n            tabPane.title = title;\n        }\n        else {\n            tabPane.label = title;\n        }\n        tabPane.content = content;\n        tabPane.initData = initData;\n        var tabTemp = this._$tabPanes.toArray();\n        tabTemp.push(tabPane);\n        this._$tabPanes.reset(tabTemp);\n        this.length = this._$tabPanes.length;\n        if (activateImmediately) {\n            this.selectedIndex = this._$tabPanes.length - 1;\n        }\n        //router link\n        this.callLater(function () {\n            var label = _this._tabLabels.find(function (item) { return item.key === _this.selectedIndex; });\n            if (!label) {\n                return;\n            }\n            var link = label.elementRef.nativeElement.querySelector('[routerLink]');\n            if (!link) {\n                return;\n            }\n            link.click();\n        });\n    };\n    /**\n     * 销毁指定的Tab页，注意此操作不可恢复，可以使用`hideTab`来隐藏一个tab页，而非销毁它。\n     *\n     * $demo = tab/destroy-tab\n     * $demo = tab/api\n     *\n     * @param index 目标tab页的编号，从0开始计数。\n     */\n    JigsawTab.prototype.removeTab = function (index) {\n        if (this._$tabPanes.length - index < 1) {\n            console.info(\"没有对应tab-pane 供删除\");\n            return;\n        }\n        var tabTemp = this._$tabPanes.toArray();\n        tabTemp.splice(index, 1); // 去掉要删除的元素;\n        // 重新修改queryList. 不确定这么做有没有什么隐患.\n        this._$tabPanes.reset(tabTemp);\n        this.length = this._$tabPanes.length;\n        if (this.selectedIndex == index) {\n            this._handleSelect();\n        }\n        else if (this.selectedIndex > index) {\n            this.selectedIndex = this.selectedIndex - 1;\n        }\n    };\n    /**\n     * 当 没有指定选择哪个tab时自动处理选中的函数:\n     * 使用场景:\n     *  1. 隐藏了当前选中的tab-pane\n     *  2. 删除了当前的tab-pane\n     *  规则: 1. 最后一个非disabled的tabPane\n     *        2. 否则隐藏tab 条.\n     *\n     */\n    JigsawTab.prototype._handleSelect = function () {\n        var tabPane = this._getTabPaneByIndex(this.selectedIndex);\n        if (!tabPane || tabPane.hidden || tabPane.disabled) {\n            this._autoSelect();\n        }\n        else {\n            this._asyncSetStyle(this.selectedIndex);\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$popupTabList = function (tabsList, event, overflowButton) {\n        var _this = this;\n        this._$clearPopupTimeout();\n        if (!this._tabsListPopupInfo) {\n            var size = new PopupSize();\n            size.width = 190;\n            size.height = 150;\n            this._tabsListPopupInfo = this._popupService.popup(tabsList, {\n                modal: false,\n                size: size,\n                showBorder: false,\n                pos: overflowButton,\n                posOffset: {\n                    top: overflowButton.offsetHeight,\n                    right: overflowButton.offsetWidth\n                },\n                posReviser: function (pos, popupElement) {\n                    return _this._popupService.positionReviser(pos, popupElement, {\n                        offsetHeight: overflowButton.offsetHeight,\n                        direction: 'v'\n                    });\n                }\n            });\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$menuAreaLeave = function () {\n        var _this = this;\n        this._$clearPopupTimeout();\n        this._popupTimeout = this.callLater(function () {\n            if (_this._tabsListPopupInfo) {\n                _this._tabsListPopupInfo.dispose();\n                _this._tabsListPopupInfo.element = null;\n                _this._tabsListPopupInfo = null;\n            }\n            _this._popupTimeout = null;\n        }, 400);\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$clearPopupTimeout = function () {\n        if (this._popupTimeout) {\n            this.clearCallLater(this._popupTimeout);\n            this._popupTimeout = null;\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTab.prototype._$listOptionClick = function (index) {\n        if (this._$tabPanes.toArray()[index].disabled)\n            return;\n        this.selectedIndex = index;\n    };\n    JigsawTab.prototype._createTabList = function () {\n        var _this = this;\n        if (this._$headless || !this._tabsNavWrap) {\n            return;\n        }\n        this._$tabList = [];\n        this._tabLeftMap.clear();\n        this._tabLabels.forEach(function (label, index) {\n            var title = \"\";\n            var rootNodes = label._tabItemRef.rootNodes;\n            if (rootNodes) {\n                for (var i = 0; i < rootNodes.length; i++) {\n                    if (rootNodes[i] instanceof HTMLElement) {\n                        title += \" \" + rootNodes[i].outerHTML;\n                    }\n                    else {\n                        title += \" \" + rootNodes[i].textContent.trim();\n                    }\n                }\n            }\n            _this._$tabList.push(title.trim());\n            var distance = label.getOffsetLeft() + label.getOffsetWidth() - _this._tabsNavWrap.nativeElement.offsetWidth;\n            _this._tabLeftMap.set(index, distance > 0 ? (0 - distance) : 0);\n        });\n        this._updateOverflowButton();\n        this._updateTitlePosition(this.selectedIndex);\n    };\n    JigsawTab.prototype._updateTitlePosition = function (index) {\n        this._$selectTabStyle = {\n            \"left\": this._tabLeftMap.get(index) + \"px\"\n        };\n    };\n    JigsawTab.prototype._updateOverflowButton = function () {\n        if (!this._tabsNav || !this._tabsNavWrap)\n            return;\n        this._$showOverflowButton = this._tabsNavWrap.nativeElement.offsetWidth < this._tabsNav.nativeElement.offsetWidth;\n        this._changeDetector.detectChanges();\n    };\n    JigsawTab.prototype.onResize = function () {\n        this._createTabList();\n    };\n    return JigsawTab;\n}(AbstractJigsawComponent));\nexport { JigsawTab };\n","import {\n    Component,\n    ContentChildren,\n    QueryList,\n    Input,\n    ViewChildren,\n    AfterViewInit,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ViewContainerRef,\n    ComponentFactoryResolver,\n    Type,\n    ChangeDetectorRef,\n    AfterViewChecked,\n    ViewChild,\n    ElementRef,\n    EmbeddedViewRef,\n    HostListener\n} from '@angular/core';\nimport {JigsawTabPane} from \"./tab-pane\";\nimport {JigsawTabContent, JigsawTabLabel, TabTitleInfo} from \"./tab-item\";\nimport {AbstractJigsawComponent, IDynamicInstantiatable} from \"../../common/common\";\nimport {PopupService, PopupSize, PopupInfo, PopupPositionValue} from \"../../common/service/popup.service\";\nimport {Subscription} from \"rxjs\";\n\n/**\n * 使用`JigsawTab`来将一组视图叠加在同一个区域使用，并以页签的方式来切换这些视图。\n * `JigsawTab`提供了多个api用于动态创建、销毁、隐藏tab页，\n * 这些是利用`JigsawTab`实现复杂、交互密集的视图的有力工具。\n *\n * 如果需要动态增减的视图内容形式比较单一，也可以通过`ng-for`来实现tab动态化，\n * 参考[这个demo]($demo=tab/with-ngfor)。\n *\n * $demo = tab/basic\n * $demo = tab/update-title\n * $demo = tab/with-input\n */\n@Component({\n    selector: 'jigsaw-tab, j-tab, jigsaw-tabs, j-tabs',\n    templateUrl: 'tab.html',\n    host: {\n        '[class.jigsaw-tabs-host]': 'true',\n        '[style.width]': 'width',\n        '[style.height]': 'height'\n    }\n})\nexport class JigsawTab extends AbstractJigsawComponent implements AfterViewInit, AfterViewChecked {\n\n    constructor(private _cfr: ComponentFactoryResolver,\n                private _changeDetector: ChangeDetectorRef,\n                private _viewContainer: ViewContainerRef,\n                private _elementRef: ElementRef,\n                private _popupService: PopupService) {\n        super();\n    }\n\n    /**\n     * @internal\n     */\n    @ContentChildren(JigsawTabPane)\n    public _$tabPanes: QueryList<JigsawTabPane>;\n\n    @ViewChildren(JigsawTabLabel)\n    private _tabLabels: QueryList<JigsawTabLabel>;\n\n    /**\n     * @internal\n     */\n    @ViewChildren(JigsawTabContent)\n    public _tabContents: QueryList<JigsawTabContent>;\n\n    /**\n     * 当所选的tab页发生变化时发出此事件，事件携带的是被选中的tab页实例，\n     * 如果需要索引值，请使用`selectedIndexChange`事件。\n     *\n     */\n    @Output()\n    public selectChange = new EventEmitter<JigsawTabPane>();\n\n    /**\n     * 删除tab时，发出事件，携带删除的tab索引值\n     *\n     * $demo = tab/editable\n     *\n     */\n    @Output()\n    public remove = new EventEmitter<number>();\n\n    /**\n     * 发送add事件，携带tabs的实例\n     *\n     * $demo = tab/editable\n     *\n     */\n    @Output()\n    public add = new EventEmitter<JigsawTab>();\n\n    /**\n     * 改变tab标题时发送此事件，事件携带一个`TabTitleInfo`类型的数据。\n     *\n     *\n     */\n    @Output()\n    public titleChange = new EventEmitter<TabTitleInfo>();\n\n    @ViewChild('tabsInkBar', {static: false})\n    private _tabsInkBar: ElementRef;\n\n    /**\n     * 控制tab显示添加和删除按钮\n     *\n     * $demo = tab/editable\n     *\n     *\n     */\n    @Input()\n    public editable: boolean;\n\n    public _$headless: boolean = false;\n\n    /**\n     * 控制tab头部是否显示\n     *\n     * $demo = tab/headless\n     *\n     *\n     */\n\n    @Input()\n    public get headless(): boolean {\n        return this._$headless;\n    }\n\n    public set headless(value: boolean) {\n        if (this._$headless == value) {\n            return;\n        }\n        this._$headless = value;\n    }\n\n    @Input()\n    public enableAnimation: boolean = true;\n\n    /**\n     * 当前的tab页数量，包含被隐藏的tab页\n     */\n    public length: number;\n\n    /**\n     * tab页点击\n     * @internal\n     */\n    public _$tabClick(index) {\n        this.selectedIndex = index;\n        this._updateTitlePosition(index);\n    }\n\n    /**\n     * @internal\n     */\n    public _$selectedIndex: number;\n\n    /**\n     * 当前选中的tab页编号，在双绑模式下，改变这个值可以实现选中tab页的切换。\n     *\n     */\n    @Input()\n    public get selectedIndex(): number {\n        return this._$selectedIndex;\n    }\n\n    public set selectedIndex(value: number) {\n        if (this._$selectedIndex !== value && typeof value == 'number') {\n            this._$selectedIndex = value;\n\n            if (this.initialized) {\n                this._handleSelectChange(value)\n            }\n            this._changeDetector.detectChanges();\n        }\n    }\n\n    /**\n     * 当前选中的tab页编号发生变化时，发出此事件。\n     * 事件携带的是索引值，如果需要获取更多信息，请参考`selectChange`事件。\n     *\n     *\n     */\n    @Output()\n    public selectedIndexChange = new EventEmitter<number>();\n\n    private _handleSelectChange(index) {\n        this.selectChange.emit(this._getTabPaneByIndex(index));\n        this.selectedIndexChange.emit(index);\n\n        this._asyncSetStyle(index);\n    }\n\n    /**\n     * @internal\n     */\n    public _$inkBarStyle: object = {};\n\n    private _setInkBarStyle(index: number) {\n        if (!this._tabsInkBar || this._tabLabels.length == 0) return;\n\n        let labelPos = this._getLabelOffsetByKey(index);\n        if (!labelPos) {\n            return;\n        }\n\n        this._$inkBarStyle = {\n            'display': 'block',\n            'transform': 'translate3d(' + (labelPos.offSet + this._tabLeftMap.get(this.selectedIndex)) + 'px, 0px, 0px)',\n            'width': labelPos.width + 'px'\n        }\n    }\n\n    // 将有纵向切换的封装.\n    private _getLabelOffsetByKey(key: number): any {\n        let currentLabel = this._tabLabels.find(item => item.key === key);\n\n        if (currentLabel) {\n            return {\n                offSet: currentLabel.getOffsetLeft(),\n                width: currentLabel.getOffsetWidth()\n            }\n        } else {\n            return null;\n        }\n    }\n\n    private _getTabPaneByIndex(key): JigsawTabPane {\n        return this._$tabPanes.find((item, index) => index === key);\n    }\n\n    private _autoSelect() {\n        this.selectedIndex = this._$tabPanes.toArray().findIndex(tabPane => !tabPane.disabled && !tabPane.hidden);\n    }\n\n    private _asyncSetStyle(index: number): void {\n        this.callLater(() => this._setInkBarStyle(index));\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleAdd() {\n        this.add.emit(this);\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleRemove(index) {\n        this.removeTab(index);\n        this.remove.emit(index);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n    }\n\n    private _tabLabelsChangeHandler: Subscription;\n\n    ngAfterViewInit() {\n        this._createTabList();\n        this._tabLabelsChangeHandler = this._tabLabels.changes.subscribe(() => this._createTabList());\n        if (this.selectedIndex != null) {\n            this._handleSelectChange(this.selectedIndex)\n        } else {\n            this._autoSelect();\n        }\n\n        this.length = this._$tabPanes.length;\n    }\n\n    ngOnDestroy() {\n        if (this._tabLabelsChangeHandler) {\n            this._tabLabelsChangeHandler.unsubscribe();\n        }\n    }\n\n    // 注意此方法会被频繁调用，性能要求高\n    ngAfterViewChecked() {\n        if (!this._tabsInkBar || this._tabLabels.length == 0) return;\n        this._createTabList();\n        const labelPos = this._getLabelOffsetByKey(this.selectedIndex);\n        if (!labelPos) {\n            return;\n        }\n\n        const tabElem = this._tabsInkBar.nativeElement;\n        if (tabElem.offsetWidth != labelPos.width) {\n            this._setInkBarStyle(this.selectedIndex)\n        } else {\n            const match = (tabElem.style.transform + '').match(/\\btranslate3d\\s*\\((\\d+)px\\s*,/);\n            const offset = match ? match[1] : -1;\n            if (offset != labelPos.offSet + this._tabLeftMap.get(this.selectedIndex)) {\n                this._setInkBarStyle(this.selectedIndex)\n            }\n        }\n    }\n\n    /**\n     * 隐藏对应的Tab页，使用户在界面上看不到它，页无法对它做操作。\n     * 注意这个方法不会销毁tab页内的组件，如果需要销毁tab页，请使用`removeTab`。\n     * 被隐藏的tab页可以通过`showTab`方法让他们再次显示出来。\n     *\n     * $demo = tab/api\n     * $demo = tab/hide-tab\n     *\n     * @param index tab页的编号，从0开始\n     */\n    public hideTab(index: number): void {\n        let tabPane = this._getTabPaneByIndex(index);\n\n        if (!this._isTabPane(tabPane)) return;\n\n        tabPane.hidden = true;\n\n        this._handleSelect();\n    }\n\n    /**\n     * 将对应的Tab页切换为激活状态，当指定的tab页是隐藏状态时，它将被设置为正常状态并被激活。\n     *\n     * $demo = tab/api\n     * $demo = tab/show-tab\n     *\n     * @param index tab页的编号，从0开始\n     */\n    public showTab(index: number) {\n        let tabPane = this._getTabPaneByIndex(index);\n\n        if (!this._isTabPane(tabPane)) return;\n\n        tabPane.hidden = false;\n        this.selectedIndex = index;\n    }\n\n    private _isTabPane(tabPane: any): boolean {\n        if (!tabPane) {\n            console.info(\"no tab-pane found...\");\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * 通过编程的方式添加一个新的tab页\n     *\n     * $demo = tab/api\n     *\n     * @param titleString 以一个简单的字符串作为标题\n     * @param contentTemplate 以一个`ng-template`标签包围起来的模板作为tab页的内容，\n     * 当tab页的内容比较简单时，建议采用此方式。\n     * @param initData 提供给`contentTemplate`的初始化数据\n     * @param activateImmediately 是否立即激活新增的Tab页，默认值是`true`\n     */\n    public addTab(titleString: string, contentTemplate: TemplateRef<any>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @param titleTemplate 以一个`ng-template`标签包围起来的模板作为标题，\n     * 这样可以彻底定制化新增的tab的标题部分，例如加图标，甚至添加按钮、进度条等复杂视图。\n     * @param contentTemplate\n     * @param initData\n     * @param activateImmediately\n     */\n    public addTab(titleTemplate: TemplateRef<any>, contentTemplate: TemplateRef<any>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @param titleComponent 以一个组件作为标题，这样可以彻底定制化新增的tab的标题部分，\n     * 例如加图标，甚至添加按钮、进度条等复杂视图。\n     * @param contentTemplate\n     * @param initData\n     * @param activateImmediately\n     */\n    public addTab(titleComponent: Type<IDynamicInstantiatable>, contentTemplate: TemplateRef<any>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @param titleString\n     * @param contentComponent 以一个组件作为tab页的内容，\n     * 如果新增的tab页内容比较复杂，建议采用此方式添加，以让各部分代码的耦合解开。\n     * @param initData\n     * @param activateImmediately\n     */\n    public addTab(titleString: string, contentComponent: Type<IDynamicInstantiatable>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @param titleTemplate\n     * @param contentComponent\n     * @param initData\n     * @param activateImmediately\n     */\n    public addTab(titleTemplate: TemplateRef<any>, contentComponent: Type<IDynamicInstantiatable>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @param titleComponent\n     * @param contentComponent\n     * @param initData\n     * @param activateImmediately\n     */\n    public addTab(titleComponent: Type<IDynamicInstantiatable>, contentComponent: Type<IDynamicInstantiatable>,\n                  initData?: Object, activateImmediately?: boolean);\n    /**\n     * @internal\n     */\n    public addTab(title: string | TemplateRef<any> | Type<IDynamicInstantiatable>,\n                  content: TemplateRef<any> | Type<IDynamicInstantiatable>,\n                  initData?: Object, activateImmediately: boolean = true) {\n        const factory = this._cfr.resolveComponentFactory(JigsawTabPane);\n        let tabPane: JigsawTabPane = this._viewContainer.createComponent(factory).instance;\n        if (typeof title == 'string') {\n            tabPane.title = title\n        } else {\n            tabPane.label = title;\n        }\n        tabPane.content = content;\n        tabPane.initData = initData;\n\n        let tabTemp = this._$tabPanes.toArray();\n        tabTemp.push(tabPane);\n        this._$tabPanes.reset(tabTemp);\n        this.length = this._$tabPanes.length;\n        if (activateImmediately) {\n            this.selectedIndex = this._$tabPanes.length - 1;\n        }\n\n        //router link\n        this.callLater(() => {\n            const label = this._tabLabels.find(item => item.key === this.selectedIndex);\n            if (!label) {\n                return;\n            }\n            const link = label.elementRef.nativeElement.querySelector('[routerLink]');\n            if (!link) {\n                return;\n            }\n            link.click();\n        });\n    }\n\n    /**\n     * 销毁指定的Tab页，注意此操作不可恢复，可以使用`hideTab`来隐藏一个tab页，而非销毁它。\n     *\n     * $demo = tab/destroy-tab\n     * $demo = tab/api\n     *\n     * @param index 目标tab页的编号，从0开始计数。\n     */\n    public removeTab(index) {\n        if (this._$tabPanes.length - index < 1) {\n            console.info(\"没有对应tab-pane 供删除\");\n            return;\n        }\n\n        let tabTemp = this._$tabPanes.toArray();\n        tabTemp.splice(index, 1); // 去掉要删除的元素;\n\n        // 重新修改queryList. 不确定这么做有没有什么隐患.\n        this._$tabPanes.reset(tabTemp);\n        this.length = this._$tabPanes.length;\n        if (this.selectedIndex == index) {\n            this._handleSelect()\n        } else if (this.selectedIndex > index) {\n            this.selectedIndex = this.selectedIndex - 1\n        }\n    }\n\n    /**\n     * 当 没有指定选择哪个tab时自动处理选中的函数:\n     * 使用场景:\n     *  1. 隐藏了当前选中的tab-pane\n     *  2. 删除了当前的tab-pane\n     *  规则: 1. 最后一个非disabled的tabPane\n     *        2. 否则隐藏tab 条.\n     *\n     */\n    private _handleSelect() {\n        let tabPane = this._getTabPaneByIndex(this.selectedIndex);\n\n        if (!tabPane || tabPane.hidden || tabPane.disabled) {\n            this._autoSelect()\n        } else {\n            this._asyncSetStyle(this.selectedIndex);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$showOverflowButton: boolean = false;\n    private _tabsListPopupInfo: PopupInfo;\n    private _popupTimeout: any;\n\n    /**\n     * @internal\n     */\n    public _$popupTabList(tabsList, event, overflowButton) {\n        this._$clearPopupTimeout();\n        if (!this._tabsListPopupInfo) {\n            let size = new PopupSize();\n            size.width = 190;\n            size.height = 150;\n            this._tabsListPopupInfo = this._popupService.popup(tabsList, {\n                modal: false,\n                size: size,\n                showBorder: false,\n                pos: overflowButton,\n                posOffset: { //偏移位置\n                    top: overflowButton.offsetHeight,\n                    right: overflowButton.offsetWidth\n                },\n                posReviser: (pos: PopupPositionValue, popupElement: HTMLElement): PopupPositionValue => {\n                    return this._popupService.positionReviser(pos, popupElement, {\n                        offsetHeight: overflowButton.offsetHeight,\n                        direction: 'v'\n                    });\n                }\n            });\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$menuAreaLeave() {\n        this._$clearPopupTimeout();\n        this._popupTimeout = this.callLater(() => {\n            if (this._tabsListPopupInfo) {\n                this._tabsListPopupInfo.dispose();\n                this._tabsListPopupInfo.element = null;\n                this._tabsListPopupInfo = null;\n            }\n            this._popupTimeout = null;\n        }, 400);\n    }\n\n    /**\n     * @internal\n     */\n    public _$clearPopupTimeout() {\n        if (this._popupTimeout) {\n            this.clearCallLater(this._popupTimeout);\n            this._popupTimeout = null;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$selectTabStyle:  object ={};\n\n    /**\n     * @internal\n     */\n    public _$listOptionClick(index) {\n        if (this._$tabPanes.toArray()[index].disabled) return;\n        this.selectedIndex = index;\n    }\n\n\n    /**\n     * @internal\n     */\n    public _$tabList = [];\n\n    private _tabLeftMap: Map<number, number> = new Map<number, number>();\n\n    private _createTabList() {\n        if (this._$headless || !this._tabsNavWrap) {\n            return;\n        }\n        this._$tabList = [];\n        this._tabLeftMap.clear();\n        this._tabLabels.forEach((label: JigsawTabLabel, index) => {\n            let title = \"\";\n            let rootNodes = (<EmbeddedViewRef<any>>label._tabItemRef).rootNodes;\n            if(rootNodes) {\n                for (let i = 0; i < rootNodes.length; i++) {\n                    if (rootNodes[i] instanceof HTMLElement) {\n                        title += \" \" + rootNodes[i].outerHTML;\n                    } else {\n                        title += \" \" + rootNodes[i].textContent.trim();\n                    }\n                }\n            }\n            this._$tabList.push(title.trim());\n            let distance = label.getOffsetLeft() + label.getOffsetWidth() - this._tabsNavWrap.nativeElement.offsetWidth;\n            this._tabLeftMap.set(index, distance > 0 ? (0 - distance) : 0);\n        });\n        this._updateOverflowButton();\n        this._updateTitlePosition(this.selectedIndex);\n    }\n\n    private _updateTitlePosition(index) {\n        this._$selectTabStyle = {\n            \"left\": this._tabLeftMap.get(index) + \"px\"\n        };\n    }\n\n    @ViewChild('tabsNavWrap', {static: false})\n    private _tabsNavWrap: ElementRef;\n\n    @ViewChild('tabsNav', {static: false})\n    private _tabsNav: ElementRef;\n\n    private _updateOverflowButton() {\n        if(!this._tabsNav || !this._tabsNavWrap) return;\n        this._$showOverflowButton = this._tabsNavWrap.nativeElement.offsetWidth < this._tabsNav.nativeElement.offsetWidth;\n        this._changeDetector.detectChanges();\n    }\n    @HostListener('window:resize')\n    onResize() {\n        this._createTabList();\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tab-pane\";\nvar styles_JigsawTabPane = [];\nvar RenderType_JigsawTabPane = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTabPane, data: {} });\nexport { RenderType_JigsawTabPane as RenderType_JigsawTabPane };\nfunction View_JigsawTabPane_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(0, null, [\" \", \" \"])), i0.ɵncd(null, 0), (_l()(), i0.ɵand(0, null, null, 0))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.title; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_JigsawTabPane_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { label: 0 }), (_l()(), i0.ɵand(0, [[1, 2], [\"label\", 2]], null, 0, null, View_JigsawTabPane_1))], null, null); }\nexport function View_JigsawTabPane_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-tab-pane\", [], null, null, null, View_JigsawTabPane_0, RenderType_JigsawTabPane)), i0.ɵdid(1, 49152, null, 1, i1.JigsawTabPane, [], null, null), i0.ɵqud(335544320, 1, { content: 0 })], null, null); }\nvar JigsawTabPaneNgFactory = i0.ɵccf(\"jigsaw-tab-pane, j-tab-pane\", i1.JigsawTabPane, View_JigsawTabPane_Host_0, { title: \"title\", disabled: \"disabled\", hidden: \"hidden\", async: \"async\", lazy: \"lazy\", initData: \"initData\" }, {}, [\"[jigsaw-title]\"]);\nexport { JigsawTabPaneNgFactory as JigsawTabPaneNgFactory };\n","\n        <ng-template #label>\n            {{title}}\n            <ng-content select=\"[jigsaw-title]\"></ng-content>\n        </ng-template>\n    ","/**\n * Created by 10177553 on 2017/3/29.\n */\n\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\nimport {PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\n\nimport {JigsawTab} from './tab';\nimport {JigsawTabPane} from \"./tab-pane\";\nimport {JigsawTabContent, JigsawTabLabel} from \"./tab-item\";\nimport {JigsawListModule} from \"../list-and-tile/list\";\nimport {JigsawEditableTabTitleRenderer} from \"./tab-renderer\";\nimport {JigsawInputModule} from \"../input/input\";\n\n@NgModule({\n    imports: [CommonModule, PerfectScrollbarModule, JigsawListModule, JigsawInputModule],\n    exports: [JigsawTab, JigsawTabPane, JigsawEditableTabTitleRenderer],\n    declarations: [JigsawTab, JigsawTabPane, JigsawTabLabel, JigsawTabContent, JigsawEditableTabTitleRenderer],\n    providers: [],\n    entryComponents: [JigsawTabPane]\n})\nexport class JigsawTabsModule { }\n\nexport * from './tab';\nexport * from './tab-pane';\nexport * from './tab-renderer';\n"],"sourceRoot":""}