{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/switch/switch.ts","webpack:///./src/jigsaw/pc-components/switch/switch.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.html","webpack:///./src/jigsaw/pc-components/switch/switch.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/switch/switch.html","webpack:///./src/jigsaw/pc-components/switch/index.ts","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ts","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/checkbox/index.ts","webpack:///./src/app/demo/pc/checkbox/full/demo.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/checkbox/full/demo.component.css.shim.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/checkbox/full/demo.component.html","webpack:///./src/app/demo/pc/checkbox/basic/demo.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/checkbox/basic/demo.component.html","webpack:///./src/app/demo/pc/checkbox/disabled/demo.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/checkbox/disabled/demo.component.html","webpack:///./src/app/demo/pc/checkbox/basic/demo.module.ts","webpack:///./src/app/demo/pc/checkbox/disabled/demo.module.ts","webpack:///./src/app/demo/pc/checkbox/full/demo.module.ts","webpack:///./src/app/demo/pc/checkbox/demo-set.module.ngfactory.js.pre-build-optimizer.js"],"names":["__webpack_require__","d","__webpack_exports__","JigsawSwitch","_angular_core__WEBPACK_IMPORTED_MODULE_0__","this","valid","size","_checked","checkedChange","change","_disabled","_propagateChange","Object","defineProperty","prototype","get","set","value","writeValue","enumerable","configurable","_setSwitchClass","_$switchClick","disabled","checked","emit","_$switchClass","jigsaw-switch","jigsaw-switch-small","jigsaw-switch-checked","jigsaw-switch-disabled","_setInnerValue","_$content","onLabel","offLabel","ngOnInit","registerOnChange","fn","registerOnTouched","RenderType_JigsawCheckBox","View_JigsawCheckBox_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","encapsulation","styles","data","_l","_v","en","$event","ad","component","_$onCheckboxClick","ngClass","_ck","_$checkboxClass","RenderType_JigsawSwitch","View_JigsawSwitch_0","JigsawSwitchModule","JigsawCheckBox","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","_typings__WEBPACK_IMPORTED_MODULE_3__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_4__","_super","_renderer","_elementRef","_this","call","_enableIndeterminate","unchecked","_valueCandidates","push","indeterminate","_setCheckBoxClass","ngAfterContentInit","labelEl","nativeElement","querySelector","innerText","trim","setStyle","_toggle","index","indexOf","length","_fixCheckValue","isUndefined","event","stopPropagation","preventDefault","jigsaw-checkbox","jigsaw-checkbox-checked","jigsaw-checkbox-indeterminate","jigsaw-checkbox-disabled","JigsawCheckBoxModule","RenderType_CheckBoxFullComponent","core","View_CheckBoxFullComponent_0","demo_description_ngfactory","demo_description","content","codes","summary","_co","demo1Checked","enableIndeterminate","checkbox_ngfactory","fesm5_forms","p0_0","checkbox_checkbox","switch_ngfactory","switch_switch","demo2Checked","demo3Checked","enabled","description","__codes","width","View_CheckBoxFullComponent_Host_0","demo_component","CheckBoxFullComponentNgFactory","RenderType_CheckBoxBasicDemoComponent","View_CheckBoxBasicDemoComponent_0","status","View_CheckBoxBasicDemoComponent_Host_0","basic_demo_component","CheckBoxBasicDemoComponentNgFactory","RenderType_CheckBoxDisableDemoComponent","View_CheckBoxDisableDemoComponent_0","View_CheckBoxDisableDemoComponent_Host_0","disabled_demo_component","CheckBoxDisableDemoComponentNgFactory","CheckBoxBasicDemoModule","CheckBoxDisableDemoModule","CheckBoxFullModule","CheckBoxDemoModuleNgFactory","demo_set_module","router_ngfactory","common","router","pc_components_checkbox","pc_components_switch","markdown","path"],"mappings":"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","file":"20.a342900a26689b6564cb.js","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit, forwardRef} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\n@Component({\n    selector: 'jigsaw-switch, j-switch',\n    templateUrl: './switch.html',\n    host: {\n        '[class.jigsaw-switch-host]': 'true',\n        '[class.jigsaw-switch-error]': '!valid'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawSwitch), multi: true},\n    ]\n})\n\nexport class JigsawSwitch implements ControlValueAccessor, OnInit {\n    @Input()\n    public valid: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$content: any; // 当前显示的内容.\n\n    /**\n     * 开关状态打开时的文本.(只支持字符串)\n     */\n    @Input()\n    public onLabel: any;\n\n    /**\n     * 开关状态关闭时显示的文本(只支持字符串)\n     */\n    @Input()\n    public offLabel: any;\n\n    /**\n     * size 默认 'default' 可选值 ‘small’\n     */\n    @Input()\n    public size: string = 'default';\n\n    private _checked: boolean = false;\n\n    /**\n     * 选中 默认值false;\n     *\n     */\n    @Input()\n    public get checked(): boolean  { return this._checked};\n    public set checked(value: boolean) {\n        this.writeValue(value);\n        this._propagateChange(value);\n    }\n\n    /**\n     * 可以忽略, 主要使checked 属性支持双向数据绑定.\n     */\n    @Output() public checkedChange = new EventEmitter<boolean>();\n\n    /**\n     * 对外暴露事件,\n     */\n    @Output() public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 是否禁用 类型 boolean 默认值 false;\n     *\n     */\n    @Input()\n    public get disabled(): boolean { return this._disabled; };\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setSwitchClass();\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClick() {\n        if(!this.disabled) {\n            this.checked = !this.checked;\n\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClass: {};\n\n    /**\n     * 更新控件样式的方法\n     */\n    private _setSwitchClass() {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        }\n    }\n\n    /**\n     * 设置选中和费选中的值.\n     */\n    private _setInnerValue() {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    }\n\n    public ngOnInit() {\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    private _propagateChange: any = () => {};\n\n    public writeValue(value: any): void {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\nvar JigsawSwitch = /** @class */ (function () {\n    function JigsawSwitch() {\n        this.valid = true;\n        /**\n         * size 默认 'default' 可选值 ‘small’\n         */\n        this.size = 'default';\n        this._checked = false;\n        /**\n         * 可以忽略, 主要使checked 属性支持双向数据绑定.\n         */\n        this.checkedChange = new EventEmitter();\n        /**\n         * 对外暴露事件,\n         */\n        this.change = this.checkedChange;\n        this._disabled = false;\n        this._propagateChange = function () { };\n    }\n    Object.defineProperty(JigsawSwitch.prototype, \"checked\", {\n        /**\n         * 选中 默认值false;\n         *\n         */\n        get: function () { return this._checked; },\n        set: function (value) {\n            this.writeValue(value);\n            this._propagateChange(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(JigsawSwitch.prototype, \"disabled\", {\n        /**\n         * 是否禁用 类型 boolean 默认值 false;\n         *\n         */\n        get: function () { return this._disabled; },\n        set: function (value) {\n            this._disabled = value;\n            this._setSwitchClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @internal\n     */\n    JigsawSwitch.prototype._$switchClick = function () {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    };\n    /**\n     * 更新控件样式的方法\n     */\n    JigsawSwitch.prototype._setSwitchClass = function () {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        };\n    };\n    /**\n     * 设置选中和费选中的值.\n     */\n    JigsawSwitch.prototype._setInnerValue = function () {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    };\n    JigsawSwitch.prototype.ngOnInit = function () {\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.writeValue = function (value) {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawSwitch.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawSwitch;\n}());\nexport { JigsawSwitch };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * Created by 10177553 on 2017/3/14.\n\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./checkbox\";\nvar styles_JigsawCheckBox = [];\nvar RenderType_JigsawCheckBox = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawCheckBox, data: {} });\nexport { RenderType_JigsawCheckBox as RenderType_JigsawCheckBox };\nexport function View_JigsawCheckBox_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"label\", [[\"class\", \"jigsaw-checkbox-wrapper\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$onCheckboxClick($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"span\", [], null, null, null, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(3, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-checkbox-label\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$checkboxClass; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_JigsawCheckBox_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], null, null, View_JigsawCheckBox_0, RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawCheckBox]), i0.ɵdid(2, 1294336, null, 0, i3.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar JigsawCheckBoxNgFactory = i0.ɵccf(\"jigsaw-checkbox, j-checkbox\", i3.JigsawCheckBox, View_JigsawCheckBox_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", enableIndeterminate: \"enableIndeterminate\", checked: \"checked\", disabled: \"disabled\", valid: \"valid\" }, { checkedChange: \"checkedChange\", change: \"change\" }, [\"*\"]);\nexport { JigsawCheckBoxNgFactory as JigsawCheckBoxNgFactory };\n","<label class=\"jigsaw-checkbox-wrapper\" (click)=\"_$onCheckboxClick($event)\">\n    <span [ngClass]=\"_$checkboxClass\"></span>\n    <span class=\"jigsaw-checkbox-label\">\n        <ng-content></ng-content>\n    </span>\n</label>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./switch\";\nvar styles_JigsawSwitch = [];\nvar RenderType_JigsawSwitch = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawSwitch, data: {} });\nexport { RenderType_JigsawSwitch as RenderType_JigsawSwitch };\nexport function View_JigsawSwitch_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$switchClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-switch-inner\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$switchClass; _ck(_v, 2, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co._$content; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_JigsawSwitch_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], null, null, View_JigsawSwitch_0, RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawSwitch]), i0.ɵdid(2, 114688, null, 0, i3.JigsawSwitch, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar JigsawSwitchNgFactory = i0.ɵccf(\"jigsaw-switch, j-switch\", i3.JigsawSwitch, View_JigsawSwitch_Host_0, { valid: \"valid\", onLabel: \"onLabel\", offLabel: \"offLabel\", size: \"size\", checked: \"checked\", disabled: \"disabled\" }, { checkedChange: \"checkedChange\", change: \"change\" }, []);\nexport { JigsawSwitchNgFactory as JigsawSwitchNgFactory };\n","<div [ngClass]=\"_$switchClass\" (click)=\"_$switchClick()\">\n    <div class=\"jigsaw-switch-inner\">{{_$content}}</div>\n</div>\n","/**\n * Created by 10177553 on 2017/3/16.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\n\nimport { JigsawSwitch } from './switch';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawSwitch],\n    declarations: [JigsawSwitch],\n    providers: [],\n})\nexport class JigsawSwitchModule { }\n\nexport * from './switch';\n","/**\n * Created by 10177553 on 2017/3/14.\n */\n\nimport {\n    Component, Input, EventEmitter, Output, OnInit, AfterContentInit, Renderer2, ElementRef, forwardRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\nimport {AbstractJigsawComponent} from '../../common/common';\nimport {CheckBoxStatus} from \"./typings\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\nexport type CheckBoxValue = boolean | CheckBoxStatus;\n\n/**\n * 复选框组件，支持勾选、非勾选、中间状态3种状态。\n *\n * 这是一个表单友好组件。\n *\n * $demo = checkbox/full\n * $demo = checkbox/basic\n */\n@Component({\n    selector: 'jigsaw-checkbox, j-checkbox',\n    templateUrl: './checkbox.html',\n    host: {\n        '[style.width]': 'width',\n        '[class.jigsaw-checkbox-host]': 'true',\n        '[class.jigsaw-checkbox-error]': '!valid'\n    },\n    providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawCheckBox), multi: true },\n    ]\n})\nexport class JigsawCheckBox extends AbstractJigsawComponent implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    private _enableIndeterminate: boolean = false;\n\n    /**\n     * 复选框是否启用中间状态的开关\n     * - 等于`true`时，用户可以点出中间状态；\n     * - 等于`false`时，用户不可点出中间状态（默认）；\n     *\n     * 编程模式赋值复选框状态时，不受此开关的影响，即即使`enableIndeterminate`被设置为false，\n     * 应用依然可以在代码中直接将组件的状态设置为`CheckBoxStatus.indeterminate`。\n     *\n     * $demo = checkbox/basic\n     */\n    @Input()\n    public get enableIndeterminate(): boolean {\n        return this._enableIndeterminate;\n    }\n\n    public set enableIndeterminate(value: boolean) {\n        this._enableIndeterminate = value;\n        this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n        if (value) {\n            this._valueCandidates.push(CheckBoxStatus.indeterminate);\n        }\n    }\n\n    private _checked: CheckBoxStatus = CheckBoxStatus.unchecked;\n\n    /**\n     * 用于设置复选框的状态，支持的所有状态参考`CheckBoxStatus`，默认值是`CheckBoxStatus.unchecked`\n     *\n     * $demo = checkbox/basic\n     */\n    @Input()\n    public get checked(): CheckBoxValue {\n        return this._checked\n    }\n\n    public set checked(value: CheckBoxValue) {\n        this.writeValue(value);\n    }\n\n    /**\n     * 选中状态变化时发出此事件，此事件可以简化为`change`\n     *\n     */\n    @Output()\n    public checkedChange: EventEmitter<CheckBoxValue> = new EventEmitter();\n\n    /**\n     * 选中状态变化时发出此事件\n     *\n     */\n    @Output()\n    public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n     *\n     * $demo = checkbox/disabled\n     */\n    @Input()\n    public get disabled(): boolean {\n        return this._disabled;\n    }\n\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setCheckBoxClass();\n    }\n\n    @Input()\n    public valid: boolean = true;\n\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._setCheckBoxClass();\n    }\n\n    public ngAfterContentInit() {\n        const labelEl = this._elementRef.nativeElement.querySelector('.jigsaw-checkbox-label');\n        if (labelEl.innerText.trim() === '') {\n            this._renderer.setStyle(labelEl, 'padding', '0');\n        }\n    }\n\n    private _valueCandidates: CheckBoxStatus[] = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n\n    private _toggle(): void {\n        const index = this._valueCandidates.indexOf(this._checked);\n        if (index == -1) {\n            this._checked = this._valueCandidates[1];\n        } else {\n            this._checked = this._valueCandidates[(index + 1) % this._valueCandidates.length];\n        }\n\n        this.checkedChange.emit(this._checked);\n        this._propagateChange(this._checked);\n    }\n\n    private _fixCheckValue(value: CheckBoxValue): CheckBoxStatus {\n        let v: CheckBoxStatus;\n        if (CommonUtils.isUndefined(value)) {\n            v = CheckBoxStatus.unchecked;\n        } else if (typeof value === 'number') {\n            v = value > CheckBoxStatus.indeterminate ? CheckBoxStatus.checked : value;\n        } else {\n            v = value ? CheckBoxStatus.checked : CheckBoxStatus.unchecked;\n        }\n        return v;\n    }\n\n    /**\n     * checkbox点击调用的事件\n     * @param event\n     * @internal\n     */\n    public _$onCheckboxClick(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this._toggle();\n            this._setCheckBoxClass();\n        }\n    }\n\n    /**\n     * 更新checkbox的样式信息\n     * @internal\n     */\n    public _$checkboxClass: {};\n\n    private _setCheckBoxClass() {\n        this._$checkboxClass = {\n            'jigsaw-checkbox': 'true',\n            'jigsaw-checkbox-checked': this._checked,\n            'jigsaw-checkbox-indeterminate': this._checked === CheckBoxStatus.indeterminate,\n            'jigsaw-checkbox-disabled': this.disabled\n        }\n    }\n\n    private _propagateChange:any = () => {};\n\n    public writeValue(value: any): void {\n        this._checked = this._fixCheckValue(value);\n        this._setCheckBoxClass();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","/**\n * Created by 10177553 on 2017/3/14.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EventEmitter, OnInit, AfterContentInit, Renderer2, ElementRef } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from '../../common/common';\nimport { CheckBoxStatus } from \"./typings\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 复选框组件，支持勾选、非勾选、中间状态3种状态。\n *\n * 这是一个表单友好组件。\n *\n * $demo = checkbox/full\n * $demo = checkbox/basic\n */\nvar JigsawCheckBox = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawCheckBox, _super);\n    function JigsawCheckBox(_renderer, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._enableIndeterminate = false;\n        _this._checked = CheckBoxStatus.unchecked;\n        /**\n         * 选中状态变化时发出此事件，此事件可以简化为`change`\n         *\n         */\n        _this.checkedChange = new EventEmitter();\n        /**\n         * 选中状态变化时发出此事件\n         *\n         */\n        _this.change = _this.checkedChange;\n        _this._disabled = false;\n        _this.valid = true;\n        _this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n        _this._propagateChange = function () { };\n        return _this;\n    }\n    Object.defineProperty(JigsawCheckBox.prototype, \"enableIndeterminate\", {\n        /**\n         * 复选框是否启用中间状态的开关\n         * - 等于`true`时，用户可以点出中间状态；\n         * - 等于`false`时，用户不可点出中间状态（默认）；\n         *\n         * 编程模式赋值复选框状态时，不受此开关的影响，即即使`enableIndeterminate`被设置为false，\n         * 应用依然可以在代码中直接将组件的状态设置为`CheckBoxStatus.indeterminate`。\n         *\n         * $demo = checkbox/basic\n         */\n        get: function () {\n            return this._enableIndeterminate;\n        },\n        set: function (value) {\n            this._enableIndeterminate = value;\n            this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n            if (value) {\n                this._valueCandidates.push(CheckBoxStatus.indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawCheckBox.prototype, \"checked\", {\n        /**\n         * 用于设置复选框的状态，支持的所有状态参考`CheckBoxStatus`，默认值是`CheckBoxStatus.unchecked`\n         *\n         * $demo = checkbox/basic\n         */\n        get: function () {\n            return this._checked;\n        },\n        set: function (value) {\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawCheckBox.prototype, \"disabled\", {\n        /**\n         * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n         *\n         * $demo = checkbox/disabled\n         */\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = value;\n            this._setCheckBoxClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawCheckBox.prototype.ngOnInit = function () {\n        this._setCheckBoxClass();\n    };\n    JigsawCheckBox.prototype.ngAfterContentInit = function () {\n        var labelEl = this._elementRef.nativeElement.querySelector('.jigsaw-checkbox-label');\n        if (labelEl.innerText.trim() === '') {\n            this._renderer.setStyle(labelEl, 'padding', '0');\n        }\n    };\n    JigsawCheckBox.prototype._toggle = function () {\n        var index = this._valueCandidates.indexOf(this._checked);\n        if (index == -1) {\n            this._checked = this._valueCandidates[1];\n        }\n        else {\n            this._checked = this._valueCandidates[(index + 1) % this._valueCandidates.length];\n        }\n        this.checkedChange.emit(this._checked);\n        this._propagateChange(this._checked);\n    };\n    JigsawCheckBox.prototype._fixCheckValue = function (value) {\n        var v;\n        if (CommonUtils.isUndefined(value)) {\n            v = CheckBoxStatus.unchecked;\n        }\n        else if (typeof value === 'number') {\n            v = value > CheckBoxStatus.indeterminate ? CheckBoxStatus.checked : value;\n        }\n        else {\n            v = value ? CheckBoxStatus.checked : CheckBoxStatus.unchecked;\n        }\n        return v;\n    };\n    /**\n     * checkbox点击调用的事件\n     * @param event\n     * @internal\n     */\n    JigsawCheckBox.prototype._$onCheckboxClick = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (!this.disabled) {\n            this._toggle();\n            this._setCheckBoxClass();\n        }\n    };\n    JigsawCheckBox.prototype._setCheckBoxClass = function () {\n        this._$checkboxClass = {\n            'jigsaw-checkbox': 'true',\n            'jigsaw-checkbox-checked': this._checked,\n            'jigsaw-checkbox-indeterminate': this._checked === CheckBoxStatus.indeterminate,\n            'jigsaw-checkbox-disabled': this.disabled\n        };\n    };\n    JigsawCheckBox.prototype.writeValue = function (value) {\n        this._checked = this._fixCheckValue(value);\n        this._setCheckBoxClass();\n    };\n    JigsawCheckBox.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawCheckBox.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawCheckBox;\n}(AbstractJigsawComponent));\nexport { JigsawCheckBox };\n","/**\n * Created by 10177553 on 2017/3/14.\n */\nimport {NgModule} from '@angular/core';\n\nimport {JigsawCheckBox} from './checkbox';\nimport {CommonModule} from \"@angular/common\";\n\nexport * from './checkbox';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawCheckBox, CommonModule],\n    declarations: [JigsawCheckBox],\n    providers: [],\n})\nexport class JigsawCheckBoxModule { }\n\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./demo.component.css.shim.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../demo-description/demo-description.ngfactory\";\nimport * as i3 from \"../../../../demo-description/demo-description\";\nimport * as i4 from \"../../../../../jigsaw/pc-components/checkbox/checkbox.ngfactory\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../../jigsaw/pc-components/checkbox/checkbox\";\nimport * as i7 from \"../../../../../jigsaw/pc-components/switch/switch.ngfactory\";\nimport * as i8 from \"../../../../../jigsaw/pc-components/switch/switch\";\nimport * as i9 from \"./demo.component\";\nvar styles_CheckBoxFullComponent = [i0.styles];\nvar RenderType_CheckBoxFullComponent = i1.ɵcrt({ encapsulation: 0, styles: styles_CheckBoxFullComponent, data: {} });\nexport { RenderType_CheckBoxFullComponent as RenderType_CheckBoxFullComponent };\nexport function View_CheckBoxFullComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"jigsaw-demo-description\", [], null, null, null, i2.View_JigsawDemoDescription_0, i2.RenderType_JigsawDemoDescription)), i1.ɵdid(1, 114688, null, 0, i3.JigsawDemoDescription, [], { content: [0, \"content\"], codes: [1, \"codes\"], summary: [2, \"summary\"] }, null), (_l()(), i1.ɵeld(2, 0, null, null, 57, \"div\", [[\"class\", \"live-demo-wrap\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Checkbox\"])), (_l()(), i1.ɵeld(5, 0, null, null, 35, \"div\", [[\"class\", \"clearfix\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 25, \"div\", [[\"class\", \"demo-1 live-demo live-demo-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(7, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u72B6\\u6001\"])), (_l()(), i1.ɵeld(9, 0, null, null, 7, \"p\", [[\"class\", \"comment\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u4E09\\u79CD\\u72B6\\u6001\\uFF1A\"])), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"code\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"unchecked\"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"code\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"checked\"])), (_l()(), i1.ɵeld(15, 0, null, null, 1, \"code\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"indeterminate\"])), (_l()(), i1.ɵeld(17, 0, null, null, 3, \"j-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"], [null, \"enableIndeterminateChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.demo1Checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"enableIndeterminateChange\" === en)) {\n        var pd_1 = ((_co.enableIndeterminate = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i4.View_JigsawCheckBox_0, i4.RenderType_JigsawCheckBox)), i1.ɵprd(5120, null, i5.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.JigsawCheckBox]), i1.ɵdid(19, 1294336, null, 0, i6.JigsawCheckBox, [i1.Renderer2, i1.ElementRef], { enableIndeterminate: [0, \"enableIndeterminate\"], checked: [1, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i1.ɵted(-1, 0, [\"click me\"])), (_l()(), i1.ɵeld(21, 0, null, null, 5, \"div\", [[\"class\", \"toggle\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(22, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u542F\\u7528\\u4E2D\\u95F4\\u72B6\\u6001:\"])), (_l()(), i1.ɵeld(24, 0, null, null, 2, \"j-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.enableIndeterminate = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i7.View_JigsawSwitch_0, i7.RenderType_JigsawSwitch)), i1.ɵprd(5120, null, i5.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i8.JigsawSwitch]), i1.ɵdid(26, 114688, null, 0, i8.JigsawSwitch, [], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i1.ɵeld(27, 0, null, null, 4, \"p\", [[\"class\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"The checkbox value is \"])), (_l()(), i1.ɵeld(29, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(30, null, [\"\", \"\"])), (_l()(), i1.ɵted(-1, null, [\"!\"])), (_l()(), i1.ɵeld(32, 0, null, null, 8, \"div\", [[\"class\", \"demo-2 live-demo live-demo-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(33, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u521D\\u59CB\\u503C\\u8BBE\\u7F6E\\u4E3A\\u4E2D\\u95F4\\u72B6\\u6001\"])), (_l()(), i1.ɵeld(35, 0, null, null, 1, \"p\", [[\"class\", \"comment\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u63D0\\u793A\\uFF1A\\u70B9\\u51FB\\u5207\\u6362\\u5176\\u4ED6\\u4E24\\u4E2A\\u72B6\\u6001\"])), (_l()(), i1.ɵeld(37, 0, null, null, 3, \"j-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.demo2Checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i4.View_JigsawCheckBox_0, i4.RenderType_JigsawCheckBox)), i1.ɵprd(5120, null, i5.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.JigsawCheckBox]), i1.ɵdid(39, 1294336, null, 0, i6.JigsawCheckBox, [i1.Renderer2, i1.ElementRef], { enableIndeterminate: [0, \"enableIndeterminate\"], checked: [1, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i1.ɵted(-1, 0, [\"click me\"])), (_l()(), i1.ɵeld(41, 0, null, null, 18, \"div\", [[\"class\", \"clearfix\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(42, 0, null, null, 17, \"div\", [[\"class\", \"demo-3 live-demo live-demo-block\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(43, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u4E0D\\u53EF\\u70B9\\u51FB\\u72B6\\u6001\"])), (_l()(), i1.ɵeld(45, 0, null, null, 3, \"j-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"], [null, \"disabledChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.demo3Checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"disabledChange\" === en)) {\n        var pd_1 = (!(_co.enabled = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i4.View_JigsawCheckBox_0, i4.RenderType_JigsawCheckBox)), i1.ɵprd(5120, null, i5.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i6.JigsawCheckBox]), i1.ɵdid(47, 1294336, null, 0, i6.JigsawCheckBox, [i1.Renderer2, i1.ElementRef], { checked: [0, \"checked\"], disabled: [1, \"disabled\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i1.ɵted(-1, 0, [\"a great checkbox!\"])), (_l()(), i1.ɵeld(49, 0, null, null, 5, \"div\", [[\"class\", \"toggle\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(50, 0, null, null, 1, \"label\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u542F\\u7528\\u70B9\\u51FB\\u72B6\\u6001:\"])), (_l()(), i1.ɵeld(52, 0, null, null, 2, \"j-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.enabled = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i7.View_JigsawSwitch_0, i7.RenderType_JigsawSwitch)), i1.ɵprd(5120, null, i5.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i8.JigsawSwitch]), i1.ɵdid(54, 114688, null, 0, i8.JigsawSwitch, [], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i1.ɵeld(55, 0, null, null, 4, \"p\", [[\"class\", \"message\"]], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"The checkbox value is \"])), (_l()(), i1.ɵeld(57, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i1.ɵted(58, null, [\"\", \"\"])), (_l()(), i1.ɵted(-1, null, [\"!\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.description; var currVal_1 = _co.__codes; var currVal_2 = _co.summary; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); var currVal_6 = _co.enableIndeterminate; var currVal_7 = _co.demo1Checked; _ck(_v, 19, 0, currVal_6, currVal_7); var currVal_10 = _co.enableIndeterminate; _ck(_v, 26, 0, currVal_10); var currVal_15 = false; var currVal_16 = _co.demo2Checked; _ck(_v, 39, 0, currVal_15, currVal_16); var currVal_20 = _co.demo3Checked; var currVal_21 = !_co.enabled; _ck(_v, 47, 0, currVal_20, currVal_21); var currVal_24 = _co.enabled; _ck(_v, 54, 0, currVal_24); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = i1.ɵnov(_v, 19).width; var currVal_4 = true; var currVal_5 = !i1.ɵnov(_v, 19).valid; _ck(_v, 17, 0, currVal_3, currVal_4, currVal_5); var currVal_8 = true; var currVal_9 = !i1.ɵnov(_v, 26).valid; _ck(_v, 24, 0, currVal_8, currVal_9); var currVal_11 = _co.demo1Checked; _ck(_v, 30, 0, currVal_11); var currVal_12 = i1.ɵnov(_v, 39).width; var currVal_13 = true; var currVal_14 = !i1.ɵnov(_v, 39).valid; _ck(_v, 37, 0, currVal_12, currVal_13, currVal_14); var currVal_17 = i1.ɵnov(_v, 47).width; var currVal_18 = true; var currVal_19 = !i1.ɵnov(_v, 47).valid; _ck(_v, 45, 0, currVal_17, currVal_18, currVal_19); var currVal_22 = true; var currVal_23 = !i1.ɵnov(_v, 54).valid; _ck(_v, 52, 0, currVal_22, currVal_23); var currVal_25 = _co.demo3Checked; _ck(_v, 58, 0, currVal_25); }); }\nexport function View_CheckBoxFullComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_CheckBoxFullComponent_0, RenderType_CheckBoxFullComponent)), i1.ɵdid(1, 49152, null, 0, i9.CheckBoxFullComponent, [], null, null)], null, null); }\nvar CheckBoxFullComponentNgFactory = i1.ɵccf(\"ng-component\", i9.CheckBoxFullComponent, View_CheckBoxFullComponent_Host_0, {}, {}, []);\nexport { CheckBoxFullComponentNgFactory as CheckBoxFullComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\"\\n/*# sourceMappingURL=demo.component.css.map*/\"];\nexport { styles as styles };\n","<!-- ignore the following lines, they are not important to this demo -->\n<jigsaw-demo-description [codes]=\"__codes\" [summary]=\"summary\" [content]=\"description\">\n</jigsaw-demo-description>\n\n\n<!-- start to learn the demo from here -->\n<div class=\"live-demo-wrap\">\n    <h2>Checkbox</h2>\n\n    <div class=\"clearfix\">\n        <div class=\"demo-1 live-demo live-demo-block\">\n            <h3>状态</h3>\n            <p class=\"comment\">三种状态：<code>unchecked</code> <code>checked</code> <code>indeterminate</code></p>\n            <j-checkbox [(checked)]=\"demo1Checked\" [(enableIndeterminate)]=\"enableIndeterminate\">click me</j-checkbox>\n            <div class=\"toggle\">\n                <label>启用中间状态:</label>\n                <j-switch [(checked)]=\"enableIndeterminate\"></j-switch>\n            </div>\n            <p class=\"message\">The checkbox value is <span>{{demo1Checked}}</span>!</p>\n        </div>\n\n        <div class=\"demo-2 live-demo live-demo-block\">\n            <h3>初始值设置为中间状态</h3>\n            <p class=\"comment\">提示：点击切换其他两个状态</p>\n            <j-checkbox [(checked)]=\"demo2Checked\" [enableIndeterminate]=\"false\">click me</j-checkbox>\n        </div>\n    </div>\n\n    <div class=\"clearfix\">\n        <div class=\"demo-3 live-demo live-demo-block\">\n            <h3>不可点击状态</h3>\n            <j-checkbox [(checked)]=\"demo3Checked\" [(disabled)]=\"!enabled\">a great checkbox!</j-checkbox>\n            <div class=\"toggle\">\n                <label>启用点击状态:</label>\n                <j-switch [(checked)]=\"enabled\"></j-switch>\n            </div>\n            <p class=\"message\">The checkbox value is <span>{{demo3Checked}}</span>!</p>\n        </div>\n    </div>\n</div>\n\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../demo-description/demo-description.ngfactory\";\nimport * as i2 from \"../../../../demo-description/demo-description\";\nimport * as i3 from \"../../../../../jigsaw/pc-components/checkbox/checkbox.ngfactory\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../../jigsaw/pc-components/checkbox/checkbox\";\nimport * as i6 from \"../../../../../jigsaw/pc-components/switch/switch.ngfactory\";\nimport * as i7 from \"../../../../../jigsaw/pc-components/switch/switch\";\nimport * as i8 from \"./demo.component\";\nvar styles_CheckBoxBasicDemoComponent = [];\nvar RenderType_CheckBoxBasicDemoComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CheckBoxBasicDemoComponent, data: {} });\nexport { RenderType_CheckBoxBasicDemoComponent as RenderType_CheckBoxBasicDemoComponent };\nexport function View_CheckBoxBasicDemoComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-demo-description\", [], null, null, null, i1.View_JigsawDemoDescription_0, i1.RenderType_JigsawDemoDescription)), i0.ɵdid(1, 114688, null, 0, i2.JigsawDemoDescription, [], { content: [0, \"content\"], codes: [1, \"codes\"], summary: [2, \"summary\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"jigsaw-checkbox\", [[\"id\", \"test-checkbox\"]], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"], [null, \"enableIndeterminateChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"enableIndeterminateChange\" === en)) {\n        var pd_1 = ((_co.enableIndeterminate = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i3.View_JigsawCheckBox_0, i3.RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawCheckBox]), i0.ɵdid(4, 1294336, null, 0, i5.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], { enableIndeterminate: [0, \"enableIndeterminate\"], checked: [1, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i0.ɵted(-1, 0, [\" click me\\n\"])), (_l()(), i0.ɵeld(6, 0, null, null, 1, \"span\", [[\"id\", \"state-message\"]], null, null, null, null, null)), (_l()(), i0.ɵted(7, null, [\"The checkbox value is \", \"!\"])), (_l()(), i0.ɵeld(8, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u542F\\u7528\\u4E2D\\u95F4\\u72B6\\u6001\"])), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"jigsaw-switch\", [[\"id\", \"set-middle-state\"]], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.enableIndeterminate = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_JigsawSwitch_0, i6.RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawSwitch]), i0.ɵdid(13, 114688, null, 0, i7.JigsawSwitch, [], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i0.ɵeld(14, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(15, 0, null, null, 0, \"hr\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(16, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"h4\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u521D\\u59CB\\u503C\\u8BBE\\u7F6E\\u4E3A\\u4E2D\\u95F4\\u72B6\\u6001\"])), (_l()(), i0.ɵeld(19, 0, null, null, 3, \"jigsaw-checkbox\", [[\"enableIndeterminate\", \"true\"]], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.status = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i3.View_JigsawCheckBox_0, i3.RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawCheckBox]), i0.ɵdid(21, 1294336, null, 0, i5.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], { enableIndeterminate: [0, \"enableIndeterminate\"], checked: [1, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i0.ɵted(-1, 0, [\"click me\"])), (_l()(), i0.ɵeld(23, 0, null, null, 1, \"span\", [], null, null, null, null, null)), (_l()(), i0.ɵted(24, null, [\"The checkbox value is \", \"!\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.description; var currVal_1 = _co.__codes; var currVal_2 = _co.summary; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); var currVal_6 = _co.enableIndeterminate; var currVal_7 = _co.checked; _ck(_v, 4, 0, currVal_6, currVal_7); var currVal_11 = _co.enableIndeterminate; _ck(_v, 13, 0, currVal_11); var currVal_15 = \"true\"; var currVal_16 = _co.status; _ck(_v, 21, 0, currVal_15, currVal_16); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = i0.ɵnov(_v, 4).width; var currVal_4 = true; var currVal_5 = !i0.ɵnov(_v, 4).valid; _ck(_v, 2, 0, currVal_3, currVal_4, currVal_5); var currVal_8 = _co.checked; _ck(_v, 7, 0, currVal_8); var currVal_9 = true; var currVal_10 = !i0.ɵnov(_v, 13).valid; _ck(_v, 11, 0, currVal_9, currVal_10); var currVal_12 = i0.ɵnov(_v, 21).width; var currVal_13 = true; var currVal_14 = !i0.ɵnov(_v, 21).valid; _ck(_v, 19, 0, currVal_12, currVal_13, currVal_14); var currVal_17 = _co.status; _ck(_v, 24, 0, currVal_17); }); }\nexport function View_CheckBoxBasicDemoComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_CheckBoxBasicDemoComponent_0, RenderType_CheckBoxBasicDemoComponent)), i0.ɵdid(1, 49152, null, 0, i8.CheckBoxBasicDemoComponent, [], null, null)], null, null); }\nvar CheckBoxBasicDemoComponentNgFactory = i0.ɵccf(\"ng-component\", i8.CheckBoxBasicDemoComponent, View_CheckBoxBasicDemoComponent_Host_0, {}, {}, []);\nexport { CheckBoxBasicDemoComponentNgFactory as CheckBoxBasicDemoComponentNgFactory };\n","<!-- ignore the following lines, they are not important to this demo -->\n<jigsaw-demo-description [codes]=\"__codes\" [summary]=\"summary\" [content]=\"description\">\n</jigsaw-demo-description>\n\n\n<!-- start to learn the demo from here -->\n<jigsaw-checkbox id=\"test-checkbox\"\n                 [(checked)]=\"checked\"\n                 [(enableIndeterminate)]=\"enableIndeterminate\">\n    click me\n</jigsaw-checkbox>\n<span id=\"state-message\">The checkbox value is {{checked}}!</span>\n\n<br>\n<span>启用中间状态</span>\n<jigsaw-switch id=\"set-middle-state\" [(checked)]=\"enableIndeterminate\"></jigsaw-switch>\n<br>\n<hr>\n<br>\n<h4>初始值设置为中间状态</h4>\n<jigsaw-checkbox enableIndeterminate=\"true\" [(checked)]=\"status\">click me</jigsaw-checkbox>\n<span>The checkbox value is {{status}}!</span>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../demo-description/demo-description.ngfactory\";\nimport * as i2 from \"../../../../demo-description/demo-description\";\nimport * as i3 from \"../../../../../jigsaw/pc-components/checkbox/checkbox.ngfactory\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../../jigsaw/pc-components/checkbox/checkbox\";\nimport * as i6 from \"../../../../../jigsaw/pc-components/switch/switch.ngfactory\";\nimport * as i7 from \"../../../../../jigsaw/pc-components/switch/switch\";\nimport * as i8 from \"./demo.component\";\nvar styles_CheckBoxDisableDemoComponent = [];\nvar RenderType_CheckBoxDisableDemoComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_CheckBoxDisableDemoComponent, data: {} });\nexport { RenderType_CheckBoxDisableDemoComponent as RenderType_CheckBoxDisableDemoComponent };\nexport function View_CheckBoxDisableDemoComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-demo-description\", [], null, null, null, i1.View_JigsawDemoDescription_0, i1.RenderType_JigsawDemoDescription)), i0.ɵdid(1, 114688, null, 0, i2.JigsawDemoDescription, [], { content: [0, \"content\"], codes: [1, \"codes\"], summary: [2, \"summary\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 3, \"jigsaw-checkbox\", [[\"id\", \"test-checkbox\"]], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"], [null, \"disabledChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"disabledChange\" === en)) {\n        var pd_1 = (!(_co.enabled = $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i3.View_JigsawCheckBox_0, i3.RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawCheckBox]), i0.ɵdid(4, 1294336, null, 0, i5.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], { checked: [0, \"checked\"], disabled: [1, \"disabled\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i0.ɵted(-1, 0, [\"a great checkbox!\"])), (_l()(), i0.ɵeld(6, 0, null, null, 2, \"jigsaw-switch\", [[\"id\", \"close-disabled\"]], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.enabled = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_JigsawSwitch_0, i6.RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawSwitch]), i0.ɵdid(8, 114688, null, 0, i7.JigsawSwitch, [], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" }), (_l()(), i0.ɵeld(9, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(10, 0, null, null, 1, \"span\", [[\"id\", \"state-message\"]], null, null, null, null, null)), (_l()(), i0.ɵted(11, null, [\"The checkbox value is \", \"!\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.description; var currVal_1 = _co.__codes; var currVal_2 = _co.summary; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2); var currVal_6 = _co.checked; var currVal_7 = !_co.enabled; _ck(_v, 4, 0, currVal_6, currVal_7); var currVal_10 = _co.enabled; _ck(_v, 8, 0, currVal_10); }, function (_ck, _v) { var _co = _v.component; var currVal_3 = i0.ɵnov(_v, 4).width; var currVal_4 = true; var currVal_5 = !i0.ɵnov(_v, 4).valid; _ck(_v, 2, 0, currVal_3, currVal_4, currVal_5); var currVal_8 = true; var currVal_9 = !i0.ɵnov(_v, 8).valid; _ck(_v, 6, 0, currVal_8, currVal_9); var currVal_11 = _co.checked; _ck(_v, 11, 0, currVal_11); }); }\nexport function View_CheckBoxDisableDemoComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_CheckBoxDisableDemoComponent_0, RenderType_CheckBoxDisableDemoComponent)), i0.ɵdid(1, 49152, null, 0, i8.CheckBoxDisableDemoComponent, [], null, null)], null, null); }\nvar CheckBoxDisableDemoComponentNgFactory = i0.ɵccf(\"ng-component\", i8.CheckBoxDisableDemoComponent, View_CheckBoxDisableDemoComponent_Host_0, {}, {}, []);\nexport { CheckBoxDisableDemoComponentNgFactory as CheckBoxDisableDemoComponentNgFactory };\n","<!-- ignore the following lines, they are not important to this demo -->\n<jigsaw-demo-description [codes]=\"__codes\" [summary]=\"summary\" [content]=\"description\">\n</jigsaw-demo-description>\n\n\n<!-- start to learn the demo from here -->\n<jigsaw-checkbox id=\"test-checkbox\" [(checked)]=\"checked\" [(disabled)]=\"!enabled\">a great checkbox!</jigsaw-checkbox>\n<jigsaw-switch id=\"close-disabled\" [(checked)]=\"enabled\"></jigsaw-switch>\n<br>\n<span id=\"state-message\">The checkbox value is {{checked}}!</span>\n","import {NgModule} from \"@angular/core\";\nimport {JigsawCheckBoxModule} from \"jigsaw/pc-components/checkbox/index\";\nimport {JigsawSwitchModule} from \"jigsaw/pc-components/switch/index\";\nimport {CheckBoxBasicDemoComponent} from \"./demo.component\";\nimport {JigsawDemoDescriptionModule} from \"app/demo-description/demo-description\";\n\n@NgModule({\n    declarations: [CheckBoxBasicDemoComponent],\n    exports: [CheckBoxBasicDemoComponent],\n    imports: [JigsawCheckBoxModule, JigsawSwitchModule, JigsawDemoDescriptionModule]\n})\nexport class CheckBoxBasicDemoModule {\n}\n","import {NgModule} from \"@angular/core\";\nimport {JigsawCheckBoxModule} from \"jigsaw/pc-components/checkbox/index\";\nimport {JigsawSwitchModule} from \"jigsaw/pc-components/switch/index\";\nimport {JigsawDemoDescriptionModule} from \"app/demo-description/demo-description\";\nimport {CheckBoxDisableDemoComponent} from \"./demo.component\";\n\n@NgModule({\n    declarations: [CheckBoxDisableDemoComponent],\n    exports: [ CheckBoxDisableDemoComponent ],\n    imports: [JigsawCheckBoxModule, JigsawSwitchModule, JigsawDemoDescriptionModule]\n})\nexport class CheckBoxDisableDemoModule{\n\n}\n","import {NgModule} from \"@angular/core\";\nimport {JigsawCheckBoxModule} from \"jigsaw/pc-components/checkbox/index\";\nimport {JigsawSwitchModule} from \"jigsaw/pc-components/switch/index\";\nimport {CheckBoxFullComponent} from \"./demo.component\";\nimport {JigsawDemoDescriptionModule} from \"app/demo-description/demo-description\";\n\n@NgModule({\n    declarations: [CheckBoxFullComponent],\n    exports: [CheckBoxFullComponent],\n    imports: [JigsawCheckBoxModule, JigsawSwitchModule, JigsawDemoDescriptionModule]\n})\nexport class CheckBoxFullModule {\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./demo-set.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./full/demo.component.ngfactory\";\nimport * as i4 from \"./basic/demo.component.ngfactory\";\nimport * as i5 from \"./disabled/demo.component.ngfactory\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../../../../jigsaw/pc-components/checkbox/index\";\nimport * as i9 from \"../../../../jigsaw/pc-components/switch/index\";\nimport * as i10 from \"../../../markdown/markdown\";\nimport * as i11 from \"../../../demo-description/demo-description\";\nimport * as i12 from \"./basic/demo.module\";\nimport * as i13 from \"./disabled/demo.module\";\nimport * as i14 from \"./full/demo.module\";\nimport * as i15 from \"./full/demo.component\";\nimport * as i16 from \"./basic/demo.component\";\nimport * as i17 from \"./disabled/demo.component\";\nvar CheckBoxDemoModuleNgFactory = i0.ɵcmf(i1.CheckBoxDemoModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.CheckBoxFullComponentNgFactory, i4.CheckBoxBasicDemoComponentNgFactory, i5.CheckBoxDisableDemoComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i6.NgLocalization, i6.NgLocaleLocalization, [i0.LOCALE_ID, [2, i6.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i7.RouterModule, i7.RouterModule, [[2, i7.ɵangular_packages_router_router_a], [2, i7.Router]]), i0.ɵmpd(1073742336, i6.CommonModule, i6.CommonModule, []), i0.ɵmpd(1073742336, i8.JigsawCheckBoxModule, i8.JigsawCheckBoxModule, []), i0.ɵmpd(1073742336, i9.JigsawSwitchModule, i9.JigsawSwitchModule, []), i0.ɵmpd(1073742336, i10.JigsawMarkdownModule, i10.JigsawMarkdownModule, []), i0.ɵmpd(1073742336, i11.JigsawDemoDescriptionModule, i11.JigsawDemoDescriptionModule, []), i0.ɵmpd(1073742336, i12.CheckBoxBasicDemoModule, i12.CheckBoxBasicDemoModule, []), i0.ɵmpd(1073742336, i13.CheckBoxDisableDemoModule, i13.CheckBoxDisableDemoModule, []), i0.ɵmpd(1073742336, i14.CheckBoxFullModule, i14.CheckBoxFullModule, []), i0.ɵmpd(1073742336, i1.CheckBoxDemoModule, i1.CheckBoxDemoModule, []), i0.ɵmpd(1024, i7.ROUTES, function () { return [[{ path: \"full\", component: i15.CheckBoxFullComponent }, { path: \"basic\", component: i16.CheckBoxBasicDemoComponent }, { path: \"disabled\", component: i17.CheckBoxDisableDemoComponent }]]; }, [])]); });\nexport { CheckBoxDemoModuleNgFactory as CheckBoxDemoModuleNgFactory };\n"],"sourceRoot":""}