{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/fish-bone/fish-bone.ts","webpack:///./src/jigsaw/pc-components/fish-bone/fish-bone.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/fish-bone/fish-bone.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/fish-bone/fish-bone.html","webpack:///./src/jigsaw/pc-components/fish-bone/fish-bone-item.html","webpack:///./src/app/demo/pc/fish-bone/full/demo.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/fish-bone/full/demo.component.css.ngstyle.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/fish-bone/full/demo.component.html","webpack:///./src/app/demo/pc/fish-bone/full/demo.module.ts","webpack:///./src/app/demo/pc/fish-bone/demo-set.module.ngfactory.js.pre-build-optimizer.js"],"names":["fish_bone_JigsawFishBone","_super","JigsawFishBone","_renderer","_elementRef","_zone","_this","call","this","direction","theme","_allFishBones","tslib_es6","Object","defineProperty","prototype","get","_data","set","value","_dataCallbackRemoval","onRefresh","ngAfterViewInit","enumerable","configurable","_cacheFishBoneItems","fishBoneItems","forEach","fishBoneItem","rectifyEvent","subscribe","push","childBones","_setAllBoneAttribute","setBoneAttribute","_setFirstLevelBoneOffset","fishBoneMainChildren","fishBoneMainArray","toArray","index","left","calculateOffsetLeft","_getMaxRangeHeight","cb","Math","max","apply","_firstLevelBones","filter","reduce","arr","lastChild","last","rangeHeight","itemEl","offsetWidth","_setRangeHeight","upHeight","cos","downHeight","host","nativeElement","mainBone","querySelector","fishBoneRange","fishBoneFramework","setStyle","height","_setRangeWidth","maxOffsetBone","sort","item1","item2","hostWidth","boneWidth","rangeWidth","callLater","runOutsideAngular","_removeWindowListener","listen","ngOnDestroy","common","fish_bone_JigsawFishBoneItem","JigsawFishBoneItem","elementRef","level","_left","core","length","childRange","firstLevelRotate","_itemContent","offsetHeight","tan","sin","_itemDescription","_setOffset","contentHeight","preBone","parentBone","_setWidth","width","ngOnInit","_$state","emit","addClass","JigsawFishBoneModule","RenderType_JigsawFishBone","encapsulation","styles","data","View_JigsawFishBone_1","_l","View_JigsawFishBone_2","View_JigsawFishBone_3","View_JigsawFishBone_4","View_JigsawFishBone_5","View_JigsawFishBoneItem_0","RenderType_JigsawFishBoneItem","childRotate","_ck","_v","context","$implicit","even","View_JigsawFishBone_0","fesm5_common","ngIf","trusted_html","platform_browser","trustedHtmlContext","trustedHtml","ngForOf","_co","component","innerHtmlContext","label","nodes","innerHtml","animation","type","name","definitions","opacity","offset","options","undefined","expr","steps","timings","View_JigsawFishBoneItem_1","desc","RenderType_FishBoneFullComponent","View_FishBoneFullComponent_0","demo_description_ngfactory","demo_description","content","summary","en","$event","ad","selectedScene","changeData","select_ngfactory","fesm5_forms","p0_0","select_select","labelField","valueChange","description","data2","sceneData","data3","multipleSelect","minWidth","maxWidth","View_FishBoneFullComponent_Host_0","demo_component","http","FishBoneFullComponentNgFactory","FishBoneFullModule","__webpack_require__","d","__webpack_exports__","FishBoneDemoModuleNgFactory","demo_set_module","router_ngfactory","popup_service","router","markdown","tag","input","directive_float","ngx_perfect_scrollbar_es5","combo_select","list","list_lite","path"],"mappings":"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","file":"77.68e1ff382318dfad6274.js","sourcesContent":["import {\n    Component, NgModule, Input, ViewChildren, QueryList, forwardRef, AfterViewInit, Renderer2, ElementRef, EventEmitter, OnDestroy, OnInit,\n    NgZone,\n} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {AbstractJigsawComponent} from \"../../common/common\";\nimport {fadeIn} from \"../../common/components/animations/fade-in\";\nimport {CallbackRemoval} from \"../../common/core/utils/common-utils\";\nimport {SimpleTreeData, TreeData} from \"../../common/core/data/tree-data\";\nimport {JigsawTrustedHtmlModule} from \"../../common/directive/trusted-html/trusted-html\";\n\n/**\n * 标准鱼骨图组件，鱼骨图常常用于对问题的根因做分析，或者做目标分解\n *\n * $demo = fish-bone/full\n */\n@Component({\n    selector: 'j-fish-bone, jigsaw-fish-bone',\n    templateUrl: './fish-bone.html',\n    host: {\n        '[class.jigsaw-fish-bone]': 'true',\n        '[class.jigsaw-fish-bone-left]': 'direction === \"left\"',\n        '[class.jigsaw-fish-bone-right]': 'direction === \"right\"',\n        '[class.jigsaw-fish-bone-white]': 'theme === \"white\"',\n        '[class.jigsaw-fish-bone-dark]': 'theme === \"dark\"',\n        '[style.width]': 'width'\n    }\n})\nexport class JigsawFishBone extends AbstractJigsawComponent implements AfterViewInit, OnDestroy, OnInit {\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef, private _zone: NgZone) {\n        super();\n    }\n\n    private _dataCallbackRemoval: CallbackRemoval;\n\n    private _data: SimpleTreeData | TreeData;\n\n    /**\n     * 图形数据，是一个树状结构的数据，对于鱼骨图展示目标不同，对树状结构的各分支页有不同的理解，分别为：\n     * - 鱼骨图用于做根因分析时：\n     *     - 树根代表着根因；\n     *     - 树的各支代表着各个主要原因及其次要原因\n     * - 鱼骨图用于做目标分解时\n     *     - 树根代表着目标；\n     *     - 树的各支代表着为各个达成目标而必须完成的主要及次要任务；\n     *\n     * $demo = fish-bone/full\n     */\n    @Input()\n    get data(): SimpleTreeData | TreeData {\n        return this._data;\n    }\n\n    set data(value: SimpleTreeData | TreeData) {\n        this._data = value;\n        if (this._dataCallbackRemoval) {\n            this._dataCallbackRemoval();\n        }\n        this._dataCallbackRemoval = this._data.onRefresh(this.ngAfterViewInit, this);\n    }\n\n    /**\n     * 鱼骨图鱼头的朝向，默认是朝左。\n     *\n     * $demo = fish-bone/full\n     */\n    @Input()\n    public direction: 'left' | 'right' = 'left';\n\n    /**\n     * 鱼骨图的整体色调，默认是白色调\n     *\n     * $demo = fish-bone/full\n     */\n    @Input()\n    public theme: 'white' | 'dark' = 'white';\n\n    @ViewChildren(forwardRef(() => JigsawFishBoneItem))\n    private _firstLevelBones: QueryList<JigsawFishBoneItem>;\n\n    private _allFishBones: Array<JigsawFishBoneItem> = [];\n\n    /**\n     *\n     * 按照子到父的顺序存储节点\n     * */\n    private _cacheFishBoneItems(fishBoneItems) {\n        fishBoneItems.forEach(fishBoneItem => {\n            fishBoneItem.rectifyEvent.subscribe(() => {\n                this._allFishBones.push(fishBoneItem);\n            });\n            this._cacheFishBoneItems(fishBoneItem.childBones);\n        })\n    }\n\n    /**\n     *\n     * 按照子到父的顺序设置节点的偏移量和宽度\n     * 节点的偏移前一个同级节点的 left + rangeHeight\n     * 父节点的宽度依赖最后一个子节点的 left + rangHeight\n     *\n     * */\n    private _setAllBoneAttribute() {\n        this._allFishBones.forEach(fishBoneItem => {\n            fishBoneItem.setBoneAttribute();\n        })\n    }\n\n    /**\n     *\n     * 计算最外层的父节点的偏移\n     */\n    private _setFirstLevelBoneOffset(fishBoneMainChildren) {\n        const fishBoneMainArray = fishBoneMainChildren.toArray();\n        fishBoneMainChildren.forEach((fishBoneItem, index) => {\n            if (index <= 1) {\n                // 最外层的鱼骨 前面两个偏移0px\n                fishBoneItem.left = 0;\n            } else {\n                // 最外层的鱼骨是上下排列的，所以用前前节点计算\n                fishBoneItem.calculateOffsetLeft(fishBoneMainArray[index - 2]);\n            }\n        })\n    }\n\n    private _getMaxRangeHeight(cb) {\n        return Math.max(...this._firstLevelBones.filter(cb).reduce((arr, fishBoneItem) => {\n            const lastChild = fishBoneItem.childBones.last;\n            if (lastChild) {\n                // 有子节点\n                arr.push(lastChild.rangeHeight + lastChild.left);\n            } else {\n                // 没有子节点\n                arr.push(fishBoneItem.itemEl.offsetWidth);\n            }\n            return arr\n        }, []));\n    }\n\n    private _setRangeHeight() {\n        // 上部的高度\n        const upHeight = Math.cos(30 * 0.017453293) * this._getMaxRangeHeight((fishBoneItem, index) => {\n            return (index + 1) % 2 === 1;\n        }) + 30;\n\n        // 下部的高度\n        const downHeight = Math.cos(30 * 0.017453293) * this._getMaxRangeHeight((fishBoneItem, index) => {\n            return (index + 1) % 2 === 0;\n        }) + 30;\n\n        const host = this._elementRef.nativeElement;\n        // 横向的主骨\n        const mainBone = host.querySelector('.jigsaw-fish-bone-main');\n        // 鱼骨的范围框，和整个鱼骨的宽度和高度相同\n        const fishBoneRange = host.querySelector('.jigsaw-fish-bone-range');\n        // 鱼骨组件的外框，和组件设置的宽高相同\n        const fishBoneFramework = host.querySelector('.jigsaw-fish-bone-framework');\n\n        this._renderer.setStyle(fishBoneRange, 'height', upHeight + downHeight + 'px');\n        // 设置主骨在范围框中的位置\n        this._renderer.setStyle(mainBone, 'top', upHeight + 'px');\n        if (this.height) {\n            // 组件设置高度，加上外框的滚动条\n            this._renderer.setStyle(fishBoneFramework, 'overflow-y', 'scroll');\n        } else {\n            // 组件不设置高度，去掉外框的滚动条，组件自适应范围框的高度\n            this._renderer.setStyle(host, 'height', upHeight + downHeight + 'px');\n            this._renderer.setStyle(fishBoneFramework, 'overflow-y', 'hidden');\n        }\n    }\n\n    private _setRangeWidth() {\n        const maxOffsetBone = this._firstLevelBones.toArray().sort((item1, item2) => item2.left - item1.left)[0];\n        const host = this._elementRef.nativeElement;\n        const mainBone = host.querySelector('.jigsaw-fish-bone-main');\n        const fishBoneRange = host.querySelector('.jigsaw-fish-bone-range');\n        const fishBoneFramework = host.querySelector('.jigsaw-fish-bone-framework');\n        const hostWidth = host.offsetWidth;\n        if (maxOffsetBone) {\n            // 主骨的最小宽度\n            const boneWidth = maxOffsetBone.left + maxOffsetBone.rangeHeight;\n            // 组件范围框的宽度，主骨宽度+鱼头+鱼尾\n            const rangeWidth = boneWidth + 146 + 80;\n\n            if (rangeWidth > hostWidth) {\n                // 范围宽度大于组件宽度，即溢出\n                // 主骨宽度等于主骨最小宽度\n                this._renderer.setStyle(mainBone, 'width', boneWidth + 'px');\n                // 鱼骨范围宽度\n                this._renderer.setStyle(fishBoneRange, 'width', rangeWidth + 'px');\n                // 加上外框的滚动条\n                this._renderer.setStyle(fishBoneFramework, 'overflow-x', 'scroll');\n            } else {\n                // 范围宽度小于组件宽度\n                // 主骨宽度等于组件宽度-鱼头-鱼尾，即自适应组件宽度\n                this._renderer.setStyle(mainBone, 'width', hostWidth - 80 - 146 + 'px');\n                // 范围宽度等于组件宽度\n                this._renderer.setStyle(fishBoneRange, 'width', hostWidth + 'px');\n                // 去掉外框的滚动条\n                this._renderer.setStyle(fishBoneFramework, 'overflow-x', 'hidden');\n            }\n        }\n    }\n\n    private _removeWindowListener: CallbackRemoval;\n\n    ngAfterViewInit() {\n        this._cacheFishBoneItems(this._firstLevelBones);\n        this.callLater(() => {\n            this._setAllBoneAttribute();\n            this._setFirstLevelBoneOffset(this._firstLevelBones);\n            this._setRangeHeight();\n            this._setRangeWidth();\n        });\n\n        this._zone.runOutsideAngular(() => {\n            this._removeWindowListener = this._renderer.listen('window',\n                'resize', () => this._setRangeWidth());\n        });\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._removeWindowListener) {\n            this._removeWindowListener();\n        }\n        if (this._dataCallbackRemoval) {\n            this._dataCallbackRemoval();\n        }\n    }\n}\n\n/**\n * @internal\n */\n@Component({\n    selector: 'j-fish-bone-item, jigsaw-fish-bone-item',\n    templateUrl: './fish-bone-item.html',\n    host: {\n        '[class.jigsaw-fish-bone-item]': 'true',\n    },\n    animations: [\n        fadeIn\n    ]\n})\nexport class JigsawFishBoneItem extends AbstractJigsawComponent implements AfterViewInit {\n\n    public itemEl: HTMLElement;\n    private _itemContent: HTMLElement;\n    private _itemDescription: HTMLElement;\n\n    constructor(private _renderer: Renderer2, elementRef: ElementRef) {\n        super();\n        this.itemEl = elementRef.nativeElement;\n    }\n\n    @Input()\n    public data: SimpleTreeData | TreeData;\n\n    @Input()\n    public childRotate: string;\n\n    @ViewChildren(forwardRef(() => JigsawFishBoneItem))\n    public childBones: QueryList<JigsawFishBoneItem>;\n\n    @Input()\n    public parentBone: JigsawFishBoneItem;\n\n    @Input()\n    public level: number = 0;\n\n    @Input()\n    public index: number = 0;\n\n    @Input()\n    public firstLevelRotate: string;\n\n    public rangeHeight: number = 0;\n\n    // 默认偏移50，后面只有第一个节点是默认值\n    private _left: number = 50;\n\n    public get left(): number {\n        return this._left;\n    }\n\n    public set left(value: number) {\n        this._left = value;\n        // 用setStyle保持同步，绑定[style.left]是异步的\n        this._renderer.setStyle(this.itemEl, 'left', value + 'px');\n    }\n\n    /**\n     * @internal\n     */\n    public _$state;\n\n    /**\n     * 获取最大范围高度\n     * 比较各子节点伸展高度\n     * 伸展高度：子节点有子节点，并且最后一个子节点的rangeHeight不等于0，取其最后一个子节点的rangeHeight + left；\n     *          其他取子节点自身的宽度\n     * */\n    private _setRangeHeight() {\n        if (this.childBones.length) {\n            this.rangeHeight = Math.max(...this.childBones.reduce((arr, fishBoneItem) => {\n                let childRange = 0;\n                const lastChild = fishBoneItem.childBones.last;\n                if (lastChild && lastChild.rangeHeight > 30) {\n                    childRange = lastChild.rangeHeight + lastChild.left;\n                } else {\n                    if (this.firstLevelRotate == 'down') {\n                        // 主骨在下面，需要考虑内容的伸展\n                        childRange = fishBoneItem.itemEl.offsetWidth + fishBoneItem._itemContent.offsetHeight / Math.tan(60 * 0.017453293);\n                    } else {\n                        //  主骨在上面\n                        childRange = fishBoneItem.itemEl.offsetWidth;\n                    }\n                }\n                arr.push(childRange);\n                return arr;\n            }, []));\n        } else {\n            // 没有子节点\n            if (this.firstLevelRotate == 'up') {\n                // 主骨在上面\n                this.rangeHeight = this._itemContent.offsetHeight / Math.sin(60 * 0.017453293);\n            } else if (this.firstLevelRotate == 'down') {\n                // 主骨在下面\n                this.rangeHeight = this._itemDescription.offsetHeight;\n            }\n        }\n    }\n\n    /**\n     * 计算偏移并设置样式\n     *\n     */\n    private _setOffset() {\n        if (this.level !== 0) {\n            // 最外层的父节点另外计算\n            if (this.firstLevelRotate == 'down' && this.childBones.length === 0) {\n                // 主骨在下面，没有子节点\n                if (this.index === 0) {\n                    // 第一个如果内容大于默认值，则由内容撑开\n                    const contentHeight = this._itemContent.offsetHeight / Math.sin(60 * 0.017453293) + 30;\n                    this.left = contentHeight > 50 ? contentHeight : 50;\n                } else {\n                    // 后面的也要加上自身内容\n                    const preBone = this.parentBone.childBones.toArray()[this.index - 1];\n                    this.left = preBone.left + preBone.rangeHeight + 30 + this._itemContent.offsetHeight / Math.sin(60 * 0.017453293);\n                }\n            } else {\n                if (this.index === 0) {\n                    // 第一个节点是默认偏移50px，写在css里面\n                    this.left = this._itemDescription.offsetHeight + 30 > 50 ? this._itemDescription.offsetHeight + 30 : 50;\n                } else {\n                    this.calculateOffsetLeft(this.parentBone.childBones.toArray()[this.index - 1]);\n                }\n            }\n        }\n    }\n\n    /**\n     * 计算偏移的通用方法\n     * @param fishBoneItem\n     */\n    public calculateOffsetLeft(fishBoneItem) {\n        // fishBoneItem.rangeHeight 为0时，取30\n        const rangeHeight = fishBoneItem.rangeHeight > 30 ? fishBoneItem.rangeHeight : 30;\n        this.left = fishBoneItem.left + rangeHeight + this._itemDescription.offsetHeight + 30;\n    }\n\n    /**\n     * 计算宽度并设置样式\n     *\n     */\n    private _setWidth() {\n        if (this.childBones.last) {\n            // 取其最后一个子节点的left偏移值 + 30px\n            this.width = this.childBones.last.left + 30 + 'px';\n            // 有子节点时，内容宽度设成和鱼骨宽度相同\n            this._renderer.setStyle(this._itemContent, 'width', '100%');\n        } else {\n            if (this.firstLevelRotate == 'down') {\n                // 主骨在下面， 没有子节点\n                this.width = this._itemContent.offsetWidth + 'px';\n            } else if (this.firstLevelRotate == 'up') {\n                // 主骨在上面，没有子节点，宽度为内容的宽度+高度，内容的最小宽度为100px，写在css里\n                this.width = this._itemContent.offsetHeight / Math.tan(60 * 0.017453293) + this._itemContent.offsetWidth + 'px';\n                // 纠正内容和鱼骨交叉\n                this._renderer.setStyle(this._itemContent, 'left', this._itemContent.offsetHeight / Math.tan(60 * 0.017453293) + 'px');\n            }\n        }\n        // 设置鱼骨宽度样式\n        this._renderer.setStyle(this.itemEl, 'width', this.width);\n    }\n\n    /**\n     * 设置范围高度\n     * 设置偏移\n     * 设置宽度\n     */\n    public setBoneAttribute() {\n        this._setRangeHeight();\n        this._setOffset();\n        this._setWidth();\n    }\n\n    public rectifyEvent = new EventEmitter();\n\n    ngOnInit() {\n        super.ngOnInit();\n        this._$state = 'in';\n        this._itemContent = <HTMLElement>this.itemEl.querySelector('.jigsaw-fish-bone-item-content');\n        this._itemDescription = <HTMLElement>this.itemEl.querySelector('.jigsaw-fish-bone-item-description');\n    }\n\n    ngAfterViewInit() {\n        // 宽度由最后一个子节点的left值决定，所以要先计算各节点的left偏移量，left偏移量等于前一个同级节点的偏移加rangeHeight\n        // 如果是第一个节点，默认偏移50，写在css里\n        // 没有子节点时，默认宽度为100，写在css里\n\n        // rangeHeight依赖子节点的宽度\n        // 先渲染最里面的子节点，逐层向上渲染\n\n        // 异步发送事件，为了最外面的父组件能够在ngAfterViewInit中订阅到子组件的事件\n        // 如果立即发送事件，则父组件订阅不到事件\n        this.callLater(this.rectifyEvent.emit, this.rectifyEvent);\n\n        // 标识没有子节点的，没有子节点的节点文本放在上面\n        if (!this.childBones.length) {\n            this._renderer.addClass(this.itemEl, 'jigsaw-fish-bone-item-no-child');\n        }\n\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, JigsawTrustedHtmlModule],\n    declarations: [JigsawFishBone, JigsawFishBoneItem],\n    exports: [JigsawFishBone]\n})\nexport class JigsawFishBoneModule {\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { QueryList, AfterViewInit, Renderer2, ElementRef, EventEmitter, OnDestroy, OnInit, NgZone, } from \"@angular/core\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\n/**\n * 标准鱼骨图组件，鱼骨图常常用于对问题的根因做分析，或者做目标分解\n *\n * $demo = fish-bone/full\n */\nvar JigsawFishBone = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawFishBone, _super);\n    function JigsawFishBone(_renderer, _elementRef, _zone) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._zone = _zone;\n        /**\n         * 鱼骨图鱼头的朝向，默认是朝左。\n         *\n         * $demo = fish-bone/full\n         */\n        _this.direction = 'left';\n        /**\n         * 鱼骨图的整体色调，默认是白色调\n         *\n         * $demo = fish-bone/full\n         */\n        _this.theme = 'white';\n        _this._allFishBones = [];\n        return _this;\n    }\n    Object.defineProperty(JigsawFishBone.prototype, \"data\", {\n        /**\n         * 图形数据，是一个树状结构的数据，对于鱼骨图展示目标不同，对树状结构的各分支页有不同的理解，分别为：\n         * - 鱼骨图用于做根因分析时：\n         *     - 树根代表着根因；\n         *     - 树的各支代表着各个主要原因及其次要原因\n         * - 鱼骨图用于做目标分解时\n         *     - 树根代表着目标；\n         *     - 树的各支代表着为各个达成目标而必须完成的主要及次要任务；\n         *\n         * $demo = fish-bone/full\n         */\n        get: function () {\n            return this._data;\n        },\n        set: function (value) {\n            this._data = value;\n            if (this._dataCallbackRemoval) {\n                this._dataCallbackRemoval();\n            }\n            this._dataCallbackRemoval = this._data.onRefresh(this.ngAfterViewInit, this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     *\n     * 按照子到父的顺序存储节点\n     * */\n    JigsawFishBone.prototype._cacheFishBoneItems = function (fishBoneItems) {\n        var _this = this;\n        fishBoneItems.forEach(function (fishBoneItem) {\n            fishBoneItem.rectifyEvent.subscribe(function () {\n                _this._allFishBones.push(fishBoneItem);\n            });\n            _this._cacheFishBoneItems(fishBoneItem.childBones);\n        });\n    };\n    /**\n     *\n     * 按照子到父的顺序设置节点的偏移量和宽度\n     * 节点的偏移前一个同级节点的 left + rangeHeight\n     * 父节点的宽度依赖最后一个子节点的 left + rangHeight\n     *\n     * */\n    JigsawFishBone.prototype._setAllBoneAttribute = function () {\n        this._allFishBones.forEach(function (fishBoneItem) {\n            fishBoneItem.setBoneAttribute();\n        });\n    };\n    /**\n     *\n     * 计算最外层的父节点的偏移\n     */\n    JigsawFishBone.prototype._setFirstLevelBoneOffset = function (fishBoneMainChildren) {\n        var fishBoneMainArray = fishBoneMainChildren.toArray();\n        fishBoneMainChildren.forEach(function (fishBoneItem, index) {\n            if (index <= 1) {\n                // 最外层的鱼骨 前面两个偏移0px\n                fishBoneItem.left = 0;\n            }\n            else {\n                // 最外层的鱼骨是上下排列的，所以用前前节点计算\n                fishBoneItem.calculateOffsetLeft(fishBoneMainArray[index - 2]);\n            }\n        });\n    };\n    JigsawFishBone.prototype._getMaxRangeHeight = function (cb) {\n        return Math.max.apply(Math, this._firstLevelBones.filter(cb).reduce(function (arr, fishBoneItem) {\n            var lastChild = fishBoneItem.childBones.last;\n            if (lastChild) {\n                // 有子节点\n                arr.push(lastChild.rangeHeight + lastChild.left);\n            }\n            else {\n                // 没有子节点\n                arr.push(fishBoneItem.itemEl.offsetWidth);\n            }\n            return arr;\n        }, []));\n    };\n    JigsawFishBone.prototype._setRangeHeight = function () {\n        // 上部的高度\n        var upHeight = Math.cos(30 * 0.017453293) * this._getMaxRangeHeight(function (fishBoneItem, index) {\n            return (index + 1) % 2 === 1;\n        }) + 30;\n        // 下部的高度\n        var downHeight = Math.cos(30 * 0.017453293) * this._getMaxRangeHeight(function (fishBoneItem, index) {\n            return (index + 1) % 2 === 0;\n        }) + 30;\n        var host = this._elementRef.nativeElement;\n        // 横向的主骨\n        var mainBone = host.querySelector('.jigsaw-fish-bone-main');\n        // 鱼骨的范围框，和整个鱼骨的宽度和高度相同\n        var fishBoneRange = host.querySelector('.jigsaw-fish-bone-range');\n        // 鱼骨组件的外框，和组件设置的宽高相同\n        var fishBoneFramework = host.querySelector('.jigsaw-fish-bone-framework');\n        this._renderer.setStyle(fishBoneRange, 'height', upHeight + downHeight + 'px');\n        // 设置主骨在范围框中的位置\n        this._renderer.setStyle(mainBone, 'top', upHeight + 'px');\n        if (this.height) {\n            // 组件设置高度，加上外框的滚动条\n            this._renderer.setStyle(fishBoneFramework, 'overflow-y', 'scroll');\n        }\n        else {\n            // 组件不设置高度，去掉外框的滚动条，组件自适应范围框的高度\n            this._renderer.setStyle(host, 'height', upHeight + downHeight + 'px');\n            this._renderer.setStyle(fishBoneFramework, 'overflow-y', 'hidden');\n        }\n    };\n    JigsawFishBone.prototype._setRangeWidth = function () {\n        var maxOffsetBone = this._firstLevelBones.toArray().sort(function (item1, item2) { return item2.left - item1.left; })[0];\n        var host = this._elementRef.nativeElement;\n        var mainBone = host.querySelector('.jigsaw-fish-bone-main');\n        var fishBoneRange = host.querySelector('.jigsaw-fish-bone-range');\n        var fishBoneFramework = host.querySelector('.jigsaw-fish-bone-framework');\n        var hostWidth = host.offsetWidth;\n        if (maxOffsetBone) {\n            // 主骨的最小宽度\n            var boneWidth = maxOffsetBone.left + maxOffsetBone.rangeHeight;\n            // 组件范围框的宽度，主骨宽度+鱼头+鱼尾\n            var rangeWidth = boneWidth + 146 + 80;\n            if (rangeWidth > hostWidth) {\n                // 范围宽度大于组件宽度，即溢出\n                // 主骨宽度等于主骨最小宽度\n                this._renderer.setStyle(mainBone, 'width', boneWidth + 'px');\n                // 鱼骨范围宽度\n                this._renderer.setStyle(fishBoneRange, 'width', rangeWidth + 'px');\n                // 加上外框的滚动条\n                this._renderer.setStyle(fishBoneFramework, 'overflow-x', 'scroll');\n            }\n            else {\n                // 范围宽度小于组件宽度\n                // 主骨宽度等于组件宽度-鱼头-鱼尾，即自适应组件宽度\n                this._renderer.setStyle(mainBone, 'width', hostWidth - 80 - 146 + 'px');\n                // 范围宽度等于组件宽度\n                this._renderer.setStyle(fishBoneRange, 'width', hostWidth + 'px');\n                // 去掉外框的滚动条\n                this._renderer.setStyle(fishBoneFramework, 'overflow-x', 'hidden');\n            }\n        }\n    };\n    JigsawFishBone.prototype.ngAfterViewInit = function () {\n        var _this = this;\n        this._cacheFishBoneItems(this._firstLevelBones);\n        this.callLater(function () {\n            _this._setAllBoneAttribute();\n            _this._setFirstLevelBoneOffset(_this._firstLevelBones);\n            _this._setRangeHeight();\n            _this._setRangeWidth();\n        });\n        this._zone.runOutsideAngular(function () {\n            _this._removeWindowListener = _this._renderer.listen('window', 'resize', function () { return _this._setRangeWidth(); });\n        });\n    };\n    JigsawFishBone.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._removeWindowListener) {\n            this._removeWindowListener();\n        }\n        if (this._dataCallbackRemoval) {\n            this._dataCallbackRemoval();\n        }\n    };\n    return JigsawFishBone;\n}(AbstractJigsawComponent));\nexport { JigsawFishBone };\n/**\n * @internal\n */\nvar JigsawFishBoneItem = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawFishBoneItem, _super);\n    function JigsawFishBoneItem(_renderer, elementRef) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this.level = 0;\n        _this.index = 0;\n        _this.rangeHeight = 0;\n        // 默认偏移50，后面只有第一个节点是默认值\n        _this._left = 50;\n        _this.rectifyEvent = new EventEmitter();\n        _this.itemEl = elementRef.nativeElement;\n        return _this;\n    }\n    Object.defineProperty(JigsawFishBoneItem.prototype, \"left\", {\n        get: function () {\n            return this._left;\n        },\n        set: function (value) {\n            this._left = value;\n            // 用setStyle保持同步，绑定[style.left]是异步的\n            this._renderer.setStyle(this.itemEl, 'left', value + 'px');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 获取最大范围高度\n     * 比较各子节点伸展高度\n     * 伸展高度：子节点有子节点，并且最后一个子节点的rangeHeight不等于0，取其最后一个子节点的rangeHeight + left；\n     *          其他取子节点自身的宽度\n     * */\n    JigsawFishBoneItem.prototype._setRangeHeight = function () {\n        var _this = this;\n        if (this.childBones.length) {\n            this.rangeHeight = Math.max.apply(Math, this.childBones.reduce(function (arr, fishBoneItem) {\n                var childRange = 0;\n                var lastChild = fishBoneItem.childBones.last;\n                if (lastChild && lastChild.rangeHeight > 30) {\n                    childRange = lastChild.rangeHeight + lastChild.left;\n                }\n                else {\n                    if (_this.firstLevelRotate == 'down') {\n                        // 主骨在下面，需要考虑内容的伸展\n                        childRange = fishBoneItem.itemEl.offsetWidth + fishBoneItem._itemContent.offsetHeight / Math.tan(60 * 0.017453293);\n                    }\n                    else {\n                        //  主骨在上面\n                        childRange = fishBoneItem.itemEl.offsetWidth;\n                    }\n                }\n                arr.push(childRange);\n                return arr;\n            }, []));\n        }\n        else {\n            // 没有子节点\n            if (this.firstLevelRotate == 'up') {\n                // 主骨在上面\n                this.rangeHeight = this._itemContent.offsetHeight / Math.sin(60 * 0.017453293);\n            }\n            else if (this.firstLevelRotate == 'down') {\n                // 主骨在下面\n                this.rangeHeight = this._itemDescription.offsetHeight;\n            }\n        }\n    };\n    /**\n     * 计算偏移并设置样式\n     *\n     */\n    JigsawFishBoneItem.prototype._setOffset = function () {\n        if (this.level !== 0) {\n            // 最外层的父节点另外计算\n            if (this.firstLevelRotate == 'down' && this.childBones.length === 0) {\n                // 主骨在下面，没有子节点\n                if (this.index === 0) {\n                    // 第一个如果内容大于默认值，则由内容撑开\n                    var contentHeight = this._itemContent.offsetHeight / Math.sin(60 * 0.017453293) + 30;\n                    this.left = contentHeight > 50 ? contentHeight : 50;\n                }\n                else {\n                    // 后面的也要加上自身内容\n                    var preBone = this.parentBone.childBones.toArray()[this.index - 1];\n                    this.left = preBone.left + preBone.rangeHeight + 30 + this._itemContent.offsetHeight / Math.sin(60 * 0.017453293);\n                }\n            }\n            else {\n                if (this.index === 0) {\n                    // 第一个节点是默认偏移50px，写在css里面\n                    this.left = this._itemDescription.offsetHeight + 30 > 50 ? this._itemDescription.offsetHeight + 30 : 50;\n                }\n                else {\n                    this.calculateOffsetLeft(this.parentBone.childBones.toArray()[this.index - 1]);\n                }\n            }\n        }\n    };\n    /**\n     * 计算偏移的通用方法\n     * @param fishBoneItem\n     */\n    JigsawFishBoneItem.prototype.calculateOffsetLeft = function (fishBoneItem) {\n        // fishBoneItem.rangeHeight 为0时，取30\n        var rangeHeight = fishBoneItem.rangeHeight > 30 ? fishBoneItem.rangeHeight : 30;\n        this.left = fishBoneItem.left + rangeHeight + this._itemDescription.offsetHeight + 30;\n    };\n    /**\n     * 计算宽度并设置样式\n     *\n     */\n    JigsawFishBoneItem.prototype._setWidth = function () {\n        if (this.childBones.last) {\n            // 取其最后一个子节点的left偏移值 + 30px\n            this.width = this.childBones.last.left + 30 + 'px';\n            // 有子节点时，内容宽度设成和鱼骨宽度相同\n            this._renderer.setStyle(this._itemContent, 'width', '100%');\n        }\n        else {\n            if (this.firstLevelRotate == 'down') {\n                // 主骨在下面， 没有子节点\n                this.width = this._itemContent.offsetWidth + 'px';\n            }\n            else if (this.firstLevelRotate == 'up') {\n                // 主骨在上面，没有子节点，宽度为内容的宽度+高度，内容的最小宽度为100px，写在css里\n                this.width = this._itemContent.offsetHeight / Math.tan(60 * 0.017453293) + this._itemContent.offsetWidth + 'px';\n                // 纠正内容和鱼骨交叉\n                this._renderer.setStyle(this._itemContent, 'left', this._itemContent.offsetHeight / Math.tan(60 * 0.017453293) + 'px');\n            }\n        }\n        // 设置鱼骨宽度样式\n        this._renderer.setStyle(this.itemEl, 'width', this.width);\n    };\n    /**\n     * 设置范围高度\n     * 设置偏移\n     * 设置宽度\n     */\n    JigsawFishBoneItem.prototype.setBoneAttribute = function () {\n        this._setRangeHeight();\n        this._setOffset();\n        this._setWidth();\n    };\n    JigsawFishBoneItem.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n        this._$state = 'in';\n        this._itemContent = this.itemEl.querySelector('.jigsaw-fish-bone-item-content');\n        this._itemDescription = this.itemEl.querySelector('.jigsaw-fish-bone-item-description');\n    };\n    JigsawFishBoneItem.prototype.ngAfterViewInit = function () {\n        // 宽度由最后一个子节点的left值决定，所以要先计算各节点的left偏移量，left偏移量等于前一个同级节点的偏移加rangeHeight\n        // 如果是第一个节点，默认偏移50，写在css里\n        // 没有子节点时，默认宽度为100，写在css里\n        // rangeHeight依赖子节点的宽度\n        // 先渲染最里面的子节点，逐层向上渲染\n        // 异步发送事件，为了最外面的父组件能够在ngAfterViewInit中订阅到子组件的事件\n        // 如果立即发送事件，则父组件订阅不到事件\n        this.callLater(this.rectifyEvent.emit, this.rectifyEvent);\n        // 标识没有子节点的，没有子节点的节点文本放在上面\n        if (!this.childBones.length) {\n            this._renderer.addClass(this.itemEl, 'jigsaw-fish-bone-item-no-child');\n        }\n    };\n    return JigsawFishBoneItem;\n}(AbstractJigsawComponent));\nexport { JigsawFishBoneItem };\nvar JigsawFishBoneModule = /** @class */ (function () {\n    function JigsawFishBoneModule() {\n    }\n    return JigsawFishBoneModule;\n}());\nexport { JigsawFishBoneModule };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./fish-bone\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../common/directive/trusted-html/trusted-html\";\nimport * as i4 from \"@angular/platform-browser\";\nvar JigsawFishBoneModuleNgFactory = i0.ɵcmf(i1.JigsawFishBoneModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.JigsawTrustedHtmlModule, i3.JigsawTrustedHtmlModule, []), i0.ɵmpd(1073742336, i1.JigsawFishBoneModule, i1.JigsawFishBoneModule, [])]); });\nexport { JigsawFishBoneModuleNgFactory as JigsawFishBoneModuleNgFactory };\nvar styles_JigsawFishBone = [];\nvar RenderType_JigsawFishBone = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawFishBone, data: {} });\nexport { RenderType_JigsawFishBone as RenderType_JigsawFishBone };\nfunction View_JigsawFishBone_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:svg\", [[\":xml:space\", \"preserve\"], [\":xmlns:xlink\", \"http://www.w3.org/1999/xlink\"], [\"enable-background\", \"new -27.112 -36.947 108.472 119.724\"], [\"height\", \"119.724px\"], [\"id\", \"\\u56FE\\u5C42_1\"], [\"style\", \"\\n    color-interpolation: blue;\\n\"], [\"version\", \"1.1\"], [\"viewBox\", \"-27.112 -36.947 108.472 119.724\"], [\"width\", \"108.472px\"], [\"x\", \"0px\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"y\", \"0px\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \":svg:path\", [[\"d\", \"M80.423,17.174c-6.248-11.317-36.646-48.986-93.181-54.11c-2.016-0.183-2.243,2.114-2.243,2.114l-0.107,3.539  c0,0-30.166,39.038,5.145,79.495c0,0-32.648-47.556,7.809-77.19c0,0,37.653,0.576,74.843,44.233  c0.566,0.666,2.287,2.809,2.594,3.728c0.438,1.317,0.252,2.02-0.775,3.693c-0.978,1.593-28.08,40.632-92.893,53.954  c-0.942,0.193-2.841,0.555-3.432,2.5c-0.571,1.878,1.251,3.867,2.497,3.627C9.381,77.236,49.367,62.332,77.303,27.34  c0.668-0.836,2.715-3.393,3.197-4.227c0.604-1.047,1.114-2.465,0.721-4.039C81.055,18.411,80.774,17.81,80.423,17.174z\"], [\"fill\", \"#BABABA\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawFishBone_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:svg\", [[\":xml:space\", \"preserve\"], [\":xmlns:xlink\", \"http://www.w3.org/1999/xlink\"], [\"enable-background\", \"new -27.112 -36.947 108.472 119.724\"], [\"height\", \"119.724px\"], [\"id\", \"\\u56FE\\u5C42_1\"], [\"style\", \"\\n    color-interpolation: blue;\\n\"], [\"version\", \"1.1\"], [\"viewBox\", \"-27.112 -36.947 108.472 119.724\"], [\"width\", \"108.472px\"], [\"x\", \"0px\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"y\", \"0px\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \":svg:path\", [[\"d\", \"M80.423,17.174c-6.248-11.317-36.646-48.986-93.181-54.11c-2.016-0.183-2.243,2.114-2.243,2.114l-0.107,3.539  c0,0-30.166,39.038,5.145,79.495c0,0-32.648-47.556,7.809-77.19c0,0,37.653,0.576,74.843,44.233  c0.566,0.666,2.287,2.809,2.594,3.728c0.438,1.317,0.252,2.02-0.775,3.693c-0.978,1.593-28.08,40.632-92.893,53.954  c-0.942,0.193-2.841,0.555-3.432,2.5c-0.571,1.878,1.251,3.867,2.497,3.627C9.381,77.236,49.367,62.332,77.303,27.34  c0.668-0.836,2.715-3.393,3.197-4.227c0.604-1.047,1.114-2.465,0.721-4.039C81.055,18.411,80.774,17.81,80.423,17.174z\"], [\"fill\", \"#6B6B6B\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawFishBone_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:svg\", [[\":xml:space\", \"preserve\"], [\":xmlns:xlink\", \"http://www.w3.org/1999/xlink\"], [\"enable-background\", \"new -15.546 -32.081 48.131 96.787\"], [\"height\", \"96.787px\"], [\"id\", \"\\u56FE\\u5C42_1\"], [\"version\", \"1.1\"], [\"viewBox\", \"-15.546 -32.081 48.131 96.787\"], [\"width\", \"48.131px\"], [\"x\", \"0px\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"y\", \"0px\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \":svg:path\", [[\"d\", \"M30.939,12.26C24.085,2.477,4.109-24.511-12.51-31.895c-0.275-0.124-0.568-0.186-0.871-0.186  c-0.427,0-0.843,0.126-1.198,0.362c-0.618,0.408-0.978,1.097-0.967,1.838c0.017,0.776,0.562,19.38,14.719,45.509l0.371,0.686  L-0.827,17C-14.984,43.13-15.529,61.733-15.546,62.515c-0.011,0.736,0.349,1.426,0.967,1.836c0.607,0.399,1.406,0.469,2.069,0.174  c17.289-7.682,38.208-36.577,44.212-45.25c0,0,0.883-1.43,0.883-2.735c0-1.709-0.883-3.185-0.883-3.185  C31.47,13.019,31.214,12.653,30.939,12.26z M26.337,19.394l-1.122,1.545C18.142,30.683,4.407,48.333-8.141,57.05l-2.833,1.969  l0.596-3.399c1.4-7.98,4.813-20.739,13.139-36.21l0.405-0.756c0,0,0.59-1.464,0.59-2.341s-0.59-2.336-0.59-2.336L2.76,13.22  C-5.567-2.25-8.979-15.009-10.379-22.99l-0.596-3.398l2.833,1.968C4.407-15.704,18.142,1.947,25.215,11.69l1.138,1.569  c0.194,0.2,1.061,1.706,1.061,3.058C27.413,17.709,26.538,19.188,26.337,19.394z\"], [\"fill\", \"#BABABA\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawFishBone_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \":svg:svg\", [[\":xml:space\", \"preserve\"], [\":xmlns:xlink\", \"http://www.w3.org/1999/xlink\"], [\"enable-background\", \"new -15.546 -32.081 48.131 96.787\"], [\"height\", \"96.787px\"], [\"id\", \"\\u56FE\\u5C42_1\"], [\"version\", \"1.1\"], [\"viewBox\", \"-15.546 -32.081 48.131 96.787\"], [\"width\", \"48.131px\"], [\"x\", \"0px\"], [\"xmlns\", \"http://www.w3.org/2000/svg\"], [\"y\", \"0px\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \":svg:path\", [[\"d\", \"M30.939,12.26C24.085,2.477,4.109-24.511-12.51-31.895c-0.275-0.124-0.568-0.186-0.871-0.186  c-0.427,0-0.843,0.126-1.198,0.362c-0.618,0.408-0.978,1.097-0.967,1.838c0.017,0.776,0.562,19.38,14.719,45.509l0.371,0.686  L-0.827,17C-14.984,43.13-15.529,61.733-15.546,62.515c-0.011,0.736,0.349,1.426,0.967,1.836c0.607,0.399,1.406,0.469,2.069,0.174  c17.289-7.682,38.208-36.577,44.212-45.25c0,0,0.883-1.43,0.883-2.735c0-1.709-0.883-3.185-0.883-3.185  C31.47,13.019,31.214,12.653,30.939,12.26z M26.337,19.394l-1.122,1.545C18.142,30.683,4.407,48.333-8.141,57.05l-2.833,1.969  l0.596-3.399c1.4-7.98,4.813-20.739,13.139-36.21l0.405-0.756c0,0,0.59-1.464,0.59-2.341s-0.59-2.336-0.59-2.336L2.76,13.22  C-5.567-2.25-8.979-15.009-10.379-22.99l-0.596-3.398l2.833,1.968C4.407-15.704,18.142,1.947,25.215,11.69l1.138,1.569  c0.194,0.2,1.061,1.706,1.061,3.058C27.413,17.709,26.538,19.188,26.337,19.394z\"], [\"fill\", \"#6B6B6B\"]], null, null, null, null, null))], null, null); }\nfunction View_JigsawFishBone_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"j-fish-bone-item\", [], [[8, \"className\", 0], [2, \"jigsaw-fish-bone-item\", null]], null, null, View_JigsawFishBoneItem_0, RenderType_JigsawFishBoneItem)), i0.ɵdid(1, 4440064, [[1, 4]], 0, i1.JigsawFishBoneItem, [i0.Renderer2, i0.ElementRef], { data: [0, \"data\"], childRotate: [1, \"childRotate\"], level: [2, \"level\"], firstLevelRotate: [3, \"firstLevelRotate\"] }, null)], function (_ck, _v) { var currVal_2 = _v.context.$implicit; var currVal_3 = (_v.context.even ? \"down\" : \"up\"); var currVal_4 = 0; var currVal_5 = (_v.context.even ? \"up\" : \"down\"); _ck(_v, 1, 0, currVal_2, currVal_3, currVal_4, currVal_5); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(2, \"jigsaw-fish-bone-item-rotate-\", (_v.context.even ? \"up\" : \"down\"), \" jigsaw-fish-bone-\", (_v.context.even ? \"up\" : \"down\"), \" jigsaw-fish-bone-level-0\"); var currVal_1 = true; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nexport function View_JigsawFishBone_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _firstLevelBones: 1 }), (_l()(), i0.ɵeld(1, 0, null, null, 16, \"div\", [[\"class\", \"jigsaw-fish-bone-framework\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 15, \"div\", [[\"class\", \"jigsaw-fish-bone-range\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 14, \"div\", [[\"class\", \"jigsaw-fish-bone-main\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 6, \"div\", [[\"class\", \"jigsaw-fish-bone-head\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBone_1)), i0.ɵdid(6, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBone_2)), i0.ɵdid(8, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"p\", [], [[8, \"innerHTML\", 1]], null, null, null, null)), i0.ɵdid(10, 212992, null, 0, i3.JigsawTrustedHtml, [i4.DomSanitizer, i0.NgZone], { trustedHtmlContext: [0, \"trustedHtmlContext\"], trustedHtml: [1, \"trustedHtml\"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 4, \"div\", [[\"class\", \"jigsaw-fish-bone-foot\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBone_3)), i0.ɵdid(13, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBone_4)), i0.ɵdid(15, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBone_5)), i0.ɵdid(17, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.theme == \"white\"); _ck(_v, 6, 0, currVal_0); var currVal_1 = (_co.theme == \"dark\"); _ck(_v, 8, 0, currVal_1); var currVal_3 = _co.data.innerHtmlContext; var currVal_4 = _co.data.label; _ck(_v, 10, 0, currVal_3, currVal_4); var currVal_5 = (_co.theme == \"white\"); _ck(_v, 13, 0, currVal_5); var currVal_6 = (_co.theme == \"dark\"); _ck(_v, 15, 0, currVal_6); var currVal_7 = _co.data.nodes; _ck(_v, 17, 0, currVal_7); }, function (_ck, _v) { var currVal_2 = i0.ɵnov(_v, 10).innerHtml; _ck(_v, 9, 0, currVal_2); }); }\nexport function View_JigsawFishBone_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"j-fish-bone\", [], [[2, \"jigsaw-fish-bone\", null], [2, \"jigsaw-fish-bone-left\", null], [2, \"jigsaw-fish-bone-right\", null], [2, \"jigsaw-fish-bone-white\", null], [2, \"jigsaw-fish-bone-dark\", null], [4, \"width\", null]], null, null, View_JigsawFishBone_0, RenderType_JigsawFishBone)), i0.ɵdid(1, 4440064, null, 0, i1.JigsawFishBone, [i0.Renderer2, i0.ElementRef, i0.NgZone], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = (i0.ɵnov(_v, 1).direction === \"left\"); var currVal_2 = (i0.ɵnov(_v, 1).direction === \"right\"); var currVal_3 = (i0.ɵnov(_v, 1).theme === \"white\"); var currVal_4 = (i0.ɵnov(_v, 1).theme === \"dark\"); var currVal_5 = i0.ɵnov(_v, 1).width; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nvar JigsawFishBoneNgFactory = i0.ɵccf(\"j-fish-bone, jigsaw-fish-bone\", i1.JigsawFishBone, View_JigsawFishBone_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", data: \"data\", direction: \"direction\", theme: \"theme\" }, {}, []);\nexport { JigsawFishBoneNgFactory as JigsawFishBoneNgFactory };\nvar styles_JigsawFishBoneItem = [];\nvar RenderType_JigsawFishBoneItem = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawFishBoneItem, data: { \"animation\": [{ type: 7, name: \"fadeIn\", definitions: [{ type: 0, name: \"in\", styles: { type: 6, styles: { opacity: 1 }, offset: null }, options: undefined }, { type: 1, expr: \"void => *\", animation: [{ type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 0, offset: 0 }, offset: null }, { type: 6, styles: { opacity: 1, offset: 1 }, offset: null }] }, timings: 400 }], options: null }, { type: 1, expr: \"* => void\", animation: [{ type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 1, offset: 0 }, offset: null }, { type: 6, styles: { opacity: 0, offset: 1 }, offset: null }] }, timings: 400 }], options: null }], options: {} }] } });\nexport { RenderType_JigsawFishBoneItem as RenderType_JigsawFishBoneItem };\nfunction View_JigsawFishBoneItem_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"j-fish-bone-item\", [], [[8, \"className\", 0], [24, \"@fadeIn\", 0], [2, \"jigsaw-fish-bone-item\", null]], null, null, View_JigsawFishBoneItem_0, RenderType_JigsawFishBoneItem)), i0.ɵdid(1, 4440064, [[1, 4]], 0, i1.JigsawFishBoneItem, [i0.Renderer2, i0.ElementRef], { data: [0, \"data\"], childRotate: [1, \"childRotate\"], parentBone: [2, \"parentBone\"], level: [3, \"level\"], index: [4, \"index\"], firstLevelRotate: [5, \"firstLevelRotate\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _v.context.$implicit; var currVal_4 = ((_co.childRotate == \"up\") ? \"down\" : \"up\"); var currVal_5 = _co; var currVal_6 = (_co.level + 1); var currVal_7 = _v.context.index; var currVal_8 = _co.firstLevelRotate; _ck(_v, 1, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵinlineInterpolate(2, \"jigsaw-fish-bone-item-rotate-\", _co.childRotate, \" jigsaw-fish-bone-level-\", (_co.level + 1), \"\"); var currVal_1 = _co._$state; var currVal_2 = true; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_JigsawFishBoneItem_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { childBones: 1 }), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-fish-bone-item-content\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), i0.ɵdid(2, 212992, null, 0, i3.JigsawTrustedHtml, [i4.DomSanitizer, i0.NgZone], { trustedHtmlContext: [0, \"trustedHtmlContext\"], trustedHtml: [1, \"trustedHtml\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-fish-bone-item-description\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), i0.ɵdid(4, 212992, null, 0, i3.JigsawTrustedHtml, [i4.DomSanitizer, i0.NgZone], { trustedHtmlContext: [0, \"trustedHtmlContext\"], trustedHtml: [1, \"trustedHtml\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawFishBoneItem_1)), i0.ɵdid(6, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.data.innerHtmlContext; var currVal_2 = _co.data.label; _ck(_v, 2, 0, currVal_1, currVal_2); var currVal_4 = _co.data.innerHtmlContext; var currVal_5 = _co.data.desc; _ck(_v, 4, 0, currVal_4, currVal_5); var currVal_6 = _co.data.nodes; _ck(_v, 6, 0, currVal_6); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).innerHtml; _ck(_v, 1, 0, currVal_0); var currVal_3 = i0.ɵnov(_v, 4).innerHtml; _ck(_v, 3, 0, currVal_3); }); }\nexport function View_JigsawFishBoneItem_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"j-fish-bone-item\", [], [[2, \"jigsaw-fish-bone-item\", null]], null, null, View_JigsawFishBoneItem_0, RenderType_JigsawFishBoneItem)), i0.ɵdid(1, 4440064, null, 0, i1.JigsawFishBoneItem, [i0.Renderer2, i0.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = true; _ck(_v, 0, 0, currVal_0); }); }\nvar JigsawFishBoneItemNgFactory = i0.ɵccf(\"j-fish-bone-item, jigsaw-fish-bone-item\", i1.JigsawFishBoneItem, View_JigsawFishBoneItem_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", data: \"data\", childRotate: \"childRotate\", parentBone: \"parentBone\", level: \"level\", index: \"index\", firstLevelRotate: \"firstLevelRotate\" }, {}, []);\nexport { JigsawFishBoneItemNgFactory as JigsawFishBoneItemNgFactory };\n","<div class=\"jigsaw-fish-bone-framework\">\n    <div class=\"jigsaw-fish-bone-range\">\n        <div class=\"jigsaw-fish-bone-main\">\n            <div class=\"jigsaw-fish-bone-head\">\n                <svg *ngIf=\"theme == 'white'\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"图层_1\" x=\"0px\" y=\"0px\" width=\"108.472px\" height=\"119.724px\" viewBox=\"-27.112 -36.947 108.472 119.724\" enable-background=\"new -27.112 -36.947 108.472 119.724\" xml:space=\"preserve\" style=\"&#10;    color-interpolation: blue;&#10;\">\n                    <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M80.423,17.174c-6.248-11.317-36.646-48.986-93.181-54.11c-2.016-0.183-2.243,2.114-2.243,2.114l-0.107,3.539  c0,0-30.166,39.038,5.145,79.495c0,0-32.648-47.556,7.809-77.19c0,0,37.653,0.576,74.843,44.233  c0.566,0.666,2.287,2.809,2.594,3.728c0.438,1.317,0.252,2.02-0.775,3.693c-0.978,1.593-28.08,40.632-92.893,53.954  c-0.942,0.193-2.841,0.555-3.432,2.5c-0.571,1.878,1.251,3.867,2.497,3.627C9.381,77.236,49.367,62.332,77.303,27.34  c0.668-0.836,2.715-3.393,3.197-4.227c0.604-1.047,1.114-2.465,0.721-4.039C81.055,18.411,80.774,17.81,80.423,17.174z\" fill=\"#BABABA\"/>\n                </svg>\n                <svg *ngIf=\"theme == 'dark'\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"图层_1\" x=\"0px\" y=\"0px\" width=\"108.472px\" height=\"119.724px\" viewBox=\"-27.112 -36.947 108.472 119.724\" enable-background=\"new -27.112 -36.947 108.472 119.724\" xml:space=\"preserve\" style=\"&#10;    color-interpolation: blue;&#10;\">\n                    <path xmlns=\"http://www.w3.org/2000/svg\" d=\"M80.423,17.174c-6.248-11.317-36.646-48.986-93.181-54.11c-2.016-0.183-2.243,2.114-2.243,2.114l-0.107,3.539  c0,0-30.166,39.038,5.145,79.495c0,0-32.648-47.556,7.809-77.19c0,0,37.653,0.576,74.843,44.233  c0.566,0.666,2.287,2.809,2.594,3.728c0.438,1.317,0.252,2.02-0.775,3.693c-0.978,1.593-28.08,40.632-92.893,53.954  c-0.942,0.193-2.841,0.555-3.432,2.5c-0.571,1.878,1.251,3.867,2.497,3.627C9.381,77.236,49.367,62.332,77.303,27.34  c0.668-0.836,2.715-3.393,3.197-4.227c0.604-1.047,1.114-2.465,0.721-4.039C81.055,18.411,80.774,17.81,80.423,17.174z\" fill=\"#6B6B6B\"/>\n                </svg>\n                <p [trustedHtml]=\"data.label\" [trustedHtmlContext]=\"data.innerHtmlContext\"></p>\n            </div>\n\n            <div class=\"jigsaw-fish-bone-foot\">\n                <svg *ngIf=\"theme == 'white'\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"图层_1\" x=\"0px\" y=\"0px\" width=\"48.131px\" height=\"96.787px\" viewBox=\"-15.546 -32.081 48.131 96.787\" enable-background=\"new -15.546 -32.081 48.131 96.787\" xml:space=\"preserve\">\n                    <path d=\"M30.939,12.26C24.085,2.477,4.109-24.511-12.51-31.895c-0.275-0.124-0.568-0.186-0.871-0.186  c-0.427,0-0.843,0.126-1.198,0.362c-0.618,0.408-0.978,1.097-0.967,1.838c0.017,0.776,0.562,19.38,14.719,45.509l0.371,0.686  L-0.827,17C-14.984,43.13-15.529,61.733-15.546,62.515c-0.011,0.736,0.349,1.426,0.967,1.836c0.607,0.399,1.406,0.469,2.069,0.174  c17.289-7.682,38.208-36.577,44.212-45.25c0,0,0.883-1.43,0.883-2.735c0-1.709-0.883-3.185-0.883-3.185  C31.47,13.019,31.214,12.653,30.939,12.26z M26.337,19.394l-1.122,1.545C18.142,30.683,4.407,48.333-8.141,57.05l-2.833,1.969  l0.596-3.399c1.4-7.98,4.813-20.739,13.139-36.21l0.405-0.756c0,0,0.59-1.464,0.59-2.341s-0.59-2.336-0.59-2.336L2.76,13.22  C-5.567-2.25-8.979-15.009-10.379-22.99l-0.596-3.398l2.833,1.968C4.407-15.704,18.142,1.947,25.215,11.69l1.138,1.569  c0.194,0.2,1.061,1.706,1.061,3.058C27.413,17.709,26.538,19.188,26.337,19.394z\" fill=\"#BABABA\"/>\n                </svg>\n                <svg *ngIf=\"theme == 'dark'\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" id=\"图层_1\" x=\"0px\" y=\"0px\" width=\"48.131px\" height=\"96.787px\" viewBox=\"-15.546 -32.081 48.131 96.787\" enable-background=\"new -15.546 -32.081 48.131 96.787\" xml:space=\"preserve\">\n                    <path d=\"M30.939,12.26C24.085,2.477,4.109-24.511-12.51-31.895c-0.275-0.124-0.568-0.186-0.871-0.186  c-0.427,0-0.843,0.126-1.198,0.362c-0.618,0.408-0.978,1.097-0.967,1.838c0.017,0.776,0.562,19.38,14.719,45.509l0.371,0.686  L-0.827,17C-14.984,43.13-15.529,61.733-15.546,62.515c-0.011,0.736,0.349,1.426,0.967,1.836c0.607,0.399,1.406,0.469,2.069,0.174  c17.289-7.682,38.208-36.577,44.212-45.25c0,0,0.883-1.43,0.883-2.735c0-1.709-0.883-3.185-0.883-3.185  C31.47,13.019,31.214,12.653,30.939,12.26z M26.337,19.394l-1.122,1.545C18.142,30.683,4.407,48.333-8.141,57.05l-2.833,1.969  l0.596-3.399c1.4-7.98,4.813-20.739,13.139-36.21l0.405-0.756c0,0,0.59-1.464,0.59-2.341s-0.59-2.336-0.59-2.336L2.76,13.22  C-5.567-2.25-8.979-15.009-10.379-22.99l-0.596-3.398l2.833,1.968C4.407-15.704,18.142,1.947,25.215,11.69l1.138,1.569  c0.194,0.2,1.061,1.706,1.061,3.058C27.413,17.709,26.538,19.188,26.337,19.394z\" fill=\"#6B6B6B\"/>\n                </svg>\n            </div>\n\n            <j-fish-bone-item\n                *ngFor=\"let itemData of data.nodes; even as isEven; odd as isOdd; index as i\"\n                class=\"jigsaw-fish-bone-item-rotate-{{isEven ? 'up' : 'down'}} jigsaw-fish-bone-{{isEven ? 'up' : 'down'}} jigsaw-fish-bone-level-0\"\n                [childRotate]=\"isEven ? 'down' : 'up'\"\n                [firstLevelRotate]=\"isEven ? 'up' : 'down'\"\n                [data]=\"itemData\"\n                [level]=\"0\">\n            </j-fish-bone-item>\n        </div>\n    </div>\n</div>\n","<div class=\"jigsaw-fish-bone-item-content\" [trustedHtml]=\"data.label\" [trustedHtmlContext]=\"data.innerHtmlContext\"></div>\n<div class=\"jigsaw-fish-bone-item-description\" [trustedHtml]=\"data.desc\" [trustedHtmlContext]=\"data.innerHtmlContext\"></div>\n<j-fish-bone-item *ngFor=\"let itemData of data.nodes; index as i; first as isFirst\"\n                  class=\"jigsaw-fish-bone-item-rotate-{{childRotate}} jigsaw-fish-bone-level-{{level + 1}}\"\n                  [childRotate]=\"childRotate == 'up' ? 'down' : 'up'\"\n                  [firstLevelRotate]=\"firstLevelRotate\"\n                  [data]=\"itemData\"\n                  [level]=\"level + 1\"\n                  [parentBone]=\"this\"\n                  [index]=\"i\"\n                  [@fadeIn]=\"_$state\">\n</j-fish-bone-item>\n\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"./demo.component.css.ngstyle\";\nimport * as i1 from \"@angular/core\";\nimport * as i2 from \"../../../../demo-description/demo-description.ngfactory\";\nimport * as i3 from \"../../../../demo-description/demo-description\";\nimport * as i4 from \"../../../../../jigsaw/pc-components/fish-bone/fish-bone.ngfactory\";\nimport * as i5 from \"../../../../../jigsaw/pc-components/fish-bone/fish-bone\";\nimport * as i6 from \"../../../../../jigsaw/pc-components/select/select.ngfactory\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../../../jigsaw/pc-components/select/select\";\nimport * as i9 from \"./demo.component\";\nimport * as i10 from \"@angular/common/http\";\nvar styles_FishBoneFullComponent = [i0.styles];\nvar RenderType_FishBoneFullComponent = i1.ɵcrt({ encapsulation: 2, styles: styles_FishBoneFullComponent, data: {} });\nexport { RenderType_FishBoneFullComponent as RenderType_FishBoneFullComponent };\nexport function View_FishBoneFullComponent_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"jigsaw-demo-description\", [], null, null, null, i2.View_JigsawDemoDescription_0, i2.RenderType_JigsawDemoDescription)), i1.ɵdid(1, 114688, null, 0, i3.JigsawDemoDescription, [], { content: [0, \"content\"], summary: [1, \"summary\"] }, null), (_l()(), i1.ɵeld(2, 0, null, null, 20, \"div\", [[\"class\", \"live-demo-wrap\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(3, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"Fish Bone\"])), (_l()(), i1.ɵeld(5, 0, null, null, 4, \"div\", [[\"class\", \"demo-1 live-demo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(6, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5DE6\\u8FB9 \\u767D\\u8272\"])), (_l()(), i1.ɵeld(8, 0, null, null, 1, \"j-fish-bone\", [], [[2, \"jigsaw-fish-bone\", null], [2, \"jigsaw-fish-bone-left\", null], [2, \"jigsaw-fish-bone-right\", null], [2, \"jigsaw-fish-bone-white\", null], [2, \"jigsaw-fish-bone-dark\", null], [4, \"width\", null]], null, null, i4.View_JigsawFishBone_0, i4.RenderType_JigsawFishBone)), i1.ɵdid(9, 4440064, null, 0, i5.JigsawFishBone, [i1.Renderer2, i1.ElementRef, i1.NgZone], { data: [0, \"data\"] }, null), (_l()(), i1.ɵeld(10, 0, null, null, 4, \"div\", [[\"class\", \"demo-2 live-demo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(11, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u53F3\\u8FB9 \\u9ED1\\u8272\"])), (_l()(), i1.ɵeld(13, 0, null, null, 1, \"j-fish-bone\", [[\"direction\", \"right\"], [\"theme\", \"dark\"]], [[2, \"jigsaw-fish-bone\", null], [2, \"jigsaw-fish-bone-left\", null], [2, \"jigsaw-fish-bone-right\", null], [2, \"jigsaw-fish-bone-white\", null], [2, \"jigsaw-fish-bone-dark\", null], [4, \"width\", null]], null, null, i4.View_JigsawFishBone_0, i4.RenderType_JigsawFishBone)), i1.ɵdid(14, 4440064, null, 0, i5.JigsawFishBone, [i1.Renderer2, i1.ElementRef, i1.NgZone], { data: [0, \"data\"], direction: [1, \"direction\"], theme: [2, \"theme\"] }, null), (_l()(), i1.ɵeld(15, 0, null, null, 7, \"div\", [[\"class\", \"demo-3 live-demo\"]], null, null, null, null, null)), (_l()(), i1.ɵeld(16, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i1.ɵted(-1, null, [\"\\u5B9E\\u7528\\u573A\\u666F\"])), (_l()(), i1.ɵeld(18, 0, null, null, 2, \"jigsaw-select\", [[\"labelField\", \"label\"]], [[2, \"jigsaw-select-host\", null], [2, \"jigsaw-select-single-select\", null], [4, \"min-width\", null], [4, \"max-width\", null], [4, \"width\", null]], [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = ((_co.selectedScene = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"valueChange\" === en)) {\n        var pd_1 = (_co.changeData($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i6.View_JigsawSelect_0, i6.RenderType_JigsawSelect)), i1.ɵprd(5120, null, i7.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i8.JigsawSelect]), i1.ɵdid(20, 245760, null, 0, i8.JigsawSelect, [], { labelField: [0, \"labelField\"], data: [1, \"data\"], value: [2, \"value\"] }, { valueChange: \"valueChange\" }), (_l()(), i1.ɵeld(21, 0, null, null, 1, \"j-fish-bone\", [[\"class\", \"custom-pie-bone\"]], [[2, \"jigsaw-fish-bone\", null], [2, \"jigsaw-fish-bone-left\", null], [2, \"jigsaw-fish-bone-right\", null], [2, \"jigsaw-fish-bone-white\", null], [2, \"jigsaw-fish-bone-dark\", null], [4, \"width\", null]], null, null, i4.View_JigsawFishBone_0, i4.RenderType_JigsawFishBone)), i1.ɵdid(22, 4440064, null, 0, i5.JigsawFishBone, [i1.Renderer2, i1.ElementRef, i1.NgZone], { data: [0, \"data\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.description; var currVal_1 = _co.summary; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_8 = _co.data; _ck(_v, 9, 0, currVal_8); var currVal_15 = _co.data2; var currVal_16 = \"right\"; var currVal_17 = \"dark\"; _ck(_v, 14, 0, currVal_15, currVal_16, currVal_17); var currVal_23 = \"label\"; var currVal_24 = _co.sceneData; var currVal_25 = _co.selectedScene; _ck(_v, 20, 0, currVal_23, currVal_24, currVal_25); var currVal_32 = _co.data3; _ck(_v, 22, 0, currVal_32); }, function (_ck, _v) { var currVal_2 = true; var currVal_3 = (i1.ɵnov(_v, 9).direction === \"left\"); var currVal_4 = (i1.ɵnov(_v, 9).direction === \"right\"); var currVal_5 = (i1.ɵnov(_v, 9).theme === \"white\"); var currVal_6 = (i1.ɵnov(_v, 9).theme === \"dark\"); var currVal_7 = i1.ɵnov(_v, 9).width; _ck(_v, 8, 0, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7); var currVal_9 = true; var currVal_10 = (i1.ɵnov(_v, 14).direction === \"left\"); var currVal_11 = (i1.ɵnov(_v, 14).direction === \"right\"); var currVal_12 = (i1.ɵnov(_v, 14).theme === \"white\"); var currVal_13 = (i1.ɵnov(_v, 14).theme === \"dark\"); var currVal_14 = i1.ɵnov(_v, 14).width; _ck(_v, 13, 0, currVal_9, currVal_10, currVal_11, currVal_12, currVal_13, currVal_14); var currVal_18 = true; var currVal_19 = !i1.ɵnov(_v, 20).multipleSelect; var currVal_20 = (i1.ɵnov(_v, 20).multipleSelect ? i1.ɵnov(_v, 20).minWidth : \"none\"); var currVal_21 = (i1.ɵnov(_v, 20).multipleSelect ? i1.ɵnov(_v, 20).maxWidth : \"none\"); var currVal_22 = (!i1.ɵnov(_v, 20).multipleSelect ? i1.ɵnov(_v, 20).width : \"none\"); _ck(_v, 18, 0, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22); var currVal_26 = true; var currVal_27 = (i1.ɵnov(_v, 22).direction === \"left\"); var currVal_28 = (i1.ɵnov(_v, 22).direction === \"right\"); var currVal_29 = (i1.ɵnov(_v, 22).theme === \"white\"); var currVal_30 = (i1.ɵnov(_v, 22).theme === \"dark\"); var currVal_31 = i1.ɵnov(_v, 22).width; _ck(_v, 21, 0, currVal_26, currVal_27, currVal_28, currVal_29, currVal_30, currVal_31); }); }\nexport function View_FishBoneFullComponent_Host_0(_l) { return i1.ɵvid(0, [(_l()(), i1.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_FishBoneFullComponent_0, RenderType_FishBoneFullComponent)), i1.ɵdid(1, 4243456, null, 0, i9.FishBoneFullComponent, [i10.HttpClient], null, null)], null, null); }\nvar FishBoneFullComponentNgFactory = i1.ɵccf(\"ng-component\", i9.FishBoneFullComponent, View_FishBoneFullComponent_Host_0, {}, {}, []);\nexport { FishBoneFullComponentNgFactory as FishBoneFullComponentNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nvar styles = [\".orange{color:orange}.green{color:green}.custom-pie-bone .jigsaw-fish-bone-item-rotate-up.jigsaw-fish-bone-level-1 .jigsaw-fish-bone-item-content{padding-left:20px}.custom-pie-bone .jigsaw-fish-bone-item-rotate-up.jigsaw-fish-bone-level-1 .jigsaw-fish-bone-item-description{left:28%}.custom-pie-bone .jigsaw-fish-bone-item-rotate-down.jigsaw-fish-bone-level-1 .jigsaw-fish-bone-item-content{padding-right:20px}.custom-pie-bone .jigsaw-fish-bone-item-rotate-down.jigsaw-fish-bone-level-1 .jigsaw-fish-bone-item-description{left:37%}\\n/*# sourceMappingURL=demo.component.css.map*/\"];\nexport { styles as styles };\n","<!-- ignore the following lines, they are not important to this demo -->\n<jigsaw-demo-description [summary]=\"summary\" [content]=\"description\">\n</jigsaw-demo-description>\n\n\n<!-- start to learn the demo from here -->\n<div class=\"live-demo-wrap\">\n    <h2>Fish Bone</h2>\n    <div class=\"demo-1 live-demo\">\n        <h3>左边 白色</h3>\n        <j-fish-bone [data]=\"data\"></j-fish-bone>\n    </div>\n    <div class=\"demo-2 live-demo\">\n        <h3>右边 黑色</h3>\n        <j-fish-bone [data]=\"data2\" direction=\"right\" theme=\"dark\" ></j-fish-bone>\n    </div>\n    <div class=\"demo-3 live-demo\">\n        <h3>实用场景</h3>\n        <jigsaw-select labelField=\"label\"\n                       [(value)]=\"selectedScene\"\n                       [data]=\"sceneData\"\n                       (valueChange)=\"changeData($event)\">\n        </jigsaw-select>\n        <j-fish-bone class=\"custom-pie-bone\" [data]=\"data3\"></j-fish-bone>\n    </div>\n</div>\n","import {NgModule} from \"@angular/core\";\nimport {JigsawFishBoneModule} from \"jigsaw/pc-components/fish-bone/fish-bone\";\nimport {JigsawDemoDescriptionModule} from \"app/demo-description/demo-description\";\nimport {FishBoneFullComponent} from \"./demo.component\";\nimport {JigsawSelectModule} from \"jigsaw/pc-components/select/select\";\n\n@NgModule({\n    imports: [JigsawFishBoneModule, JigsawDemoDescriptionModule, JigsawSelectModule],\n    declarations: [FishBoneFullComponent],\n    exports: [FishBoneFullComponent]\n})\nexport class FishBoneFullModule {\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./demo-set.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./full/demo.component.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../../../jigsaw/common/service/popup.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"../../../../jigsaw/common/directive/trusted-html/trusted-html\";\nimport * as i9 from \"../../../../jigsaw/pc-components/fish-bone/fish-bone\";\nimport * as i10 from \"../../../markdown/markdown\";\nimport * as i11 from \"../../../demo-description/demo-description\";\nimport * as i12 from \"../../../../jigsaw/pc-components/tag/tag\";\nimport * as i13 from \"../../../../jigsaw/pc-components/input/input\";\nimport * as i14 from \"../../../../jigsaw/common/directive/float/index\";\nimport * as i15 from \"ngx-perfect-scrollbar\";\nimport * as i16 from \"../../../../jigsaw/pc-components/combo-select/index\";\nimport * as i17 from \"../../../../jigsaw/pc-components/list-and-tile/list\";\nimport * as i18 from \"../../../../jigsaw/pc-components/list-and-tile/list-lite\";\nimport * as i19 from \"../../../../jigsaw/pc-components/select/select\";\nimport * as i20 from \"./full/demo.module\";\nimport * as i21 from \"./full/demo.component\";\nvar FishBoneDemoModuleNgFactory = i0.ɵcmf(i1.FishBoneDemoModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.FishBoneFullComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.ɵangular_packages_forms_forms_o, i5.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i6.PopupService, i6.PopupService, [i0.ComponentFactoryResolver, i0.NgZone, [2, i7.Router], [2, i7.ActivatedRoute]]), i0.ɵmpd(1073742336, i7.RouterModule, i7.RouterModule, [[2, i7.ɵangular_packages_router_router_a], [2, i7.Router]]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i8.JigsawTrustedHtmlModule, i8.JigsawTrustedHtmlModule, []), i0.ɵmpd(1073742336, i9.JigsawFishBoneModule, i9.JigsawFishBoneModule, []), i0.ɵmpd(1073742336, i10.JigsawMarkdownModule, i10.JigsawMarkdownModule, []), i0.ɵmpd(1073742336, i11.JigsawDemoDescriptionModule, i11.JigsawDemoDescriptionModule, []), i0.ɵmpd(1073742336, i12.JigsawTagModule, i12.JigsawTagModule, []), i0.ɵmpd(1073742336, i5.ɵangular_packages_forms_forms_d, i5.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i5.FormsModule, i5.FormsModule, []), i0.ɵmpd(1073742336, i13.JigsawInputModule, i13.JigsawInputModule, []), i0.ɵmpd(1073742336, i14.JigsawFloatModule, i14.JigsawFloatModule, []), i0.ɵmpd(1073742336, i15.PerfectScrollbarModule, i15.PerfectScrollbarModule, []), i0.ɵmpd(1073742336, i16.JigsawComboSelectModule, i16.JigsawComboSelectModule, []), i0.ɵmpd(1073742336, i17.JigsawListModule, i17.JigsawListModule, []), i0.ɵmpd(1073742336, i18.JigsawListLiteModule, i18.JigsawListLiteModule, []), i0.ɵmpd(1073742336, i19.JigsawSelectModule, i19.JigsawSelectModule, []), i0.ɵmpd(1073742336, i20.FishBoneFullModule, i20.FishBoneFullModule, []), i0.ɵmpd(1073742336, i1.FishBoneDemoModule, i1.FishBoneDemoModule, []), i0.ɵmpd(1024, i7.ROUTES, function () { return [[{ path: \"full\", component: i21.FishBoneFullComponent }]]; }, [])]); });\nexport { FishBoneDemoModuleNgFactory as FishBoneDemoModuleNgFactory };\n"],"sourceRoot":""}