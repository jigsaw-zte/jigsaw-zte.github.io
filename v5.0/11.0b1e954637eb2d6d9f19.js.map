{"version":3,"sources":["webpack:///./src/jigsaw/mobile-components/list-and-tile/button-bar.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/button-bar.ts.JigsawMobileButtonBar.html","webpack:///./src/jigsaw/mobile-components/list-and-tile/button-bar.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/button-bar.ts","webpack:///./src/jigsaw/mobile-components/switch/switch.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/switch/switch.html","webpack:///./src/jigsaw/mobile-components/list-and-tile/tile.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/tile.ts.JigsawMobileTile.html","webpack:///./src/jigsaw/mobile-components/list-and-tile/tile.ts.JigsawMobileTileOption.html","webpack:///./src/jigsaw/mobile-components/switch/switch.ts","webpack:///./src/jigsaw/mobile-components/switch/switch.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/group-common.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/group-common.ts","webpack:///./src/jigsaw/mobile-components/input/input.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/input/input.ts","webpack:///./src/jigsaw/mobile-components/list-and-tile/tile.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/mobile-components/list-and-tile/tile.ts","webpack:///./src/jigsaw/mobile-components/switch/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","RenderType_JigsawMobileButtonBar","View_JigsawMobileButtonBar_0","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_tile__WEBPACK_IMPORTED_MODULE_5__","_tile_ngfactory__WEBPACK_IMPORTED_MODULE_6__","encapsulation","styles","data","View_JigsawMobileButtonBar_1","_l","_v","en","$event","ad","_$handleClick","ngClass","jigsaw-mobile-button-bar-one-option","width","height","value","disabled","_ck","_co","component","currVal_6","length","optionWidth","context","$implicit","selected","labelField","selectedItems","_$handleSelectChange","p0_0","valid","trackItemBy","multipleSelect","selectedItemsChange","_items","ngForOf","ngForTrackBy","_$trackByFn","JigsawMobileButtonBar","JigsawMobileButtonBarModule","tslib__WEBPACK_IMPORTED_MODULE_0__","_super","_this","apply","this","arguments","colorType","RenderType_JigsawMobileSwitch","View_JigsawMobileSwitch_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_$switchClick","_$switchClass","_$content","RenderType_JigsawMobileTile","View_JigsawMobileTile_0","RenderType_JigsawMobileTileOption","View_JigsawMobileTileOption_0","JigsawMobileSwitch","size","_checked","checkedChange","change","_disabled","_propagateChange","Object","defineProperty","prototype","get","set","writeValue","enumerable","configurable","_setSwitchClass","checked","emit","jigsaw-switch","jigsaw-switch-small","jigsaw-switch-checked","jigsaw-switch-disabled","_setInnerValue","onLabel","offLabel","ngOnInit","registerOnChange","fn","registerOnTouched","AbstractJigsawMobileGroupComponent","AbstractJigsawMobileOptionComponent","_common_common__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","_common_core_data_array_collection__WEBPACK_IMPORTED_MODULE_4__","_trackItemBy","_selectedItems","split","newValue","_removeInvalidSelectedItems","forEach","selectedItem","find","item","compareWithKeyProperty","splice","indexOf","_updateSelectItems","itemValue","push","selectedItemValue","changeDetector","detectChanges","refresh","_updateSelectItemsForForm","update","_setItemState","items","callLater","hasSelected","_subscribeItemSelectedChange","observers","subscribe","ngAfterContentInit","changes","ngOnDestroy","call","_removeRefreshCallback","unsubscribe","_setSelectedItems","initialized","onRefresh","selectedChange","JigsawMobileInput","JigsawMobileInputModule","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","_render2","_elementRef","clearable","password","_focusEmitter","_blurEmitter","_value","valueChange","_placeholder","_focused","blurOnClear","isUndefined","toString","_setInputPaddingStyle","txt","focus","_inputElement","nativeElement","select","_$clearValue","_$handleFocus","event","_$handleBlur","_$stopPropagation","preventDefault","stopPropagation","prefixIconWidth","querySelector","offsetWidth","endIconWidth","prefixIconPadding","_$inputPaddingStyle","padding-left","padding-right","setStyle","JigsawMobileTile","JigsawMobileTileOption","JigsawMobileTileSelectModule","_group_common__WEBPACK_IMPORTED_MODULE_1__","JigsawMobileSwitchModule"],"mappings":"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","file":"11.0b1e954637eb2d6d9f19.js","sourcesContent":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./button-bar\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../input/input\";\nimport * as i5 from \"./tile\";\nimport * as i6 from \"./tile.ngfactory\";\nvar JigsawMobileButtonBarModuleNgFactory = i0.ɵcmf(i1.JigsawMobileButtonBarModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.ɵangular_packages_forms_forms_o, i3.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ɵangular_packages_forms_forms_d, i3.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i3.FormsModule, i3.FormsModule, []), i0.ɵmpd(1073742336, i4.JigsawMobileInputModule, i4.JigsawMobileInputModule, []), i0.ɵmpd(1073742336, i5.JigsawMobileTileSelectModule, i5.JigsawMobileTileSelectModule, []), i0.ɵmpd(1073742336, i1.JigsawMobileButtonBarModule, i1.JigsawMobileButtonBarModule, [])]); });\nexport { JigsawMobileButtonBarModuleNgFactory as JigsawMobileButtonBarModuleNgFactory };\nvar styles_JigsawMobileButtonBar = [];\nvar RenderType_JigsawMobileButtonBar = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawMobileButtonBar, data: {} });\nexport { RenderType_JigsawMobileButtonBar as RenderType_JigsawMobileButtonBar };\nfunction View_JigsawMobileButtonBar_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"jm-tile-option\", [], [[4, \"width\", null], [4, \"height\", null], [4, \"line-height\", null], [2, \"jigsaw-tile-option\", null], [2, \"jigsaw-tile-option-active\", null], [2, \"jigsaw-tile-option-disabled\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 4)._$handleClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_JigsawMobileTileOption_0, i6.RenderType_JigsawMobileTileOption)), i0.ɵprd(512, null, i2.ɵNgClassImpl, i2.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i2.NgClass, [i2.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), i0.ɵpod(3, { \"jigsaw-mobile-button-bar-one-option\": 0 }), i0.ɵdid(4, 245760, [[1, 4], [\"tileOpt\", 4]], 0, i5.JigsawMobileTileOption, [i0.ChangeDetectorRef], { width: [0, \"width\"], height: [1, \"height\"], value: [2, \"value\"], disabled: [3, \"disabled\"] }, null), (_l()(), i0.ɵted(5, 0, [\" \", \" \"]))], function (_ck, _v) { var _co = _v.component; var currVal_6 = _ck(_v, 3, 0, (_co.data && (_co.data.length == 1))); _ck(_v, 2, 0, currVal_6); var currVal_7 = _co.optionWidth; var currVal_8 = _co.height; var currVal_9 = _v.context.$implicit; var currVal_10 = ((_v.context.$implicit == null) ? null : _v.context.$implicit.disabled); _ck(_v, 4, 0, currVal_7, currVal_8, currVal_9, currVal_10); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵnov(_v, 4).width; var currVal_1 = i0.ɵnov(_v, 4).height; var currVal_2 = i0.ɵnov(_v, 4).height; var currVal_3 = true; var currVal_4 = i0.ɵnov(_v, 4).selected; var currVal_5 = i0.ɵnov(_v, 4).disabled; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); var currVal_11 = ((_v.context.$implicit && _v.context.$implicit[_co.labelField]) ? _v.context.$implicit[_co.labelField] : _v.context.$implicit); _ck(_v, 5, 0, currVal_11); }); }\nexport function View_JigsawMobileButtonBar_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"jm-tile\", [], [[4, \"width\", null], [4, \"height\", null], [2, \"jigsaw-tile\", null], [2, \"jigsaw-tile-error\", null]], [[null, \"selectedItemsChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectedItemsChange\" === en)) {\n        var pd_0 = ((_co.selectedItems = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectedItemsChange\" === en)) {\n        var pd_1 = (_co._$handleSelectChange($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i6.View_JigsawMobileTile_0, i6.RenderType_JigsawMobileTile)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawMobileTile]), i0.ɵdid(2, 1294336, null, 1, i5.JigsawMobileTile, [], { height: [0, \"height\"], valid: [1, \"valid\"], trackItemBy: [2, \"trackItemBy\"], multipleSelect: [3, \"multipleSelect\"], selectedItems: [4, \"selectedItems\"] }, { selectedItemsChange: \"selectedItemsChange\" }), i0.ɵqud(603979776, 1, { _items: 1 }), (_l()(), i0.ɵand(16777216, null, 0, 1, null, View_JigsawMobileButtonBar_1)), i0.ɵdid(5, 278528, null, 0, i2.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"], ngForTrackBy: [1, \"ngForTrackBy\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_4 = _co.height; var currVal_5 = _co.valid; var currVal_6 = _co.trackItemBy; var currVal_7 = _co.multipleSelect; var currVal_8 = _co.selectedItems; _ck(_v, 2, 0, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); var currVal_9 = _co.data; var currVal_10 = _co._$trackByFn; _ck(_v, 5, 0, currVal_9, currVal_10); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = i0.ɵnov(_v, 2).height; var currVal_2 = true; var currVal_3 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nexport function View_JigsawMobileButtonBar_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-mobile-button-bar\", [], [[2, \"jigsaw-button-bar\", null], [2, \"jigsaw-button-bar-primary\", null], [2, \"jigsaw-button-bar-warning\", null], [2, \"jigsaw-button-bar-error\", null], [4, \"height\", null]], null, null, View_JigsawMobileButtonBar_0, RenderType_JigsawMobileButtonBar)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.JigsawMobileButtonBar]), i0.ɵdid(2, 245760, null, 0, i1.JigsawMobileButtonBar, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = (i0.ɵnov(_v, 2).colorType === \"primary\"); var currVal_2 = (i0.ɵnov(_v, 2).colorType === \"warning\"); var currVal_3 = ((i0.ɵnov(_v, 2).colorType === \"error\") || (i0.ɵnov(_v, 2).colorType === \"danger\")); var currVal_4 = i0.ɵnov(_v, 2).height; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }\nvar JigsawMobileButtonBarNgFactory = i0.ɵccf(\"jigsaw-mobile-button-bar, jm-button-bar\", i1.JigsawMobileButtonBar, View_JigsawMobileButtonBar_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", valid: \"valid\", data: \"data\", trackItemBy: \"trackItemBy\", labelField: \"labelField\", multipleSelect: \"multipleSelect\", selectedItems: \"selectedItems\", optionWidth: \"optionWidth\", colorType: \"colorType\" }, { selectedItemsChange: \"selectedItemsChange\" }, []);\nexport { JigsawMobileButtonBarNgFactory as JigsawMobileButtonBarNgFactory };\n","\n        <jm-tile [(selectedItems)]=\"selectedItems\" [trackItemBy]=\"trackItemBy\"\n                [multipleSelect]=\"multipleSelect\" [height]=\"height\" [valid]=\"valid\"\n                (selectedItemsChange)=\"_$handleSelectChange($event)\">\n            <jm-tile-option #tileOpt *ngFor=\"let item of data; trackBy: _$trackByFn\" [value]=\"item\" [ngClass]=\"{'jigsaw-mobile-button-bar-one-option': data && data.length == 1}\"\n                           [width]=\"optionWidth\" [height]=\"height\" [disabled]=\"item?.disabled\">\n                {{item && item[labelField] ? item[labelField] : item}}\n            </jm-tile-option>\n        </jm-tile>","import * as tslib_1 from \"tslib\";\nimport { AbstractJigsawMobileGroupLiteComponent } from \"./group-lite-common\";\nvar JigsawMobileButtonBar = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawMobileButtonBar, _super);\n    function JigsawMobileButtonBar() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.colorType = 'primary';\n        return _this;\n    }\n    return JigsawMobileButtonBar;\n}(AbstractJigsawMobileGroupLiteComponent));\nexport { JigsawMobileButtonBar };\nvar JigsawMobileButtonBarModule = /** @class */ (function () {\n    function JigsawMobileButtonBarModule() {\n    }\n    return JigsawMobileButtonBarModule;\n}());\nexport { JigsawMobileButtonBarModule };\n","import {Component, NgModule, forwardRef, Input} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {JigsawMobileTileSelectModule} from \"./tile\";\nimport {NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {AbstractJigsawMobileGroupLiteComponent} from \"./group-lite-common\";\n\n@Component({\n    selector: 'jigsaw-mobile-button-bar, jm-button-bar',\n    template: `\n        <jm-tile [(selectedItems)]=\"selectedItems\" [trackItemBy]=\"trackItemBy\"\n                [multipleSelect]=\"multipleSelect\" [height]=\"height\" [valid]=\"valid\"\n                (selectedItemsChange)=\"_$handleSelectChange($event)\">\n            <jm-tile-option #tileOpt *ngFor=\"let item of data; trackBy: _$trackByFn\" [value]=\"item\" [ngClass]=\"{'jigsaw-mobile-button-bar-one-option': data && data.length == 1}\"\n                           [width]=\"optionWidth\" [height]=\"height\" [disabled]=\"item?.disabled\">\n                {{item && item[labelField] ? item[labelField] : item}}\n            </jm-tile-option>\n        </jm-tile>`,\n    host: {\n        '[class.jigsaw-button-bar]': 'true',\n        '[class.jigsaw-button-bar-primary]': \"colorType === 'primary'\",\n        '[class.jigsaw-button-bar-warning]': \"colorType === 'warning'\",\n        '[class.jigsaw-button-bar-error]': \"colorType === 'error' || colorType === 'danger'\",\n        '[style.height]': 'height',\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawMobileButtonBar), multi: true},\n    ]\n})\nexport class JigsawMobileButtonBar extends AbstractJigsawMobileGroupLiteComponent {\n    @Input()\n    public optionWidth: number | string;\n\n    @Input()\n    public colorType: 'default' | 'primary' | 'warning' | 'error' | 'danger' = 'primary';\n}\n\n@NgModule({\n    imports: [CommonModule, JigsawMobileTileSelectModule],\n    declarations: [JigsawMobileButtonBar],\n    exports: [JigsawMobileButtonBar]\n})\nexport class JigsawMobileButtonBarModule {\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./switch\";\nvar styles_JigsawMobileSwitch = [];\nvar RenderType_JigsawMobileSwitch = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawMobileSwitch, data: {} });\nexport { RenderType_JigsawMobileSwitch as RenderType_JigsawMobileSwitch };\nexport function View_JigsawMobileSwitch_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$switchClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-switch-inner\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$switchClass; _ck(_v, 2, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co._$content; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_JigsawMobileSwitch_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-mobile-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], null, null, View_JigsawMobileSwitch_0, RenderType_JigsawMobileSwitch)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawMobileSwitch]), i0.ɵdid(2, 114688, null, 0, i3.JigsawMobileSwitch, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar JigsawMobileSwitchNgFactory = i0.ɵccf(\"jigsaw-mobile-switch, jm-switch\", i3.JigsawMobileSwitch, View_JigsawMobileSwitch_Host_0, { valid: \"valid\", onLabel: \"onLabel\", offLabel: \"offLabel\", size: \"size\", checked: \"checked\", disabled: \"disabled\" }, { checkedChange: \"checkedChange\", change: \"change\" }, []);\nexport { JigsawMobileSwitchNgFactory as JigsawMobileSwitchNgFactory };\n","<div [ngClass]=\"_$switchClass\" (click)=\"_$switchClick()\">\n    <div class=\"jigsaw-switch-inner\">{{_$content}}</div>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tile\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../input/input\";\nvar JigsawMobileTileSelectModuleNgFactory = i0.ɵcmf(i1.JigsawMobileTileSelectModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.ɵangular_packages_forms_forms_o, i3.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ɵangular_packages_forms_forms_d, i3.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i3.FormsModule, i3.FormsModule, []), i0.ɵmpd(1073742336, i4.JigsawMobileInputModule, i4.JigsawMobileInputModule, []), i0.ɵmpd(1073742336, i1.JigsawMobileTileSelectModule, i1.JigsawMobileTileSelectModule, [])]); });\nexport { JigsawMobileTileSelectModuleNgFactory as JigsawMobileTileSelectModuleNgFactory };\nvar styles_JigsawMobileTile = [];\nvar RenderType_JigsawMobileTile = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawMobileTile, data: {} });\nexport { RenderType_JigsawMobileTile as RenderType_JigsawMobileTile };\nexport function View_JigsawMobileTile_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }\nexport function View_JigsawMobileTile_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"jigsaw-mobile-tile\", [], [[4, \"width\", null], [4, \"height\", null], [2, \"jigsaw-tile\", null], [2, \"jigsaw-tile-error\", null]], null, null, View_JigsawMobileTile_0, RenderType_JigsawMobileTile)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.JigsawMobileTile]), i0.ɵdid(2, 1294336, null, 1, i1.JigsawMobileTile, [], null, null), i0.ɵqud(603979776, 1, { _items: 1 })], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = i0.ɵnov(_v, 2).height; var currVal_2 = true; var currVal_3 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nvar JigsawMobileTileNgFactory = i0.ɵccf(\"jigsaw-mobile-tile, jm-tile\", i1.JigsawMobileTile, View_JigsawMobileTile_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", valid: \"valid\", trackItemBy: \"trackItemBy\", multipleSelect: \"multipleSelect\", selectedItems: \"selectedItems\" }, { selectedItemsChange: \"selectedItemsChange\" }, [\"*\"]);\nexport { JigsawMobileTileNgFactory as JigsawMobileTileNgFactory };\nvar styles_JigsawMobileTileOption = [];\nvar RenderType_JigsawMobileTileOption = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawMobileTileOption, data: {} });\nexport { RenderType_JigsawMobileTileOption as RenderType_JigsawMobileTileOption };\nexport function View_JigsawMobileTileOption_0(_l) { return i0.ɵvid(0, [i0.ɵncd(null, 0)], null, null); }\nexport function View_JigsawMobileTileOption_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-mobile-tile-option\", [], [[4, \"width\", null], [4, \"height\", null], [4, \"line-height\", null], [2, \"jigsaw-tile-option\", null], [2, \"jigsaw-tile-option-active\", null], [2, \"jigsaw-tile-option-disabled\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 1)._$handleClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_JigsawMobileTileOption_0, RenderType_JigsawMobileTileOption)), i0.ɵdid(1, 245760, null, 0, i1.JigsawMobileTileOption, [i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).width; var currVal_1 = i0.ɵnov(_v, 1).height; var currVal_2 = i0.ɵnov(_v, 1).height; var currVal_3 = true; var currVal_4 = i0.ɵnov(_v, 1).selected; var currVal_5 = i0.ɵnov(_v, 1).disabled; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nvar JigsawMobileTileOptionNgFactory = i0.ɵccf(\"jigsaw-mobile-tile-option,jm-tile-option\", i1.JigsawMobileTileOption, View_JigsawMobileTileOption_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", value: \"value\", disabled: \"disabled\", selected: \"selected\" }, { selectedChange: \"selectedChange\", change: \"change\" }, [\"*\"]);\nexport { JigsawMobileTileOptionNgFactory as JigsawMobileTileOptionNgFactory };\n","<ng-content></ng-content>","<ng-content></ng-content>","import {Component, EventEmitter, forwardRef, Input, OnInit, Output} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\n@Component({\n    selector: 'jigsaw-mobile-switch, jm-switch',\n    templateUrl: './switch.html',\n    host: {\n        '[class.jigsaw-switch-host]': 'true',\n        '[class.jigsaw-switch-error]': '!valid'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawMobileSwitch), multi: true},\n    ]\n})\n\nexport class JigsawMobileSwitch implements ControlValueAccessor, OnInit {\n    @Input()\n    public valid: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$content: any; // 当前显示的内容.\n\n    /**\n     * 开关状态打开时的文本.(只支持字符串)\n     */\n    @Input()\n    public onLabel: any;\n\n    /**\n     * 开关状态关闭时显示的文本(只支持字符串)\n     */\n    @Input()\n    public offLabel: any;\n\n    /**\n     * size 默认 'default' 可选值 ‘small’\n     *\n     */\n    @Input()\n    public size: string = 'default';\n\n    private _checked: boolean = false;\n\n    /**\n     * 选中 默认值false;\n     *\n     */\n    @Input()\n    public get checked(): boolean {\n        return this._checked\n    };\n\n    public set checked(value: boolean) {\n        this.writeValue(value);\n        this._propagateChange(value);\n    }\n\n    /**\n     * 可以忽略, 主要使checked 属性支持双向数据绑定.\n     *\n     */\n    @Output() public checkedChange = new EventEmitter<boolean>();\n\n    /**\n     * 对外暴露事件,\n     *\n     */\n    @Output() public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 是否禁用 类型 boolean 默认值 false;\n     *\n     */\n    @Input()\n    public get disabled(): boolean {\n        return this._disabled;\n    };\n\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setSwitchClass();\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClick() {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClass: {};\n\n    /**\n     * 更新控件样式的方法\n     */\n    private _setSwitchClass() {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        }\n    }\n\n    /**\n     * 设置选中和费选中的值.\n     */\n    private _setInnerValue() {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    }\n\n    public ngOnInit() {\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    private _propagateChange: any = () => {\n    };\n\n    public writeValue(value: any): void {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\nvar JigsawMobileSwitch = /** @class */ (function () {\n    function JigsawMobileSwitch() {\n        this.valid = true;\n        /**\n         * size 默认 'default' 可选值 ‘small’\n         *\n         */\n        this.size = 'default';\n        this._checked = false;\n        /**\n         * 可以忽略, 主要使checked 属性支持双向数据绑定.\n         *\n         */\n        this.checkedChange = new EventEmitter();\n        /**\n         * 对外暴露事件,\n         *\n         */\n        this.change = this.checkedChange;\n        this._disabled = false;\n        this._propagateChange = function () {\n        };\n    }\n    Object.defineProperty(JigsawMobileSwitch.prototype, \"checked\", {\n        /**\n         * 选中 默认值false;\n         *\n         */\n        get: function () {\n            return this._checked;\n        },\n        set: function (value) {\n            this.writeValue(value);\n            this._propagateChange(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(JigsawMobileSwitch.prototype, \"disabled\", {\n        /**\n         * 是否禁用 类型 boolean 默认值 false;\n         *\n         */\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = value;\n            this._setSwitchClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @internal\n     */\n    JigsawMobileSwitch.prototype._$switchClick = function () {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    };\n    /**\n     * 更新控件样式的方法\n     */\n    JigsawMobileSwitch.prototype._setSwitchClass = function () {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        };\n    };\n    /**\n     * 设置选中和费选中的值.\n     */\n    JigsawMobileSwitch.prototype._setInnerValue = function () {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    };\n    JigsawMobileSwitch.prototype.ngOnInit = function () {\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawMobileSwitch.prototype.writeValue = function (value) {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawMobileSwitch.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawMobileSwitch.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawMobileSwitch;\n}());\nexport { JigsawMobileSwitch };\n","import * as tslib_1 from \"tslib\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { AfterContentInit, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList } from \"@angular/core\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\nimport { ArrayCollection } from \"../../common/core/data/array-collection\";\nvar GroupOptionValue = /** @class */ (function () {\n    function GroupOptionValue() {\n    }\n    return GroupOptionValue;\n}());\nexport { GroupOptionValue };\nvar AbstractJigsawMobileGroupComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJigsawMobileGroupComponent, _super);\n    function AbstractJigsawMobileGroupComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.valid = true;\n        //设置对象的标识\n        _this._trackItemBy = [];\n        _this._selectedItems = new ArrayCollection();\n        _this.selectedItemsChange = new EventEmitter();\n        _this._propagateChange = function () {\n        };\n        return _this;\n    }\n    Object.defineProperty(AbstractJigsawMobileGroupComponent.prototype, \"trackItemBy\", {\n        get: function () {\n            return this._trackItemBy;\n        },\n        set: function (value) {\n            this._trackItemBy = typeof value === 'string' ? value.split(/\\s*,\\s*/g) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractJigsawMobileGroupComponent.prototype, \"selectedItems\", {\n        get: function () {\n            return this._selectedItems;\n        },\n        set: function (newValue) {\n            this.writeValue(newValue);\n            if (this._selectedItems === newValue) {\n                return;\n            }\n            this._propagateChange(newValue);\n            this._removeInvalidSelectedItems();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    AbstractJigsawMobileGroupComponent.prototype._removeInvalidSelectedItems = function () {\n        var _this = this;\n        if (!this._items || !this._selectedItems) {\n            return;\n        }\n        this._selectedItems.forEach(function (selectedItem) {\n            if (_this._items.find(function (item) { return CommonUtils.compareWithKeyProperty(item.value, selectedItem, _this._trackItemBy); })) {\n                return;\n            }\n            _this._selectedItems.splice(_this.selectedItems.indexOf(selectedItem), 1);\n        });\n    };\n    AbstractJigsawMobileGroupComponent.prototype._updateSelectItems = function (itemValue, selected) {\n        var _this = this;\n        if (this.multipleSelect) { //多选\n            if (selected) {\n                this.selectedItems.push(itemValue);\n            }\n            else {\n                this._selectedItems.forEach(function (selectedItemValue) {\n                    if (CommonUtils.compareWithKeyProperty(selectedItemValue, itemValue, _this._trackItemBy)) {\n                        _this._selectedItems.splice(_this.selectedItems.indexOf(selectedItemValue), 1);\n                    }\n                });\n            }\n        }\n        else { //单选选中\n            this._items.length && this._items.forEach(function (item) {\n                //去除其他option选中\n                if (!CommonUtils.compareWithKeyProperty(item.value, itemValue, _this._trackItemBy) && item.selected) {\n                    item.selected = false;\n                    item.changeDetector.detectChanges();\n                    _this._selectedItems.splice(_this.selectedItems.indexOf(item.value), 1);\n                }\n            });\n            //添加选中数据\n            this.selectedItems.push(itemValue);\n        }\n        this._removeInvalidSelectedItems();\n        this._selectedItems.refresh();\n        this.selectedItemsChange.emit(this.selectedItems);\n    };\n    //根据选中的item更新selectedItems\n    AbstractJigsawMobileGroupComponent.prototype._updateSelectItemsForForm = function (itemValue, selected) {\n        this._updateSelectItems(itemValue, selected);\n        this._propagateChange(this.selectedItems);\n    };\n    AbstractJigsawMobileGroupComponent.prototype.update = function (itemValue, selected) {\n        this._updateSelectItemsForForm(itemValue, selected);\n    };\n    //根据selectedItems设置选中的option\n    AbstractJigsawMobileGroupComponent.prototype._setItemState = function (items) {\n        var _this = this;\n        if (!(this.selectedItems instanceof ArrayCollection) || !items.length) {\n            return;\n        }\n        this.callLater(function () {\n            items.forEach(function (item) {\n                var hasSelected = false;\n                _this._selectedItems.forEach(function (selectedItem) {\n                    if (CommonUtils.compareWithKeyProperty(item.value, selectedItem, _this._trackItemBy)) {\n                        hasSelected = true;\n                    }\n                });\n                item.selected = hasSelected;\n            });\n        });\n    };\n    AbstractJigsawMobileGroupComponent.prototype._subscribeItemSelectedChange = function (items) {\n        var _this = this;\n        items.forEach(function (item) {\n            // 取消可能重复的订阅事件\n            item.change.observers.length = 0;\n            item.change.subscribe(function () {\n                if (_this.multipleSelect) { //多选\n                    item.selected = !item.selected; //切换组件选中状态\n                    _this._updateSelectItemsForForm(item.value, item.selected);\n                }\n                else { //单选\n                    if (!item.selected) {\n                        item.selected = true;\n                        _this._updateSelectItemsForForm(item.value, item.selected);\n                    }\n                }\n            });\n        });\n    };\n    AbstractJigsawMobileGroupComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._setItemState(this._items);\n        this._subscribeItemSelectedChange(this._items);\n        this._items.changes.subscribe(function (items) {\n            // 异步变更data数据\n            _this._setItemState(items);\n            _this._subscribeItemSelectedChange(items);\n            _this._removeInvalidSelectedItems();\n        });\n        if (this._items.length) {\n            // 在本地数据为空时，不检查无用选项\n            this._removeInvalidSelectedItems();\n        }\n    };\n    AbstractJigsawMobileGroupComponent.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        if (this._items) {\n            this._items.forEach(function (item) { return item.change.unsubscribe(); });\n        }\n    };\n    AbstractJigsawMobileGroupComponent.prototype._setSelectedItems = function (newValue) {\n        var _this = this;\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        newValue = newValue instanceof ArrayCollection ? newValue : new ArrayCollection(newValue);\n        this._selectedItems = newValue;\n        if (this.initialized) {\n            this._setItemState(this._items);\n        }\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        this._removeRefreshCallback = newValue.onRefresh(function () { return _this._setItemState(_this._items); });\n    };\n    AbstractJigsawMobileGroupComponent.prototype.writeValue = function (newValue) {\n        this._setSelectedItems(newValue);\n    };\n    AbstractJigsawMobileGroupComponent.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    AbstractJigsawMobileGroupComponent.prototype.registerOnTouched = function (fn) {\n    };\n    return AbstractJigsawMobileGroupComponent;\n}(AbstractJigsawComponent));\nexport { AbstractJigsawMobileGroupComponent };\nvar AbstractJigsawMobileOptionComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJigsawMobileOptionComponent, _super);\n    function AbstractJigsawMobileOptionComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disabled = false;\n        _this.selectedChange = new EventEmitter();\n        _this.selected = false; // 选中状态\n        _this.change = new EventEmitter();\n        return _this;\n    }\n    return AbstractJigsawMobileOptionComponent;\n}(AbstractJigsawComponent));\nexport { AbstractJigsawMobileOptionComponent };\n","import {AbstractJigsawComponent} from \"../../common/common\";\nimport {ControlValueAccessor} from \"@angular/forms\";\nimport {AfterContentInit, ChangeDetectorRef, EventEmitter, Input, OnDestroy, Output, QueryList} from \"@angular/core\";\nimport {CallbackRemoval, CommonUtils} from \"../../common/core/utils/common-utils\";\nimport {ArrayCollection} from \"../../common/core/data/array-collection\";\n\nexport class GroupOptionValue {\n    [index: string]: any;\n    disabled?: boolean;\n}\n\nexport class AbstractJigsawMobileGroupComponent extends AbstractJigsawComponent implements ControlValueAccessor, AfterContentInit, OnDestroy {\n\n    protected _removeRefreshCallback: CallbackRemoval;\n\n    @Input()\n    public valid: boolean = true;\n\n    //设置对象的标识\n    private _trackItemBy: string[] = [];\n\n    @Input()\n    public get trackItemBy(): string | string[] {\n        return this._trackItemBy;\n    }\n\n    public set trackItemBy(value: string | string[]) {\n        this._trackItemBy = typeof value === 'string' ? value.split(/\\s*,\\s*/g) : value;\n    }\n\n    //判断是否支持多选\n    @Input() public multipleSelect: boolean;\n\n    protected _selectedItems = new ArrayCollection<any>();\n\n    @Input()\n    public get selectedItems(): ArrayCollection<any> | any[] {\n        return this._selectedItems;\n    }\n\n    public set selectedItems(newValue: ArrayCollection<any> | any[]) {\n        this.writeValue(newValue);\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        this._propagateChange(newValue);\n        this._removeInvalidSelectedItems();\n    }\n\n    private _removeInvalidSelectedItems():void {\n        if (!this._items || !this._selectedItems) {\n            return;\n        }\n        this._selectedItems.forEach(selectedItem => {\n            if (this._items.find(item => CommonUtils.compareWithKeyProperty(item.value, selectedItem, this._trackItemBy))) {\n                return;\n            }\n            this._selectedItems.splice(this.selectedItems.indexOf(selectedItem), 1);\n        });\n    }\n\n    @Output() public selectedItemsChange = new EventEmitter<any[]>();\n\n    //获取映射的items\n    protected _items: QueryList<AbstractJigsawMobileOptionComponent>;\n\n    protected _updateSelectItems(itemValue, selected): void {\n        if (this.multipleSelect) { //多选\n            if (selected) {\n                this.selectedItems.push(itemValue);\n            } else {\n                this._selectedItems.forEach(selectedItemValue => {\n                    if (CommonUtils.compareWithKeyProperty(selectedItemValue, itemValue, this._trackItemBy)) {\n                        this._selectedItems.splice(this.selectedItems.indexOf(selectedItemValue), 1);\n                    }\n                });\n            }\n        } else { //单选选中\n            this._items.length && this._items.forEach((item: AbstractJigsawMobileOptionComponent) => {\n                //去除其他option选中\n                if (!CommonUtils.compareWithKeyProperty(item.value, itemValue, this._trackItemBy) && item.selected) {\n                    item.selected = false;\n                    item.changeDetector.detectChanges();\n                    this._selectedItems.splice(this.selectedItems.indexOf(item.value), 1);\n                }\n            });\n            //添加选中数据\n            this.selectedItems.push(itemValue);\n        }\n        this._removeInvalidSelectedItems();\n        this._selectedItems.refresh();\n        this.selectedItemsChange.emit(this.selectedItems);\n    }\n\n    //根据选中的item更新selectedItems\n    protected _updateSelectItemsForForm(itemValue, selected): void {\n        this._updateSelectItems(itemValue, selected);\n        this._propagateChange(this.selectedItems);\n    }\n\n    public update(itemValue, selected) {\n        this._updateSelectItemsForForm(itemValue, selected);\n    }\n\n    //根据selectedItems设置选中的option\n    protected _setItemState(items: QueryList<AbstractJigsawMobileOptionComponent>): void {\n        if (!(this.selectedItems instanceof ArrayCollection) || !items.length) {\n            return;\n        }\n        this.callLater(() => {\n            items.forEach(item => {\n                let hasSelected = false;\n                this._selectedItems.forEach(selectedItem => {\n                    if (CommonUtils.compareWithKeyProperty(item.value, selectedItem, this._trackItemBy)) {\n                        hasSelected = true;\n                    }\n                });\n                item.selected = hasSelected;\n            });\n        });\n    }\n\n    private _subscribeItemSelectedChange(items: QueryList<AbstractJigsawMobileOptionComponent>) {\n        items.forEach(item => {\n            // 取消可能重复的订阅事件\n            item.change.observers.length = 0;\n            item.change.subscribe(() => {\n                if (this.multipleSelect) { //多选\n                    item.selected = !item.selected;//切换组件选中状态\n                    this._updateSelectItemsForForm(item.value, item.selected);\n                } else { //单选\n                    if (!item.selected) {\n                        item.selected = true;\n                        this._updateSelectItemsForForm(item.value, item.selected);\n                    }\n                }\n            })\n        });\n    }\n\n    ngAfterContentInit() {\n        this._setItemState(this._items);\n        this._subscribeItemSelectedChange(this._items);\n        this._items.changes.subscribe(items => {\n            // 异步变更data数据\n            this._setItemState(items);\n            this._subscribeItemSelectedChange(items);\n            this._removeInvalidSelectedItems();\n        });\n        if(this._items.length) {\n            // 在本地数据为空时，不检查无用选项\n            this._removeInvalidSelectedItems();\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback()\n        }\n        if(this._items) {\n            this._items.forEach(item => item.change.unsubscribe());\n        }\n    }\n\n    protected _propagateChange: any = () => {\n    };\n\n    protected _setSelectedItems(newValue: any): void {\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        newValue = newValue instanceof ArrayCollection ? newValue : new ArrayCollection(newValue);\n\n        this._selectedItems = newValue;\n        if (this.initialized) {\n            this._setItemState(this._items);\n        }\n\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback()\n        }\n        this._removeRefreshCallback = newValue.onRefresh(() => this._setItemState(this._items));\n    }\n\n    public writeValue(newValue: any): void {\n        this._setSelectedItems(newValue);\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n\nexport class AbstractJigsawMobileOptionComponent extends AbstractJigsawComponent {\n    @Input() public value: any;\n\n    @Input() public disabled: boolean = false;\n\n    @Output()\n    public selectedChange = new EventEmitter<boolean>();\n\n    @Input()\n    public selected: boolean = false; // 选中状态\n\n    @Output()\n    public change = new EventEmitter<AbstractJigsawMobileOptionComponent>();\n\n    public changeDetector: ChangeDetectorRef\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { EventEmitter, ElementRef, AfterContentInit, Renderer2 } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\nvar JigsawMobileInput = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawMobileInput, _super);\n    function JigsawMobileInput(_render2, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._render2 = _render2;\n        _this._elementRef = _elementRef;\n        /**\n         * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n         *\n         * $demo = input/clearable\n         */\n        _this.clearable = true;\n        /**\n         * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n         *\n         * $demo = input/disabled\n         */\n        _this.disabled = false;\n        /**\n         * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n         *\n         * $demo = input/valid\n         * $demo = form/template-driven\n         */\n        _this.valid = true;\n        /**\n         * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n         *\n         * $demo = input/password\n         */\n        _this.password = false;\n        _this._focusEmitter = new EventEmitter();\n        _this._blurEmitter = new EventEmitter();\n        _this._propagateChange = function () {\n        };\n        _this._value = ''; //input表单值\n        /**\n         * 当文本框中的文本发生变化时，组件会发出此事件。\n         *\n         * $demo = input/value-change\n         */\n        _this.valueChange = new EventEmitter();\n        _this._placeholder = '';\n        _this._focused = false;\n        /**\n         * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n         * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n         * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n         * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n         *\n         * $demo = table/update-column-define\n         */\n        _this.blurOnClear = true;\n        return _this;\n    }\n    Object.defineProperty(JigsawMobileInput.prototype, \"type\", {\n        get: function () {\n            return this.password ? \"password\" : \"text\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawMobileInput.prototype.writeValue = function (value) {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    };\n    JigsawMobileInput.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawMobileInput.prototype.registerOnTouched = function (fn) {\n    };\n    Object.defineProperty(JigsawMobileInput.prototype, \"value\", {\n        /**\n         * 文本框中当前的文本\n         *\n         * $demo = input/valid\n         */\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            var _this = this;\n            if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n                return;\n            }\n            if (this.clearable && ((newValue != '' && this._value == '') || (newValue == '' && this._value != ''))) {\n                this.callLater(function () { return _this._setInputPaddingStyle(); });\n            }\n            this._value = newValue;\n            this.valueChange.emit(this._value);\n            this._propagateChange(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawMobileInput.prototype, \"placeholder\", {\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n         *\n         * $demo = input/valid\n         */\n        set: function (txt) {\n            this._placeholder = txt;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    JigsawMobileInput.prototype.focus = function () {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    };\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    JigsawMobileInput.prototype.select = function () {\n        this._inputElement.nativeElement.select();\n    };\n    /**\n     * @internal\n     */\n    JigsawMobileInput.prototype._$clearValue = function () {\n        this.value = '';\n        this.focus();\n    };\n    Object.defineProperty(JigsawMobileInput.prototype, \"focused\", {\n        /**\n         * 获取文本框是否有焦点\n         *\n         * $demo = input/focus\n         */\n        get: function () {\n            return this._focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    JigsawMobileInput.prototype._$handleFocus = function (event) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    };\n    /**\n     * @internal\n     */\n    JigsawMobileInput.prototype._$handleBlur = function (event) {\n        var _this = this;\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        }\n        else {\n            this.callLater(function () {\n                if (!_this._focused) {\n                    _this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawMobileInput.prototype._$stopPropagation = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    /**\n     * 动态计算 input的padding-left 和padding-right (不确定图标的个数, 好空出对应的位置.)\n     * 当前计算方法根据图标的个数计算, 默认图标大小为12px , dom大小获取的不准确.\n     *\n     */\n    JigsawMobileInput.prototype._setInputPaddingStyle = function () {\n        var prefixIconWidth = this._elementRef.nativeElement.querySelector(\".jigsaw-input-icon-front\").offsetWidth;\n        var endIconWidth = this._elementRef.nativeElement.querySelector(\".jigsaw-input-icon-end\").offsetWidth;\n        var prefixIconPadding = prefixIconWidth + 10;\n        if (prefixIconWidth !== 0) {\n            prefixIconPadding = prefixIconPadding + 8;\n        }\n        var endPadding = endIconWidth + 8;\n        this._$inputPaddingStyle = {\n            \"padding-left\": prefixIconPadding + \"px\",\n            \"padding-right\": endPadding + \"px\"\n        };\n    };\n    JigsawMobileInput.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.callLater(function () {\n            _this._render2.setStyle(_this._elementRef.nativeElement, 'opacity', 1);\n            _this._setInputPaddingStyle();\n        });\n    };\n    return JigsawMobileInput;\n}(AbstractJigsawComponent));\nexport { JigsawMobileInput };\nvar JigsawMobileInputModule = /** @class */ (function () {\n    function JigsawMobileInputModule() {\n    }\n    return JigsawMobileInputModule;\n}());\nexport { JigsawMobileInputModule };\n","import {\n    NgModule, Component, EventEmitter, Input, Output, ElementRef, ViewChild,\n    AfterContentInit, Renderer2, forwardRef\n} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {AbstractJigsawComponent, IJigsawFormControl} from \"../../common/common\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\n@Component({\n    selector: 'jigsaw-mobile-input, jm-input',\n    templateUrl: 'input.html',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '(click)': '_$stopPropagation($event)',\n        '[class.jigsaw-input]': 'true',\n        '[class.jigsaw-input-error]': '!valid',\n        '[class.jigsaw-input-focused]': 'focused',\n        '[class.jigsaw-input-disabled]': 'disabled'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawMobileInput), multi: true},\n    ]\n})\nexport class JigsawMobileInput extends AbstractJigsawComponent\n    implements IJigsawFormControl, ControlValueAccessor, AfterContentInit {\n\n    /**\n     * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n     *\n     * $demo = input/clearable\n     */\n    @Input() public clearable: boolean = true;\n\n    /**\n     * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n     *\n     * $demo = input/disabled\n     */\n    @Input() public disabled: boolean = false;\n\n    /**\n     * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n     *\n     * $demo = input/valid\n     * $demo = form/template-driven\n     */\n    @Input() public valid: boolean = true;\n\n\n    /**\n     * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n     *\n     * $demo = input/password\n     */\n    @Input() public password: boolean = false;\n\n    @Input()\n    public get type(): string {\n        return this.password ? \"password\" : \"text\";\n    }\n\n    @Output('focus')\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output('blur')\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    constructor(protected _render2: Renderer2,\n                protected _elementRef: ElementRef) {\n        super();\n    }\n\n    private _propagateChange: any = () => {\n    };\n\n    public writeValue(value: any): void {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n\n    private _value: string = ''; //input表单值\n\n    /**\n     * 文本框中当前的文本\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public get value(): string {\n        return this._value;\n    }\n\n    public set value(newValue: string) {\n        if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n            return;\n        }\n\n        if (this.clearable && ((newValue != '' && this._value == '') || (newValue == '' && this._value != ''))) {\n            this.callLater(() => this._setInputPaddingStyle());\n        }\n        this._value = newValue;\n        this.valueChange.emit(this._value);\n        this._propagateChange(this._value);\n    }\n\n    /**\n     * 当文本框中的文本发生变化时，组件会发出此事件。\n     *\n     * $demo = input/value-change\n     */\n    @Output()\n    public valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n    private _placeholder: string = '';\n\n    /**\n     * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public set placeholder(txt: string) {\n        this._placeholder = txt;\n    }\n\n    public get placeholder() {\n        return this._placeholder;\n    }\n\n\n    @ViewChild('input', {static: false})\n    private _inputElement: ElementRef;\n\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    public focus() {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    }\n\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    public select() {\n        this._inputElement.nativeElement.select();\n    }\n\n    /**\n     * @internal\n     */\n    public _$clearValue(): void {\n        this.value = '';\n        this.focus();\n    }\n\n    private _focused: boolean = false;\n\n    /**\n     * 获取文本框是否有焦点\n     *\n     * $demo = input/focus\n     */\n    public get focused(): boolean {\n        return this._focused;\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleFocus(event: FocusEvent) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    }\n\n    /**\n     * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n     * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n     * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n     * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n     *\n     * $demo = table/update-column-define\n     */\n    @Input()\n    public blurOnClear: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$handleBlur(event: FocusEvent) {\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        } else {\n            this.callLater(() => {\n                if (!this._focused) {\n                    this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$stopPropagation(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @internal\n     */\n    public _$inputPaddingStyle: {};\n\n    /**\n     * 动态计算 input的padding-left 和padding-right (不确定图标的个数, 好空出对应的位置.)\n     * 当前计算方法根据图标的个数计算, 默认图标大小为12px , dom大小获取的不准确.\n     *\n     */\n    private _setInputPaddingStyle() {\n        let prefixIconWidth = this._elementRef.nativeElement.querySelector(\".jigsaw-input-icon-front\").offsetWidth;\n        let endIconWidth = this._elementRef.nativeElement.querySelector(\".jigsaw-input-icon-end\").offsetWidth;\n\n        let prefixIconPadding = prefixIconWidth + 10;\n        if (prefixIconWidth !== 0) {\n            prefixIconPadding = prefixIconPadding + 8;\n        }\n\n        let endPadding = endIconWidth + 8;\n\n        this._$inputPaddingStyle = {\n            \"padding-left\": prefixIconPadding + \"px\",\n            \"padding-right\": endPadding + \"px\"\n        };\n    }\n\n    ngAfterContentInit() {\n        this.callLater(() => {\n            this._render2.setStyle(this._elementRef.nativeElement, 'opacity', 1);\n            this._setInputPaddingStyle();\n        });\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [JigsawMobileInput],\n    exports: [JigsawMobileInput],\n})\nexport class JigsawMobileInputModule {\n\n}\n","import * as tslib_1 from \"tslib\";\nimport { ChangeDetectorRef, QueryList, } from '@angular/core';\nimport { AbstractJigsawMobileGroupComponent, AbstractJigsawMobileOptionComponent } from \"./group-common\";\nvar JigsawMobileTile = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawMobileTile, _super);\n    function JigsawMobileTile() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // 默认多选\n        _this.multipleSelect = true;\n        return _this;\n    }\n    return JigsawMobileTile;\n}(AbstractJigsawMobileGroupComponent));\nexport { JigsawMobileTile };\nvar JigsawMobileTileOption = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawMobileTileOption, _super);\n    function JigsawMobileTileOption(changeDetector) {\n        var _this = _super.call(this) || this;\n        _this.changeDetector = changeDetector;\n        return _this;\n    }\n    /**\n     * 点击组件触发\n     * @internal\n     */\n    JigsawMobileTileOption.prototype._$handleClick = function () {\n        if (!this.disabled) {\n            this.change.emit(this);\n        }\n    };\n    return JigsawMobileTileOption;\n}(AbstractJigsawMobileOptionComponent));\nexport { JigsawMobileTileOption };\nvar JigsawMobileTileSelectModule = /** @class */ (function () {\n    function JigsawMobileTileSelectModule() {\n    }\n    return JigsawMobileTileSelectModule;\n}());\nexport { JigsawMobileTileSelectModule };\n","import {ChangeDetectorRef, Component, ContentChildren, forwardRef, Input, NgModule, QueryList,} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule, NG_VALUE_ACCESSOR} from '@angular/forms'\nimport {JigsawMobileInputModule} from '../input/input';\nimport {AbstractJigsawMobileGroupComponent, AbstractJigsawMobileOptionComponent} from \"./group-common\";\n\n@Component({\n    selector: 'jigsaw-mobile-tile, jm-tile',\n    template: '<ng-content></ng-content>',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '[class.jigsaw-tile]': 'true',\n        '[class.jigsaw-tile-error]': '!valid'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawMobileTile), multi: true},\n    ]\n})\nexport class JigsawMobileTile extends AbstractJigsawMobileGroupComponent {\n    // 默认多选\n    public multipleSelect: boolean = true;\n\n    @ContentChildren(forwardRef(() => JigsawMobileTileOption))\n    protected _items: QueryList<JigsawMobileTileOption>;\n\n}\n\n@Component({\n    selector: 'jigsaw-mobile-tile-option,jm-tile-option',\n    template: '<ng-content></ng-content>',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '[style.line-height]': 'height',\n        '[class.jigsaw-tile-option]': 'true',\n        '[class.jigsaw-tile-option-active]': 'selected',\n        '[class.jigsaw-tile-option-disabled]': 'disabled',\n        '(click)': '_$handleClick()'\n    }\n})\nexport class JigsawMobileTileOption extends AbstractJigsawMobileOptionComponent {\n\n    constructor(public changeDetector: ChangeDetectorRef) {\n        super();\n    }\n\n    /**\n     * 点击组件触发\n     * @internal\n     */\n    public _$handleClick(): void {\n        if (!this.disabled) {\n            this.change.emit(this);\n        }\n    }\n\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule, JigsawMobileInputModule],\n    declarations: [JigsawMobileTile, JigsawMobileTileOption],\n    exports: [JigsawMobileTile, JigsawMobileTileOption]\n})\nexport class JigsawMobileTileSelectModule {\n\n}\n\n\n\n\n","/**\n * Created by 10177553 on 2017/3/16.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\n\nimport { JigsawMobileSwitch } from './switch';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawMobileSwitch],\n    declarations: [JigsawMobileSwitch],\n    providers: [],\n})\nexport class JigsawMobileSwitchModule { }\n\nexport * from './switch';\n"],"sourceRoot":""}