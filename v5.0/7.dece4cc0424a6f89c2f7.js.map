{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/range-time/range-time.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/range-time/range-time.html","webpack:///./src/jigsaw/pc-components/time/index.ts","webpack:///./src/jigsaw/pc-components/time/time.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/time/time.ts","webpack:///./src/jigsaw/pc-components/tooltip/tooltip.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/tooltip/tooltip.html","webpack:///./src/jigsaw/pc-components/tooltip/tooltip.ts.JigsawSimpleTooltipComponent.html","webpack:///./src/jigsaw/pc-components/time/time.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/time/time.html"],"names":["__webpack_require__","d","__webpack_exports__","RenderType_JigsawRangeTime","View_JigsawRangeTime_0","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_time_time_ngfactory__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_time_time__WEBPACK_IMPORTED_MODULE_4__","_common_service_popup_service__WEBPACK_IMPORTED_MODULE_5__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","encapsulation","styles","data","View_JigsawRangeTime_2","_l","_v","en","$event","ad","component","_changeShortcut","context","$implicit","_ck","label","View_JigsawRangeTime_1","ngForOf","_$shortcuts","_timeStart","_co","_$gr","_$dateChange","_$grChange","p0_0","gr","date","limitEnd","limitStart","refreshInterval","grItems","recommendedBegin","recommendedEnd","recommendedLabel","grChange","dateChange","ngIf","beginDate","_$limitEnd","_$limitStart","endDate","_$endTimeLimitEnd","length","width","valid","JigsawTimeModule","JigsawTime","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","_common_service_time_service__WEBPACK_IMPORTED_MODULE_3__","_common_service_popup_service__WEBPACK_IMPORTED_MODULE_4__","_tooltip_tooltip__WEBPACK_IMPORTED_MODULE_5__","_common_core_utils_translate_helper__WEBPACK_IMPORTED_MODULE_6__","_common_core_utils_internal_utils__WEBPACK_IMPORTED_MODULE_7__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_8__","_super","_el","_renderer","_popService","_translateService","_this","call","this","_eventHelper","_propagateChange","_refreshInterval","_langChangeSubscriber","languageChangEvent","subscribe","langInfo","_timePicker","locale","curLang","initI18n","zh","setDefaultLang","getBrowserLang","_defineLocale","moment","Object","defineProperty","prototype","get","set","value","_value","getFormatDate","_initDatePicker","enumerable","configurable","convertValue","Date","newValue","writeValue","_limitEnd","_checkMacro","minDate","getDate","maxDate","_weekHandle","_handleRecommended","nativeElement","_limitStart","_weekStart","console","warn","_weekDayStart","ngAfterViewInit","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","ll","lll","llll","meridiemParse","meridiemHour","hour","meridiem","minute","isLower","hm","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","dayOfMonthOrdinalParse","ordinal","number","period","relativeTime","future","past","s","m","mm","h","hh","dd","M","MM","y","yy","week","dow","doy","ngOnDestroy","window","clearInterval","_intervalId","_destroyPicker","unsubscribe","destroy","insert","querySelector","_a","_handleValue","picker","$","datetimepicker","inline","defaultDate","format","getFormatter","off","on","e","changeValue","_handleValueChange","_bindActiveDayClickHandler","_tooltipInfo","dispose","currentLang","callLater","find","_setDate","_$changeGranularity","select","emit","isMacro","setInterval","_handleLimitStartAndEnd","addDate","_handleWeekSelect","val","weekNum","getWeekOfYear","year","getWeekYear","tdActive","parentNode","classList","add","popService","getYear","monthsNode","_getDataPickerNode","monthsHeadNode","_searchDateForMonth","daysNode","daysHeadNode","daysObj","_parseDay","innerText","_searchDateForDay","querySelectorAll","forEach","node","removeMouseEnterListeners","Array","removeMouseenterListener","del","removeMouseLeaveListeners","removeMouseleaveListener","removeMouseEnterListener","listen","event","popup","modal","pos","x","currentTarget","offset","left","top","posOffset","posType","absolute","message","instant","put","begin","end","sourceNodes","headObj","startMonth","getMonth","endMonth","startDate","getDay","month","text","contains","result","indexOf","valArr","January","February","March","April","May","June","July","August","September","October","November","December","一","二","三","四","五","六","七","八","九","十","十一","十二","trim","_parseMonth","Jan","Feb","Mar","Apr","Jun","Jul","Aug","Sep","Oct","Nov","Dec","replace","headNode","granularity","isHead","selector","newValueYear","valueYear","newValueWeek","valueWeek","registerOnChange","fn","registerOnTouched","RenderType_JigsawTooltipDialog","View_JigsawTooltipDialog_0","JigsawSimpleTooltipComponentNgFactory","_tooltip__WEBPACK_IMPORTED_MODULE_1__","animation","type","name","definitions","opacity","transform","options","undefined","expr","steps","timings","RenderType_JigsawSimpleTooltipComponent","View_JigsawSimpleTooltipComponent_0","tooltip","tooltipMessage","View_JigsawSimpleTooltipComponent_Host_0","answer","RenderType_JigsawTime","View_JigsawTime_0","View_JigsawTime_2","View_JigsawTime_1"],"mappings":"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","file":"7.dece4cc0424a6f89c2f7.js","sourcesContent":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../time/time.ngfactory\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../time/time\";\nimport * as i5 from \"../../common/service/popup.service\";\nimport * as i6 from \"@ngx-translate/core\";\nimport * as i7 from \"./range-time\";\nvar styles_JigsawRangeTime = [];\nvar RenderType_JigsawRangeTime = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawRangeTime, data: {} });\nexport { RenderType_JigsawRangeTime as RenderType_JigsawRangeTime };\nfunction View_JigsawRangeTime_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._changeShortcut(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var currVal_0 = _v.context.$implicit.label; _ck(_v, 1, 0, currVal_0); }); }\nfunction View_JigsawRangeTime_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"jigsaw-range-time-shortcuts\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawRangeTime_2)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$shortcuts; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_JigsawRangeTime_0(_l) { return i0.ɵvid(0, [i0.ɵqud(402653184, 1, { _timeStart: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 8, \"div\", [[\"class\", \"jigsaw-range-time\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 2, \"jigsaw-time\", [[\"class.jigsaw-range-time-startTime\", \"false\"]], [[4, \"width\", null], [2, \"jigsaw-time-host\", null], [2, \"jigsaw-time-error\", null]], [[null, \"grChange\"], [null, \"dateChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"grChange\" === en)) {\n        var pd_0 = ((_co._$gr = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"dateChange\" === en)) {\n        var pd_1 = (_co._$dateChange(\"beginDate\", $event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"grChange\" === en)) {\n        var pd_2 = (_co._$grChange($event) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i2.View_JigsawTime_0, i2.RenderType_JigsawTime)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i4.JigsawTime]), i0.ɵdid(4, 4440064, [[1, 4], [\"timeStart\", 4]], 0, i4.JigsawTime, [i0.ElementRef, i0.Renderer2, i5.PopupService, i6.TranslateService], { gr: [0, \"gr\"], date: [1, \"date\"], limitEnd: [2, \"limitEnd\"], limitStart: [3, \"limitStart\"], refreshInterval: [4, \"refreshInterval\"], grItems: [5, \"grItems\"], recommendedBegin: [6, \"recommendedBegin\"], recommendedEnd: [7, \"recommendedEnd\"], recommendedLabel: [8, \"recommendedLabel\"] }, { grChange: \"grChange\", dateChange: \"dateChange\" }), (_l()(), i0.ɵeld(5, 0, null, null, 2, \"jigsaw-time\", [], [[2, \"jigsaw-range-time-endTime\", null], [4, \"width\", null], [2, \"jigsaw-time-host\", null], [2, \"jigsaw-time-error\", null]], [[null, \"grChange\"], [null, \"dateChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"grChange\" === en)) {\n        var pd_0 = ((_co._$gr = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"dateChange\" === en)) {\n        var pd_1 = (_co._$dateChange(\"endDate\", $event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i2.View_JigsawTime_0, i2.RenderType_JigsawTime)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i4.JigsawTime]), i0.ɵdid(7, 4440064, [[\"timeEnd\", 4]], 0, i4.JigsawTime, [i0.ElementRef, i0.Renderer2, i5.PopupService, i6.TranslateService], { gr: [0, \"gr\"], date: [1, \"date\"], limitEnd: [2, \"limitEnd\"], limitStart: [3, \"limitStart\"], refreshInterval: [4, \"refreshInterval\"], recommendedBegin: [5, \"recommendedBegin\"], recommendedEnd: [6, \"recommendedEnd\"], recommendedLabel: [7, \"recommendedLabel\"] }, { grChange: \"grChange\", dateChange: \"dateChange\" }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawRangeTime_1)), i0.ɵdid(9, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co._$gr; var currVal_4 = _co.beginDate; var currVal_5 = _co._$limitEnd; var currVal_6 = _co._$limitStart; var currVal_7 = _co.refreshInterval; var currVal_8 = _co.grItems; var currVal_9 = _co.recommendedBegin; var currVal_10 = _co.recommendedEnd; var currVal_11 = _co.recommendedLabel; _ck(_v, 4, 0, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11); var currVal_16 = _co._$gr; var currVal_17 = _co.endDate; var currVal_18 = _co._$endTimeLimitEnd; var currVal_19 = _co.beginDate; var currVal_20 = _co.refreshInterval; var currVal_21 = _co.recommendedBegin; var currVal_22 = _co.recommendedEnd; var currVal_23 = _co.recommendedLabel; _ck(_v, 7, 0, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20, currVal_21, currVal_22, currVal_23); var currVal_24 = (_co._$shortcuts && _co._$shortcuts.length); _ck(_v, 9, 0, currVal_24); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵnov(_v, 4).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 4).valid; _ck(_v, 2, 0, currVal_0, currVal_1, currVal_2); var currVal_12 = (_co.grItems && (_co.grItems.length != 0)); var currVal_13 = i0.ɵnov(_v, 7).width; var currVal_14 = true; var currVal_15 = !i0.ɵnov(_v, 7).valid; _ck(_v, 5, 0, currVal_12, currVal_13, currVal_14, currVal_15); }); }\nexport function View_JigsawRangeTime_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-range-time\", [], [[2, \"jigsaw-range-time-host\", null], [2, \"jigsaw-range-time-error\", null]], null, null, View_JigsawRangeTime_0, RenderType_JigsawRangeTime)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawRangeTime]), i0.ɵdid(2, 245760, null, 0, i7.JigsawRangeTime, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar JigsawRangeTimeNgFactory = i0.ɵccf(\"jigsaw-range-time, j-range-time\", i7.JigsawRangeTime, View_JigsawRangeTime_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", valid: \"valid\", gr: \"gr\", beginDate: \"beginDate\", endDate: \"endDate\", limitStart: \"limitStart\", limitEnd: \"limitEnd\", weekStart: \"weekStart\", weekDayStart: \"weekDayStart\", grItems: \"grItems\", refreshInterval: \"refreshInterval\", recommendedBegin: \"recommendedBegin\", recommendedEnd: \"recommendedEnd\", recommendedLabel: \"recommendedLabel\" }, { grChange: \"grChange\", change: \"change\", beginDateChange: \"beginDateChange\", endDateChange: \"endDateChange\" }, []);\nexport { JigsawRangeTimeNgFactory as JigsawRangeTimeNgFactory };\n","<div class=\"jigsaw-range-time\">\n    <jigsaw-time [date]=\"beginDate\" [(gr)]=\"_$gr\" [limitStart]=\"_$limitStart\" [limitEnd]=\"_$limitEnd\"\n                 (dateChange)=\"_$dateChange('beginDate',$event)\" [refreshInterval]=\"refreshInterval\"\n                 [recommendedBegin]=\"recommendedBegin\" [recommendedEnd]=\"recommendedEnd\"\n                 [recommendedLabel]=\"recommendedLabel\" [grItems]=\"grItems\" #timeStart\n                 class.jigsaw-range-time-startTime=\"false\" (grChange)=\"_$grChange($event)\">\n    </jigsaw-time>\n    <jigsaw-time [date]=\"endDate\" [(gr)]=\"_$gr\" [limitStart]=\"beginDate\" [limitEnd]=\"_$endTimeLimitEnd\"\n                 (dateChange)=\"_$dateChange('endDate',$event)\" [refreshInterval]=\"refreshInterval\"\n                 [recommendedBegin]=\"recommendedBegin\" [recommendedEnd]=\"recommendedEnd\"\n                 [recommendedLabel]=\"recommendedLabel\" #timeEnd\n                 [class.jigsaw-range-time-endTime]=\"(grItems && grItems.length!=0)\">\n    </jigsaw-time>\n    <div *ngIf=\"_$shortcuts && _$shortcuts.length\" class=\"jigsaw-range-time-shortcuts\">\n        <span *ngFor=\"let item of _$shortcuts\" (click)=\"_changeShortcut(item)\">\n            {{item.label}}\n        </span>\n    </div>\n</div>\n","import {CommonModule} from \"@angular/common\";\nimport {NgModule} from \"@angular/core\";\nimport {TranslateModule, TranslateService} from \"@ngx-translate/core\";\nimport {JigsawTooltipModule} from \"../tooltip/tooltip\";\nimport {PopupService} from \"../../common/service/popup.service\";\nimport {JigsawTime} from \"./time\";\n\n@NgModule({\n    imports: [CommonModule, JigsawTooltipModule, TranslateModule.forRoot()],\n    declarations: [JigsawTime],\n    exports: [JigsawTime],\n    providers: [PopupService, TranslateService],\n})\nexport class JigsawTimeModule {\n}\n\nexport * from './time';\n","import * as tslib_1 from \"tslib\";\nimport { ElementRef, EventEmitter, OnDestroy, Renderer2, AfterViewInit } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { TimeGr, TimeService, TimeUnit } from \"../../common/service/time.service\";\nimport { PopupPositionType, PopupService } from \"../../common/service/popup.service\";\nimport { JigsawSimpleTooltipComponent } from \"../tooltip/tooltip\";\nimport { TranslateHelper } from \"../../common/core/utils/translate-helper\";\nimport { ElementEventHelper, InternalUtils } from \"../../common/core/utils/internal-utils\";\nimport { TranslateService } from \"@ngx-translate/core\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 表示一个自定义的时间范围，一般用于配合`JigsawRangeTime.grItems`属性使用，用于设置某个粒度下快速时间范围选择。\n */\nvar Shortcut = /** @class */ (function () {\n    function Shortcut() {\n    }\n    return Shortcut;\n}());\nexport { Shortcut };\n/**\n * 一个时间粒度\n */\nvar GrItem = /** @class */ (function () {\n    function GrItem() {\n    }\n    return GrItem;\n}());\nexport { GrItem };\n/**\n * 用于在界面上提供一个时刻的选择，支持多种时间粒度切换，支持年月日时分秒及其各种组合，如下是一些常见的场景及其建议：\n *\n * - 如果需要选择的是一个时间范围，则请使用`JigsawRangeTime`；\n * - 如果你需要的是一个日历的功能，那请参考[这个demo]($demo=table/calendar)，通过表格+渲染器的方式来模拟；\n * - 时间选择器常常是收纳到下拉框中以解决视图空间，Jigsaw是通过`JigsawComboSelect`来组合使用的，\n * 参考[这个demo]($demo=time/with-combo-select)；\n *\n * 时间控件是对表单友好的，你可以给时间控件编写表单校验器，参考[这个demo]($demo=form/template-driven)。\n *\n * $demo = time/full\n * $demo = time/basic\n */\nvar JigsawTime = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTime, _super);\n    function JigsawTime(_el, _renderer, _popService, _translateService) {\n        var _this = _super.call(this) || this;\n        _this._el = _el;\n        _this._renderer = _renderer;\n        _this._popService = _popService;\n        _this._translateService = _translateService;\n        _this.valid = true;\n        /**\n         * 当时间粒度被用户切换之后，Jigsaw会发出此事件。\n         *\n         * $demo = time/gr\n         *\n         */\n        _this.grChange = new EventEmitter();\n        /**\n         * @internal\n         */\n        _this._$gr = TimeGr.date;\n        /**\n         * 当时间被用户切换之后，Jigsaw会发出此事件。\n         *\n         * $demo = time/basic\n         *\n         */\n        _this.dateChange = new EventEmitter();\n        _this._eventHelper = new ElementEventHelper();\n        _this._propagateChange = function () { };\n        _this._refreshInterval = 0;\n        _this._langChangeSubscriber = TranslateHelper.languageChangEvent.subscribe(function (langInfo) { return _this._timePicker && _this._timePicker.locale(langInfo.curLang); });\n        InternalUtils.initI18n(_translateService, 'time', {\n            zh: { recommendedLabel: '推荐日期' },\n            en: { recommendedLabel: 'Recommend' }\n        });\n        _translateService.setDefaultLang(_translateService.getBrowserLang());\n        _this._defineLocale();\n        // defineLocale会使moment设置locale，需要重置为浏览器默认值\n        moment.locale(_translateService.getBrowserLang());\n        return _this;\n    }\n    Object.defineProperty(JigsawTime.prototype, \"gr\", {\n        /**\n         * 时间当前的粒度，在双绑模式下改变这值可以让时间控件更换到对应的粒度。\n         *\n         * $demo = time/gr\n         *\n         *\n         */\n        get: function () {\n            return this._$gr;\n        },\n        //粒度\n        set: function (value) {\n            if (typeof value === 'string') {\n                value = TimeGr[value];\n            }\n            if (value != this._$gr) {\n                this._$gr = value;\n                this._value = TimeService.getFormatDate(this._value, this._$gr);\n                if (this._timePicker) {\n                    this._initDatePicker();\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"date\", {\n        /**\n         * 当前所选中的时刻，在双绑模式下，更新这个值可以让时间控件选中对应的时刻。\n         *\n         * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n         *\n         * $demo = time/basic\n         *\n         *\n         */\n        get: function () {\n            return this._value ? this._value : TimeService.convertValue(new Date(), this.gr);\n        },\n        set: function (newValue) {\n            this.writeValue(newValue);\n            if (newValue && newValue != this._value) {\n                this._propagateChange(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"limitEnd\", {\n        /**\n         * 时间控件允许选择的时间截止时刻，默认是无限制的未来。这个约束对所有的粒度都生效。\n         *\n         * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n         *\n         * $demo = time/limit-start\n         * $demo = time/limit-end\n         *\n         *\n         */\n        get: function () {\n            return this._limitEnd && TimeService.convertValue(this._limitEnd, this.gr);\n        },\n        set: function (value) {\n            if (value) {\n                this._limitEnd = value;\n                this._checkMacro();\n                if (this._timePicker) {\n                    if (this._timePicker.minDate() && this._timePicker.minDate() > TimeService.getDate(this.limitEnd, this.gr)) {\n                        this._timePicker.minDate(this.limitEnd);\n                    }\n                    this._timePicker.maxDate(this.limitEnd);\n                    this._weekHandle();\n                    this._handleRecommended(this._el.nativeElement, this._popService);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"limitStart\", {\n        /**\n         * 时间控件允许选择的时间开始时刻，默认是无限制的过去。这个约束对所有的粒度都生效。\n         *\n         * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n         *\n         * $demo = time/limit-start\n         * $demo = time/limit-end\n         *\n         *\n         */\n        get: function () {\n            return this._limitStart && TimeService.convertValue(this._limitStart, this.gr);\n        },\n        set: function (value) {\n            if (value) {\n                this._limitStart = value;\n                this._checkMacro();\n                if (this._timePicker) {\n                    if (this._timePicker.maxDate() && this._timePicker.maxDate() < TimeService.getDate(this.limitStart, this.gr)) {\n                        this._timePicker.maxDate(this.limitStart);\n                    }\n                    this._timePicker.minDate(this.limitStart);\n                    this._weekHandle();\n                    this._handleRecommended(this._el.nativeElement, this._popService);\n                }\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"refreshInterval\", {\n        /**\n         * 刷新时间宏的间隔毫秒数，默认不刷新。\n         *\n         * 解决的场景是：在界面上弄了个时间选择器，页面打开时默认选中当前时刻，并限制了用户只能选择过去3小时的时间，这很快就可以完成，毫无难度。\n         * 然而用户使用时是这样的，他打开了页面后，就去处理别的事情去了，几个小时之后再回来想用这个已经打开的页面去查询一些东西，\n         * 结果发现界面上时间怎么选都不对（因为那个时刻初始化了一次之后就再也没有更新，还停留在几个小时之前），只好刷新页面，用户常常抱怨这一点。\n         *\n         * 这个场景下，只要设置一个大于0的数字给时间控件的这个属性即可解决。\n         *\n         * $demo = time/refresh-interval\n         *\n         *\n         */\n        get: function () {\n            return this._refreshInterval;\n        },\n        set: function (value) {\n            if (value || value == 0) {\n                this._refreshInterval = value;\n                this._checkMacro();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"weekStart\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._weekStart;\n        },\n        set: function (value) {\n            console.warn('WeekStart setter has been abandoned, weekStart auto changed by locale language!');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTime.prototype, \"weekDayStart\", {\n        /**\n         * @internal\n         */\n        get: function () {\n            return this._weekDayStart;\n        },\n        set: function (value) {\n            console.warn('weekDayStart setter has been abandoned, weekDayStart auto changed by locale language!');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTime.prototype.ngAfterViewInit = function () {\n        this._initDatePicker();\n        this._checkMacro();\n    };\n    JigsawTime.prototype._defineLocale = function () {\n        moment.defineLocale('zh', {\n            months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n            monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n            weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n            longDateFormat: {\n                LT: 'HH:mm',\n                LTS: 'HH:mm:ss',\n                L: 'YYYY年MMMD日',\n                LL: 'YYYY年MMMD日',\n                LLL: 'YYYY年MMMD日Ah点mm分',\n                LLLL: 'YYYY年MMMD日ddddAh点mm分',\n                l: 'YYYY年MMMD日',\n                ll: 'YYYY年MMMD日',\n                lll: 'YYYY年MMMD日 HH:mm',\n                llll: 'YYYY年MMMD日dddd HH:mm'\n            },\n            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n            meridiemHour: function (hour, meridiem) {\n                if (hour === 12) {\n                    hour = 0;\n                }\n                if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                    return hour;\n                }\n                else if (meridiem === '下午' || meridiem === '晚上') {\n                    return hour + 12;\n                }\n                else {\n                    // '中午'\n                    return hour >= 11 ? hour : hour + 12;\n                }\n            },\n            meridiem: function (hour, minute, isLower) {\n                var hm = hour * 100 + minute;\n                if (hm < 600) {\n                    return '凌晨';\n                }\n                else if (hm < 900) {\n                    return '早上';\n                }\n                else if (hm < 1130) {\n                    return '上午';\n                }\n                else if (hm < 1230) {\n                    return '中午';\n                }\n                else if (hm < 1800) {\n                    return '下午';\n                }\n                else {\n                    return '晚上';\n                }\n            },\n            calendar: {\n                sameDay: '[今天]LT',\n                nextDay: '[明天]LT',\n                nextWeek: '[下]ddddLT',\n                lastDay: '[昨天]LT',\n                lastWeek: '[上]ddddLT',\n                sameElse: 'L'\n            },\n            dayOfMonthOrdinalParse: /\\d{1,2}([日月周])/,\n            ordinal: function (number, period) {\n                switch (period) {\n                    case 'd':\n                    case 'D':\n                    case 'DDD':\n                        return number + '日';\n                    case 'M':\n                        return number + '月';\n                    case 'w':\n                    case 'W':\n                        return number + '周';\n                    default:\n                        return number;\n                }\n            },\n            relativeTime: {\n                future: '%s内',\n                past: '%s前',\n                s: '几秒',\n                m: '1 分钟',\n                mm: '%d 分钟',\n                h: '1 小时',\n                hh: '%d 小时',\n                d: '1 天',\n                dd: '%d 天',\n                M: '1 个月',\n                MM: '%d 个月',\n                y: '1 年',\n                yy: '%d 年'\n            },\n            week: {\n                // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n                dow: 1,\n                doy: 4 // The week that contains Jan 4th is the first week of the year.\n            }\n        });\n    };\n    JigsawTime.prototype.ngOnDestroy = function () {\n        window.clearInterval(this._intervalId);\n        _super.prototype.ngOnDestroy.call(this);\n        this._destroyPicker();\n        this._langChangeSubscriber.unsubscribe();\n    };\n    JigsawTime.prototype._destroyPicker = function () {\n        if (this._timePicker) {\n            this._timePicker.destroy();\n        }\n    };\n    JigsawTime.prototype._initDatePicker = function () {\n        var _this = this;\n        var insert = this._el.nativeElement.querySelector(\".jigsaw-time-box\");\n        var _a = this._handleValue(this.date), result = _a[0], isChange = _a[1];\n        if (isChange) {\n            this._value = result;\n        }\n        this._destroyPicker();\n        var picker = $(insert).datetimepicker({\n            inline: true,\n            defaultDate: TimeService.getDate(this.date, this.gr),\n            format: TimeService.getFormatter(this.gr),\n            minDate: this._limitStart && TimeService.getDate(this.limitStart, this.gr),\n            maxDate: this._limitEnd && TimeService.getDate(this.limitEnd, this.gr)\n        });\n        picker.off('dp.change');\n        picker.on(\"dp.change\", function (e) {\n            var changeValue = TimeService.getFormatDate(e.date, _this.gr);\n            if (_this.date != changeValue) {\n                _this._handleValueChange(changeValue, _this.gr);\n            }\n            _this._bindActiveDayClickHandler(picker);\n            // 选择了日期，让recommend的tooltip的销毁\n            if (_this._tooltipInfo) {\n                _this._tooltipInfo.dispose();\n                _this._tooltipInfo = null;\n            }\n        });\n        picker.on(\"dp.update\", function () {\n            // Fired (in most cases) when the viewDate changes. E.g. Next and Previous buttons, selecting a year.\n            _this._weekHandle();\n            _this._handleRecommended(_this._el.nativeElement, _this._popService);\n        });\n        // 点击day.active会重新渲染day table，但不会触发dp.change，此函数用于填补日期插件的坑\n        this._bindActiveDayClickHandler(picker);\n        this._timePicker = $(insert).data(\"DateTimePicker\");\n        this._timePicker.locale(this._translateService.currentLang ? this._translateService.currentLang :\n            CommonUtils.getBrowserLang());\n        this._handleValueChange(this.date, this.gr, true);\n    };\n    JigsawTime.prototype._bindActiveDayClickHandler = function (picker) {\n        var _this = this;\n        // 等待day.active刷新出来\n        this.callLater(function () {\n            picker.find('.datepicker-days table tbody tr td.day.active').on('click', function () {\n                // 等待点击后的day-btn刷新出来\n                _this.callLater(function () {\n                    // week select\n                    _this._weekHandle();\n                    // recommend select\n                    _this._handleRecommended(_this._el.nativeElement, _this._popService);\n                    _this._bindActiveDayClickHandler(picker);\n                });\n            });\n        });\n    };\n    //设置插件选中时间值\n    JigsawTime.prototype._setDate = function (value) {\n        if (this._timePicker) {\n            this._handleValueChange(value, this.gr);\n            this._timePicker.date(TimeService.getFormatDate(value, this.gr));\n            this._weekHandle();\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTime.prototype._$changeGranularity = function (select) {\n        this.gr = select.value;\n        this.grChange.emit(this.gr);\n    };\n    JigsawTime.prototype._checkMacro = function () {\n        var _this = this;\n        if (this._intervalId) {\n            window.clearInterval(this._intervalId);\n        }\n        if ((TimeService.isMacro(this._limitStart) || TimeService.isMacro(this._limitEnd)) && this._refreshInterval != 0) {\n            this._intervalId = window.setInterval(function () {\n                _this._handleLimitStartAndEnd();\n            }, this._refreshInterval);\n        }\n    };\n    JigsawTime.prototype._handleLimitStartAndEnd = function () {\n        if (this._timePicker) {\n            this._limitStart && this._timePicker.minDate(TimeService.addDate(this.limitStart, -1, TimeUnit.s));\n            this._limitEnd && this._timePicker.maxDate(TimeService.addDate(this.limitEnd, 1, TimeUnit.s));\n            this._weekHandle();\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    };\n    JigsawTime.prototype._weekHandle = function () {\n        if (this.gr == TimeGr.week) {\n            this._handleWeekSelect();\n        }\n    };\n    JigsawTime.prototype._handleValueChange = function (changeValue, gr, emit) {\n        var _this = this;\n        if (this.date != changeValue || emit) {\n            this._value = changeValue;\n            this.callLater(function () {\n                var val = gr == TimeGr.week ? _this._handleWeekSelect() : _this._value;\n                _this.dateChange.emit(val);\n                _this._propagateChange(val);\n            });\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    };\n    JigsawTime.prototype._handleValue = function (value) {\n        if (this._limitStart && value < this.limitStart) {\n            return [this.limitStart, true];\n        }\n        if (this._limitEnd && value > this.limitEnd) {\n            return [this.limitEnd, true];\n        }\n        return [value, false];\n    };\n    JigsawTime.prototype._handleWeekSelect = function () {\n        var weekNum = TimeService.getWeekOfYear(this.date);\n        var year = TimeService.getWeekYear(this.date);\n        var tdActive = this._el.nativeElement.querySelector(\".jigsaw-time-box .datepicker .datepicker-days>table>tbody>tr>td.active\");\n        if (tdActive) {\n            tdActive.parentNode.classList.add(\"active\");\n        }\n        return { year: year, week: weekNum };\n    };\n    JigsawTime.prototype._handleRecommended = function (nativeElement, popService) {\n        var _this = this;\n        if (this.recommendedBegin && this.recommendedEnd) {\n            this.recommendedBegin = TimeService.getFormatDate(this.recommendedBegin);\n            this.recommendedEnd = TimeService.getFormatDate(this.recommendedEnd);\n            if (TimeService.getYear(this.recommendedBegin) != TimeService.getYear(this.recommendedEnd)) { //不支持跨年设置\n                throw \"recommended not support different year times!\";\n            }\n            var monthsNode = JigsawTime._getDataPickerNode(\"months\", nativeElement);\n            var monthsHeadNode = JigsawTime._getDataPickerNode(\"months\", nativeElement, true);\n            JigsawTime._searchDateForMonth(this.recommendedBegin, this.recommendedEnd, monthsNode, monthsHeadNode);\n            var daysNode = JigsawTime._getDataPickerNode(\"days\", nativeElement);\n            var daysHeadNode = JigsawTime._getDataPickerNode(\"days\", nativeElement, true);\n            var daysObj = JigsawTime._parseDay(daysHeadNode.innerText);\n            JigsawTime._searchDateForDay(this.recommendedBegin, this.recommendedEnd, daysNode, daysObj);\n            nativeElement.querySelectorAll(\".jigsaw-time-box .datepicker .expect-day\").forEach(function (node) {\n                // #239 移除已经注册的事件. 点击事件会触发此操作, 造成重复注册事件. 引起tooltips 不能销毁.\n                var removeMouseEnterListeners = _this._eventHelper.get(node, 'mouseenter');\n                if (removeMouseEnterListeners instanceof Array) {\n                    removeMouseEnterListeners.forEach(function (removeMouseenterListener) {\n                        removeMouseenterListener();\n                        _this._eventHelper.del(node, 'mouseenter', removeMouseenterListener);\n                    });\n                }\n                var removeMouseLeaveListeners = _this._eventHelper.get(node, 'mouseleave');\n                if (removeMouseLeaveListeners instanceof Array) {\n                    removeMouseLeaveListeners.forEach(function (removeMouseleaveListener) {\n                        removeMouseleaveListener();\n                        _this._eventHelper.del(node, 'mouseleave', removeMouseleaveListener);\n                    });\n                }\n                var removeMouseEnterListener = _this._renderer.listen(node, \"mouseenter\", function (event) {\n                    if (_this._tooltipInfo) {\n                        _this._tooltipInfo.dispose();\n                        _this._tooltipInfo = null;\n                    }\n                    _this._tooltipInfo = popService.popup(JigsawSimpleTooltipComponent, {\n                        modal: false,\n                        pos: { x: $(event.currentTarget).offset().left, y: $(event.currentTarget).offset().top },\n                        posOffset: {\n                            top: -40,\n                            left: 0\n                        },\n                        posType: PopupPositionType.absolute,\n                    }, {\n                        message: _this.recommendedLabel || _this._translateService.instant('time.recommendedLabel')\n                    });\n                });\n                _this._eventHelper.put(node, \"mouseenter\", removeMouseEnterListener);\n                var removeMouseleaveListener = _this._renderer.listen(node, \"mouseleave\", function () {\n                    if (_this._tooltipInfo) {\n                        _this._tooltipInfo.dispose();\n                        _this._tooltipInfo = null;\n                    }\n                });\n                _this._eventHelper.put(node, \"mouseleave\", removeMouseleaveListener);\n            });\n        }\n    };\n    JigsawTime._searchDateForDay = function (begin, end, sourceNodes, headObj) {\n        var startMonth = TimeService.getMonth(begin);\n        var endMonth = TimeService.getMonth(end);\n        var startDate = TimeService.getDay(begin);\n        var endDate = TimeService.getDay(end);\n        if (TimeService.getYear(begin) == headObj.year &&\n            (startMonth == headObj.month || endMonth == headObj.month)) {\n            sourceNodes.forEach(function (node) {\n                var text = +node.innerText;\n                if (startMonth != endMonth) {\n                    if (!node.classList.contains(\"old\") && !node.classList.contains(\"new\")) {\n                        if ((startMonth == headObj.month && text >= startDate) ||\n                            (endMonth == headObj.month && text <= endDate)) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == startDate) {\n                            node.classList.add(\"border-left\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    }\n                    else if (node.classList.contains(\"new\")) {\n                        if (startMonth == headObj.month && text <= endDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    }\n                    else if (node.classList.contains(\"old\")) {\n                        if (endMonth == headObj.month && text >= startDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                    }\n                }\n                else {\n                    if (!node.classList.contains(\"old\") && !node.classList.contains(\"new\")) {\n                        if (text >= startDate && text <= endDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == startDate) {\n                            node.classList.add(\"border-left\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    }\n                }\n            });\n        }\n    };\n    JigsawTime._parseDay = function (val) {\n        var charToNum = { 一: 1, 二: 2, 三: 3, 四: 4, 五: 5, 六: 6, 七: 7, 八: 8, 九: 9, 十: 10, 十一: 11, 十二: 12 };\n        var enUsToNum = {\n            January: 1,\n            February: 2,\n            March: 3,\n            April: 4,\n            May: 5,\n            June: 6,\n            July: 7,\n            August: 8,\n            September: 9,\n            October: 10,\n            November: 11,\n            December: 12\n        };\n        var result = {};\n        if (val.indexOf(\"月\") == -1) {\n            var valArr = val.split(/\\s+/);\n            result[\"month\"] = +enUsToNum[valArr[0]];\n            result[\"year\"] = +valArr[1];\n        }\n        else {\n            var valArr = val.split(\"月\");\n            result[\"month\"] = charToNum[valArr[0].trim()];\n            result[\"year\"] = +(valArr[1].trim());\n        }\n        return result;\n    };\n    JigsawTime._parseMonth = function (val) {\n        var enUsSimpleToNum = {\n            Jan: 1,\n            Feb: 2,\n            Mar: 3,\n            Apr: 4,\n            May: 5,\n            Jun: 6,\n            Jul: 7,\n            Aug: 8,\n            Sep: 9,\n            Oct: 10,\n            Nov: 11,\n            Dec: 12\n        };\n        if (val.indexOf(\"月\") == -1) {\n            return enUsSimpleToNum[val];\n        }\n        else {\n            return val.replace(\"月\", '');\n        }\n    };\n    JigsawTime._searchDateForMonth = function (begin, end, sourceNodes, headNode) {\n        var startMonth = TimeService.getMonth(begin);\n        var endMonth = TimeService.getMonth(end);\n        if (TimeService.getYear(begin) == headNode.innerText) {\n            sourceNodes.forEach(function (node) {\n                if (!node.classList.contains(\"disabled\")) {\n                    var month = JigsawTime._parseMonth(node.innerText);\n                    if (month >= startMonth && month <= endMonth) {\n                        node.classList.add(\"expect-day\");\n                    }\n                    if (month == startMonth) {\n                        node.classList.add(\"border-left\");\n                    }\n                    if (month == endMonth) {\n                        node.classList.add(\"border-right\");\n                    }\n                }\n            });\n        }\n    };\n    JigsawTime._getDataPickerNode = function (granularity, nativeElement, isHead) {\n        var selectorBefore = \".jigsaw-time-box .datepicker .datepicker-\";\n        var selectorAfter = \">table>tbody>tr>\";\n        var nodeName = \"\";\n        if (granularity == \"years\" || granularity == \"months\") {\n            nodeName = \"td>span:not(.disabled)\";\n        }\n        else {\n            nodeName = \"td:not(.disabled)\";\n        }\n        var selector = selectorBefore + granularity + selectorAfter + nodeName;\n        if (isHead) {\n            var theadNode = \">table>thead>tr>th.picker-switch[colspan]\";\n            selector = selectorBefore + granularity + theadNode;\n            return nativeElement.querySelector(selector);\n        }\n        return nativeElement.querySelectorAll(selector);\n    };\n    JigsawTime.prototype.writeValue = function (newValue) {\n        if (!newValue || newValue == this._value) {\n            // 此处也会过滤掉newValue是格式化过的，并且与_value相等的情况\n            return;\n        }\n        newValue = TimeService.convertValue(newValue, this.gr);\n        if (newValue == this._value) {\n            // 此处把newValue格式化后，与_value比较，过滤掉相等的情况\n            return;\n        }\n        if (this._value && this.gr == TimeGr.week) {\n            var newValueYear = TimeService.getWeekYear(newValue);\n            var valueYear = TimeService.getWeekYear(this._value);\n            var newValueWeek = TimeService.getWeekOfYear(newValue);\n            var valueWeek = TimeService.getWeekOfYear(this._value);\n            if (newValueYear == valueYear && newValueWeek == valueWeek)\n                return;\n        }\n        var value = this._handleValue(newValue)[0];\n        this._setDate(value);\n        this._value = newValue;\n    };\n    JigsawTime.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawTime.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawTime;\n}(AbstractJigsawComponent));\nexport { JigsawTime };\n","import {\n    Component, ElementRef, EventEmitter, Input, OnDestroy, Renderer2, Output, forwardRef, AfterViewInit\n} from \"@angular/core\";\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {AbstractJigsawComponent} from \"../../common/common\";\nimport {TimeWeekDayStart, TimeGr, TimeService, TimeUnit, TimeWeekStart} from \"../../common/service/time.service\";\nimport {PopupInfo, PopupPositionType, PopupService} from \"../../common/service/popup.service\";\nimport {JigsawSimpleTooltipComponent} from \"../tooltip/tooltip\";\nimport {Time, WeekTime} from \"../../common/service/time.types\";\nimport {TranslateHelper} from \"../../common/core/utils/translate-helper\";\nimport {ElementEventHelper, InternalUtils} from \"../../common/core/utils/internal-utils\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\ndeclare const moment: any;\ndeclare const $: any;\n\n/**\n * 时间范围生成函数，用于生成自定义的时间范围\n *\n * $demo = range-time/gr-items\n */\nexport type TimeShortcutFunction = () => [WeekTime, WeekTime]\n\n/**\n * 表示一个自定义的时间范围，一般用于配合`JigsawRangeTime.grItems`属性使用，用于设置某个粒度下快速时间范围选择。\n */\nexport class Shortcut {\n    /**\n     * 国际化提示信息，将被直接显示在界面上\n     * $demo = range-time/gr-items\n     */\n    label: string;\n    /**\n     * 时间范围的起止时间点，可以给出固定值，也可以给一个产生起止时间点的函数\n     * $demo = range-time/gr-items\n     */\n    dateRange: [WeekTime, WeekTime] | TimeShortcutFunction;\n}\n\n/**\n * 一个时间粒度\n */\nexport class GrItem {\n    /**\n     * 国际化提示信息，将被直接显示在界面上\n     */\n    label: string;\n    /**\n     * 粒度值\n     *\n     * $demo = range-time/gr-items\n     * $demo = time/gr\n     */\n    value: TimeGr;\n    /**\n     * 配置当前粒度下，用户能够选择的最大时间跨度。当某些查询请求必须约束用户选择某个范围内的时间时，这个配置项将非常有用。\n     * 例如查询银行流水时，我们常常被约束最长只能查询3个月的流水等。\n     *\n     * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n     *\n     * $demo = range-time/gr-items\n     */\n    span?: string;\n    /**\n     * 给出一组预定义的时间范围，这样用户可以通过这些值快速的设置好待选的时间范围，提高易用性。\n     * 只在和`JigsawRangeTime`配合使用时才有效\n     *\n     * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n     *\n     * $demo = range-time/gr-items\n     */\n    shortcuts?: Shortcut[];\n}\n\n/**\n * 用于在界面上提供一个时刻的选择，支持多种时间粒度切换，支持年月日时分秒及其各种组合，如下是一些常见的场景及其建议：\n *\n * - 如果需要选择的是一个时间范围，则请使用`JigsawRangeTime`；\n * - 如果你需要的是一个日历的功能，那请参考[这个demo]($demo=table/calendar)，通过表格+渲染器的方式来模拟；\n * - 时间选择器常常是收纳到下拉框中以解决视图空间，Jigsaw是通过`JigsawComboSelect`来组合使用的，\n * 参考[这个demo]($demo=time/with-combo-select)；\n *\n * 时间控件是对表单友好的，你可以给时间控件编写表单校验器，参考[这个demo]($demo=form/template-driven)。\n *\n * $demo = time/full\n * $demo = time/basic\n */\n@Component({\n    selector: 'jigsaw-time, j-time',\n    templateUrl: 'time.html',\n    host: {\n        '[style.width]': 'width',\n        '[class.jigsaw-time-host]': 'true',\n        '[class.jigsaw-time-error]': '!valid',\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawTime), multi: true},\n    ]\n})\nexport class JigsawTime extends AbstractJigsawComponent implements ControlValueAccessor, AfterViewInit, OnDestroy {\n\n    @Input()\n    public valid: boolean = true;\n\n    /**\n     * 当时间粒度被用户切换之后，Jigsaw会发出此事件。\n     *\n     * $demo = time/gr\n     *\n     */\n    @Output()\n    public grChange = new EventEmitter<TimeGr>();\n\n    /**\n     * @internal\n     */\n    public _$gr: TimeGr = TimeGr.date;\n\n    /**\n     * 时间当前的粒度，在双绑模式下改变这值可以让时间控件更换到对应的粒度。\n     *\n     * $demo = time/gr\n     *\n     *\n     */\n    public get gr(): TimeGr | string {\n        return this._$gr;\n    }\n\n    //粒度\n    @Input()\n    public set gr(value: TimeGr | string) {\n        if (typeof value === 'string') {\n            value = TimeGr[value];\n        }\n        if (<TimeGr>value != this._$gr) {\n            this._$gr = <TimeGr>value;\n            this._value = TimeService.getFormatDate(this._value, this._$gr);\n            if (this._timePicker) {\n                this._initDatePicker();\n            }\n        }\n    }\n\n    private _value: Time;\n\n    /**\n     * 当前所选中的时刻，在双绑模式下，更新这个值可以让时间控件选中对应的时刻。\n     *\n     * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n     *\n     * $demo = time/basic\n     *\n     *\n     */\n    @Input()\n    public get date(): WeekTime {\n        return this._value ? this._value : TimeService.convertValue(new Date(), <TimeGr>this.gr);\n    }\n\n    public set date(newValue: WeekTime) {\n        this.writeValue(newValue);\n        if (newValue && newValue != this._value) {\n            this._propagateChange(this._value);\n        }\n    }\n\n    /**\n     * 当时间被用户切换之后，Jigsaw会发出此事件。\n     *\n     * $demo = time/basic\n     *\n     */\n    @Output()\n    public dateChange = new EventEmitter<WeekTime>();\n\n    private _limitEnd: Time;\n\n    /**\n     * 时间控件允许选择的时间截止时刻，默认是无限制的未来。这个约束对所有的粒度都生效。\n     *\n     * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n     *\n     * $demo = time/limit-start\n     * $demo = time/limit-end\n     *\n     *\n     */\n    public get limitEnd(): Time {\n        return this._limitEnd && TimeService.convertValue(this._limitEnd, <TimeGr>this.gr)\n    }\n\n    @Input()\n    public set limitEnd(value: Time) {\n        if (value) {\n            this._limitEnd = value;\n            this._checkMacro();\n            if (this._timePicker) {\n                if (this._timePicker.minDate() && this._timePicker.minDate() > TimeService.getDate(this.limitEnd, <TimeGr>this.gr)) {\n                    this._timePicker.minDate(this.limitEnd)\n                }\n                this._timePicker.maxDate(this.limitEnd);\n                this._weekHandle();\n                this._handleRecommended(this._el.nativeElement, this._popService);\n            }\n        }\n    }\n\n    private _limitStart: Time;\n\n    /**\n     * 时间控件允许选择的时间开始时刻，默认是无限制的过去。这个约束对所有的粒度都生效。\n     *\n     * 支持时间宏。关于时间宏，请参考这里`TimeUnit`的说明。\n     *\n     * $demo = time/limit-start\n     * $demo = time/limit-end\n     *\n     *\n     */\n    public get limitStart(): Time {\n        return this._limitStart && TimeService.convertValue(this._limitStart, <TimeGr>this.gr);\n    }\n\n    @Input()\n    public set limitStart(value: Time) {\n        if (value) {\n            this._limitStart = value;\n            this._checkMacro();\n            if (this._timePicker) {\n                if (this._timePicker.maxDate() && this._timePicker.maxDate() < TimeService.getDate(this.limitStart, <TimeGr>this.gr)) {\n                    this._timePicker.maxDate(this.limitStart)\n                }\n                this._timePicker.minDate(this.limitStart);\n                this._weekHandle();\n                this._handleRecommended(this._el.nativeElement, this._popService);\n            }\n        }\n    }\n\n\n    /**\n     * 时间刷新的间隔毫秒数，主要针对startDate或endDate设置为now或now-2h等需要不时刷新的场景\n     */\n    private _refreshInterval: number;\n\n    /**\n     * 刷新时间宏的间隔毫秒数，默认不刷新。\n     *\n     * 解决的场景是：在界面上弄了个时间选择器，页面打开时默认选中当前时刻，并限制了用户只能选择过去3小时的时间，这很快就可以完成，毫无难度。\n     * 然而用户使用时是这样的，他打开了页面后，就去处理别的事情去了，几个小时之后再回来想用这个已经打开的页面去查询一些东西，\n     * 结果发现界面上时间怎么选都不对（因为那个时刻初始化了一次之后就再也没有更新，还停留在几个小时之前），只好刷新页面，用户常常抱怨这一点。\n     *\n     * 这个场景下，只要设置一个大于0的数字给时间控件的这个属性即可解决。\n     *\n     * $demo = time/refresh-interval\n     *\n     *\n     */\n    @Input()\n    public get refreshInterval(): number {\n        return this._refreshInterval;\n    }\n\n    public set refreshInterval(value: number) {\n        if (value || value == 0) {\n            this._refreshInterval = value;\n            this._checkMacro();\n        }\n    }\n\n    private _weekStart: TimeWeekStart;\n\n    /**\n     * @internal\n     */\n    @Input()\n    public get weekStart(): string | TimeWeekStart {\n        return this._weekStart;\n    }\n\n    public set weekStart(value: string | TimeWeekStart) {\n        console.warn('WeekStart setter has been abandoned, weekStart auto changed by locale language!');\n    }\n\n    private _weekDayStart: TimeWeekDayStart;\n\n    /**\n     * @internal\n     */\n    @Input()\n    public get weekDayStart(): string | TimeWeekDayStart {\n        return this._weekDayStart;\n    }\n\n    public set weekDayStart(value: string | TimeWeekDayStart) {\n        console.warn('weekDayStart setter has been abandoned, weekDayStart auto changed by locale language!');\n    }\n\n    /**\n     * 设置时间控件所支持的粒度。如果你的场景只允许用户选择天、周，则设置了这2个粒度之后，用户无法选择其他的粒度。\n     *\n     * $demo = time/gr-items\n     */\n    @Input()\n    public grItems: GrItem[];\n\n    /**\n     * 有些时候我们需要提示用户选择那些时间是最佳的，可以通过`recommendedBegin`和`recommendedEnd`来设置。\n     *\n     * $demo = time/recommended\n     */\n    @Input()\n    public recommendedBegin: Time;\n\n    /**\n     * 有些时候我们需要提示用户选择那些时间是最佳的，可以通过`recommendedBegin`和`recommendedEnd`来设置。\n     *\n     * $demo = time/recommended\n     */\n    @Input()\n    public recommendedEnd: Time;\n\n    /**\n     * 推荐日期提示标签，默认值是`\"推荐日期\"`或`\"Recommend\"`\n     */\n    @Input()\n    public recommendedLabel: String;\n\n    /**\n     * time插件容器（jq对象）\n     */\n    private _timePicker: any;\n\n    //定时器Id\n    private _intervalId: number;\n    private _langChangeSubscriber: Subscription;\n\n    constructor(private _el: ElementRef, private _renderer: Renderer2,\n                private _popService: PopupService, private _translateService: TranslateService) {\n        super();\n        this._refreshInterval = 0;\n\n        this._langChangeSubscriber = TranslateHelper.languageChangEvent.subscribe(\n            langInfo => this._timePicker && this._timePicker.locale(langInfo.curLang));\n\n        InternalUtils.initI18n(_translateService, 'time', {\n            zh: {recommendedLabel: '推荐日期'},\n            en: {recommendedLabel: 'Recommend'}\n        });\n        _translateService.setDefaultLang(_translateService.getBrowserLang());\n\n        this._defineLocale();\n        // defineLocale会使moment设置locale，需要重置为浏览器默认值\n        moment.locale(_translateService.getBrowserLang());\n    }\n\n    ngAfterViewInit() {\n        this._initDatePicker();\n        this._checkMacro();\n    }\n\n    private _defineLocale() {\n        moment.defineLocale('zh', {\n            months: '一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月'.split('_'),\n            monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n            weekdays: '星期日_星期一_星期二_星期三_星期四_星期五_星期六'.split('_'),\n            weekdaysShort: '周日_周一_周二_周三_周四_周五_周六'.split('_'),\n            weekdaysMin: '日_一_二_三_四_五_六'.split('_'),\n            longDateFormat: {\n                LT: 'HH:mm',\n                LTS: 'HH:mm:ss',\n                L: 'YYYY年MMMD日',\n                LL: 'YYYY年MMMD日',\n                LLL: 'YYYY年MMMD日Ah点mm分',\n                LLLL: 'YYYY年MMMD日ddddAh点mm分',\n                l: 'YYYY年MMMD日',\n                ll: 'YYYY年MMMD日',\n                lll: 'YYYY年MMMD日 HH:mm',\n                llll: 'YYYY年MMMD日dddd HH:mm'\n            },\n            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,\n            meridiemHour: function (hour, meridiem) {\n                if (hour === 12) {\n                    hour = 0;\n                }\n                if (meridiem === '凌晨' || meridiem === '早上' ||\n                    meridiem === '上午') {\n                    return hour;\n                } else if (meridiem === '下午' || meridiem === '晚上') {\n                    return hour + 12;\n                } else {\n                    // '中午'\n                    return hour >= 11 ? hour : hour + 12;\n                }\n            },\n            meridiem: function (hour, minute, isLower) {\n                let hm = hour * 100 + minute;\n                if (hm < 600) {\n                    return '凌晨';\n                } else if (hm < 900) {\n                    return '早上';\n                } else if (hm < 1130) {\n                    return '上午';\n                } else if (hm < 1230) {\n                    return '中午';\n                } else if (hm < 1800) {\n                    return '下午';\n                } else {\n                    return '晚上';\n                }\n            },\n            calendar: {\n                sameDay: '[今天]LT',\n                nextDay: '[明天]LT',\n                nextWeek: '[下]ddddLT',\n                lastDay: '[昨天]LT',\n                lastWeek: '[上]ddddLT',\n                sameElse: 'L'\n            },\n            dayOfMonthOrdinalParse: /\\d{1,2}([日月周])/,\n            ordinal: function (number, period) {\n                switch (period) {\n                    case 'd':\n                    case 'D':\n                    case 'DDD':\n                        return number + '日';\n                    case 'M':\n                        return number + '月';\n                    case 'w':\n                    case 'W':\n                        return number + '周';\n                    default:\n                        return number;\n                }\n            },\n            relativeTime: {\n                future: '%s内',\n                past: '%s前',\n                s: '几秒',\n                m: '1 分钟',\n                mm: '%d 分钟',\n                h: '1 小时',\n                hh: '%d 小时',\n                d: '1 天',\n                dd: '%d 天',\n                M: '1 个月',\n                MM: '%d 个月',\n                y: '1 年',\n                yy: '%d 年'\n            },\n            week: {\n                // GB/T 7408-1994《数据元和交换格式·信息交换·日期和时间表示法》与ISO 8601:1988等效\n                dow: 1, // Monday is the first day of the week.\n                doy: 4  // The week that contains Jan 4th is the first week of the year.\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        window.clearInterval(this._intervalId);\n        super.ngOnDestroy();\n        this._destroyPicker();\n        this._langChangeSubscriber.unsubscribe();\n    }\n\n    private _destroyPicker() {\n        if (this._timePicker) {\n            this._timePicker.destroy();\n        }\n    }\n\n    private _initDatePicker() {\n        const insert = this._el.nativeElement.querySelector(\".jigsaw-time-box\");\n        let [result, isChange] = this._handleValue(<Time>this.date);\n        if (isChange) {\n            this._value = result;\n        }\n        this._destroyPicker();\n        const picker = $(insert).datetimepicker({\n            inline: true,\n            defaultDate: TimeService.getDate(<string>this.date, <TimeGr>this.gr),\n            format: TimeService.getFormatter(<TimeGr>this.gr),\n            minDate: this._limitStart && TimeService.getDate(<string>this.limitStart, <TimeGr>this.gr),\n            maxDate: this._limitEnd && TimeService.getDate(<string>this.limitEnd, <TimeGr>this.gr)\n        });\n        picker.off('dp.change');\n        picker.on(\"dp.change\", (e) => {\n            let changeValue = TimeService.getFormatDate(e.date, <TimeGr>this.gr);\n            if (this.date != changeValue) {\n                this._handleValueChange(changeValue, <TimeGr>this.gr);\n            }\n            this._bindActiveDayClickHandler(picker);\n\n            // 选择了日期，让recommend的tooltip的销毁\n            if (this._tooltipInfo) {\n                this._tooltipInfo.dispose();\n                this._tooltipInfo = null;\n            }\n        });\n\n        picker.on(\"dp.update\", () => {\n            // Fired (in most cases) when the viewDate changes. E.g. Next and Previous buttons, selecting a year.\n            this._weekHandle();\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        });\n\n        // 点击day.active会重新渲染day table，但不会触发dp.change，此函数用于填补日期插件的坑\n        this._bindActiveDayClickHandler(picker);\n\n        this._timePicker = $(insert).data(\"DateTimePicker\");\n        this._timePicker.locale(this._translateService.currentLang ? this._translateService.currentLang :\n            CommonUtils.getBrowserLang());\n\n        this._handleValueChange(<Time>this.date, <TimeGr>this.gr, true);\n    }\n\n    private _bindActiveDayClickHandler(picker) {\n        // 等待day.active刷新出来\n        this.callLater(() => {\n            picker.find('.datepicker-days table tbody tr td.day.active').on('click', () => {\n                // 等待点击后的day-btn刷新出来\n                this.callLater(() => {\n                    // week select\n                    this._weekHandle();\n                    // recommend select\n                    this._handleRecommended(this._el.nativeElement, this._popService);\n                    this._bindActiveDayClickHandler(picker);\n                });\n            });\n        });\n    }\n\n    //设置插件选中时间值\n    private _setDate(value: Time) {\n        if (this._timePicker) {\n            this._handleValueChange(value, <TimeGr>this.gr);\n            this._timePicker.date(TimeService.getFormatDate(value, <TimeGr>this.gr));\n            this._weekHandle();\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$changeGranularity(select: GrItem) {\n        this.gr = select.value;\n        this.grChange.emit(this.gr);\n    }\n\n    private _checkMacro() {\n        if (this._intervalId) {\n            window.clearInterval(this._intervalId);\n        }\n        if ((TimeService.isMacro(<string>this._limitStart) || TimeService.isMacro(<string>this._limitEnd)) && this._refreshInterval != 0) {\n            this._intervalId = window.setInterval(() => {\n                this._handleLimitStartAndEnd();\n            }, this._refreshInterval);\n        }\n    }\n\n    private _handleLimitStartAndEnd() {\n        if (this._timePicker) {\n            this._limitStart && this._timePicker.minDate(TimeService.addDate(<string>this.limitStart, -1, TimeUnit.s));\n            this._limitEnd && this._timePicker.maxDate(TimeService.addDate(<string>this.limitEnd, 1, TimeUnit.s));\n            this._weekHandle();\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    }\n\n    private _weekHandle() {\n        if (this.gr == TimeGr.week) {\n            this._handleWeekSelect();\n        }\n    }\n\n    private _handleValueChange(changeValue: Time, gr: TimeGr, emit?: boolean) {\n        if (this.date != changeValue || emit) {\n            this._value = changeValue;\n            this.callLater(() => {\n                const val = gr == TimeGr.week ? this._handleWeekSelect() : this._value;\n                this.dateChange.emit(val);\n                this._propagateChange(val);\n            });\n            this._handleRecommended(this._el.nativeElement, this._popService);\n        }\n    }\n\n    private _handleValue(value: Time): [Time, boolean] {\n        if (this._limitStart && value < this.limitStart) {\n            return [this.limitStart, true];\n        }\n        if (this._limitEnd && value > this.limitEnd) {\n            return [this.limitEnd, true];\n        }\n        return [value, false];\n    }\n\n    private _handleWeekSelect() {\n        let weekNum = TimeService.getWeekOfYear(<string>this.date);\n        let year = TimeService.getWeekYear(<string>this.date);\n        const tdActive = this._el.nativeElement.querySelector(\".jigsaw-time-box .datepicker .datepicker-days>table>tbody>tr>td.active\");\n        if (tdActive) {\n            tdActive.parentNode.classList.add(\"active\");\n        }\n        return {year: year, week: weekNum};\n    }\n\n    private _tooltipInfo: PopupInfo;\n\n    private _eventHelper: ElementEventHelper = new ElementEventHelper();\n\n    private _handleRecommended(nativeElement: any, popService: PopupService) {\n        if (this.recommendedBegin && this.recommendedEnd) {\n            this.recommendedBegin = TimeService.getFormatDate(this.recommendedBegin);\n            this.recommendedEnd = TimeService.getFormatDate(this.recommendedEnd);\n            if (TimeService.getYear(<string>this.recommendedBegin) != TimeService.getYear(<string>this.recommendedEnd)) { //不支持跨年设置\n                throw \"recommended not support different year times!\";\n            }\n            const monthsNode: HTMLElement = JigsawTime._getDataPickerNode(\"months\", nativeElement);\n            const monthsHeadNode: HTMLElement = JigsawTime._getDataPickerNode(\"months\", nativeElement, true);\n            JigsawTime._searchDateForMonth(this.recommendedBegin, this.recommendedEnd, monthsNode, monthsHeadNode);\n            const daysNode = JigsawTime._getDataPickerNode(\"days\", nativeElement);\n            const daysHeadNode: HTMLElement = JigsawTime._getDataPickerNode(\"days\", nativeElement, true);\n            const daysObj = JigsawTime._parseDay(daysHeadNode.innerText);\n            JigsawTime._searchDateForDay(this.recommendedBegin, this.recommendedEnd, daysNode, daysObj);\n            nativeElement.querySelectorAll(\".jigsaw-time-box .datepicker .expect-day\").forEach(node => {\n\n                // #239 移除已经注册的事件. 点击事件会触发此操作, 造成重复注册事件. 引起tooltips 不能销毁.\n                const removeMouseEnterListeners = this._eventHelper.get(node, 'mouseenter');\n                if (removeMouseEnterListeners instanceof Array) {\n                    removeMouseEnterListeners.forEach(removeMouseenterListener => {\n                        removeMouseenterListener();\n                        this._eventHelper.del(node, 'mouseenter', removeMouseenterListener);\n                    })\n                }\n                const removeMouseLeaveListeners = this._eventHelper.get(node, 'mouseleave');\n                if (removeMouseLeaveListeners instanceof Array) {\n                    removeMouseLeaveListeners.forEach(removeMouseleaveListener => {\n                        removeMouseleaveListener();\n                        this._eventHelper.del(node, 'mouseleave', removeMouseleaveListener);\n                    })\n                }\n\n                const removeMouseEnterListener = this._renderer.listen(node, \"mouseenter\", (event) => {\n                    if (this._tooltipInfo) {\n                        this._tooltipInfo.dispose();\n                        this._tooltipInfo = null;\n                    }\n                    this._tooltipInfo = popService.popup(JigsawSimpleTooltipComponent, {\n                        modal: false, //是否模态\n                        pos: {x: $(event.currentTarget).offset().left, y: $(event.currentTarget).offset().top},\n                        posOffset: { //偏移位置\n                            top: -40,\n                            left: 0\n                        },\n                        posType: PopupPositionType.absolute, //定位类型\n                    }, {\n                        message: this.recommendedLabel || this._translateService.instant('time.recommendedLabel')\n                    });\n                });\n                this._eventHelper.put(node, \"mouseenter\", removeMouseEnterListener);\n\n                const removeMouseleaveListener = this._renderer.listen(node, \"mouseleave\", () => {\n                    if (this._tooltipInfo) {\n                        this._tooltipInfo.dispose();\n                        this._tooltipInfo = null;\n                    }\n                });\n                this._eventHelper.put(node, \"mouseleave\", removeMouseleaveListener);\n            });\n        }\n    }\n\n    private static _searchDateForDay(begin: Time, end: Time, sourceNodes: HTMLElement[], headObj: any) {\n        const startMonth = TimeService.getMonth(begin);\n        const endMonth = TimeService.getMonth(end);\n\n        const startDate = TimeService.getDay(begin);\n        const endDate = TimeService.getDay(end);\n\n        if (TimeService.getYear(begin) == headObj.year &&\n            (startMonth == headObj.month || endMonth == headObj.month)) {\n            sourceNodes.forEach(node => {\n                const text = +node.innerText;\n                if (startMonth != endMonth) {\n                    if (!node.classList.contains(\"old\") && !node.classList.contains(\"new\")) {\n                        if ((startMonth == headObj.month && text >= startDate) ||\n                            (endMonth == headObj.month && text <= endDate)) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == startDate) {\n                            node.classList.add(\"border-left\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    } else if (node.classList.contains(\"new\")) {\n                        if (startMonth == headObj.month && text <= endDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    } else if (node.classList.contains(\"old\")) {\n                        if (endMonth == headObj.month && text >= startDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                    }\n                } else {\n                    if (!node.classList.contains(\"old\") && !node.classList.contains(\"new\")) {\n                        if (text >= startDate && text <= endDate) {\n                            node.classList.add(\"expect-day\");\n                        }\n                        if (text == startDate) {\n                            node.classList.add(\"border-left\");\n                        }\n                        if (text == endDate) {\n                            node.classList.add(\"border-right\");\n                        }\n                    }\n                }\n            })\n        }\n    }\n\n    private static _parseDay(val: string) {\n        const charToNum = {一: 1, 二: 2, 三: 3, 四: 4, 五: 5, 六: 6, 七: 7, 八: 8, 九: 9, 十: 10, 十一: 11, 十二: 12};\n        const enUsToNum = {\n            January: 1,\n            February: 2,\n            March: 3,\n            April: 4,\n            May: 5,\n            June: 6,\n            July: 7,\n            August: 8,\n            September: 9,\n            October: 10,\n            November: 11,\n            December: 12\n        };\n        let result = {};\n        if (val.indexOf(\"月\") == -1) {\n            const valArr = val.split(/\\s+/);\n            result[\"month\"] = +enUsToNum[valArr[0]];\n            result[\"year\"] = +valArr[1];\n        } else {\n            const valArr = val.split(\"月\");\n            result[\"month\"] = charToNum[valArr[0].trim()];\n            result[\"year\"] = +(valArr[1].trim());\n        }\n        return result;\n    }\n\n    private static _parseMonth(val: string) {\n        const enUsSimpleToNum = {\n            Jan: 1,\n            Feb: 2,\n            Mar: 3,\n            Apr: 4,\n            May: 5,\n            Jun: 6,\n            Jul: 7,\n            Aug: 8,\n            Sep: 9,\n            Oct: 10,\n            Nov: 11,\n            Dec: 12\n        };\n        if (val.indexOf(\"月\") == -1) {\n            return enUsSimpleToNum[val];\n        } else {\n            return val.replace(\"月\", '');\n        }\n    }\n\n    private static _searchDateForMonth(begin: Time, end: Time, sourceNodes: any, headNode: any) {\n        const startMonth = TimeService.getMonth(begin);\n        const endMonth = TimeService.getMonth(end);\n        if (TimeService.getYear(begin) == headNode.innerText) {\n            sourceNodes.forEach(node => {\n                if (!node.classList.contains(\"disabled\")) {\n                    const month = JigsawTime._parseMonth(node.innerText);\n                    if (month >= startMonth && month <= endMonth) {\n                        node.classList.add(\"expect-day\");\n                    }\n                    if (month == startMonth) {\n                        node.classList.add(\"border-left\");\n                    }\n                    if (month == endMonth) {\n                        node.classList.add(\"border-right\");\n                    }\n                }\n            })\n        }\n    }\n\n    private static _getDataPickerNode(granularity: string, nativeElement: any, isHead?: boolean) {\n        const selectorBefore: string = \".jigsaw-time-box .datepicker .datepicker-\";\n        const selectorAfter: string = \">table>tbody>tr>\";\n        let nodeName = \"\";\n        if (granularity == \"years\" || granularity == \"months\") {\n            nodeName = \"td>span:not(.disabled)\";\n        } else {\n            nodeName = \"td:not(.disabled)\";\n        }\n        let selector = selectorBefore + granularity + selectorAfter + nodeName;\n        if (isHead) {\n            const theadNode = \">table>thead>tr>th.picker-switch[colspan]\";\n            selector = selectorBefore + granularity + theadNode;\n            return nativeElement.querySelector(selector);\n        }\n        return nativeElement.querySelectorAll(selector);\n    }\n\n\n    private _propagateChange:any = () => {};\n\n    public writeValue(newValue: any): void {\n        if (!newValue || newValue == this._value) {\n            // 此处也会过滤掉newValue是格式化过的，并且与_value相等的情况\n            return;\n        }\n        newValue = TimeService.convertValue(newValue, <TimeGr>this.gr);\n        if (newValue == this._value) {\n            // 此处把newValue格式化后，与_value比较，过滤掉相等的情况\n            return;\n        }\n        if (this._value && this.gr == TimeGr.week) {\n            let newValueYear = TimeService.getWeekYear(<string>newValue);\n            let valueYear = TimeService.getWeekYear(<string>this._value);\n            let newValueWeek = TimeService.getWeekOfYear(<string>newValue);\n            let valueWeek = TimeService.getWeekOfYear(<string>this._value);\n            if (newValueYear == valueYear && newValueWeek == valueWeek) return;\n        }\n        let [value,] = this._handleValue(newValue);\n        this._setDate(value);\n        this._value = newValue;\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tooltip\";\nimport * as i2 from \"@angular/common\";\nvar JigsawTooltipModuleNgFactory = i0.ɵcmf(i1.JigsawTooltipModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [JigsawSimpleTooltipComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i1.JigsawTooltipModule, i1.JigsawTooltipModule, [])]); });\nexport { JigsawTooltipModuleNgFactory as JigsawTooltipModuleNgFactory };\nvar styles_JigsawTooltipDialog = [];\nvar RenderType_JigsawTooltipDialog = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTooltipDialog, data: { \"animation\": [{ type: 7, name: \"bubbleIn\", definitions: [{ type: 0, name: \"in\", styles: { type: 6, styles: { opacity: 1, transform: \"scale(1)\" }, offset: null }, options: undefined }, { type: 1, expr: \"void => *\", animation: [{ type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 0, transform: \"scale(0)\", offset: 0 }, offset: null }, { type: 6, styles: { opacity: 1, transform: \"scale(1)\", offset: 1 }, offset: null }] }, timings: \"0.2s ease-in-out\" }], options: null }, { type: 1, expr: \"* => void\", animation: [{ type: 4, styles: { type: 5, steps: [{ type: 6, styles: { opacity: 1, transform: \"scale(1)\", offset: 0 }, offset: null }, { type: 6, styles: { opacity: 0, transform: \"scale(0)\", offset: 1 }, offset: null }] }, timings: \"0.2s ease-in-out\" }], options: null }], options: {} }] } });\nexport { RenderType_JigsawTooltipDialog as RenderType_JigsawTooltipDialog };\nexport function View_JigsawTooltipDialog_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"jigsaw-tooltip\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 0, \"div\", [[\"class\", \"jigsaw-tooltip-arrow\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], null, null); }\nexport function View_JigsawTooltipDialog_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-tooltip-dialog\", [], null, null, null, View_JigsawTooltipDialog_0, RenderType_JigsawTooltipDialog)), i0.ɵdid(1, 1097728, null, 0, i1.JigsawTooltipDialog, [i0.ElementRef, i0.Renderer2], null, null)], null, null); }\nvar JigsawTooltipDialogNgFactory = i0.ɵccf(\"jigsaw-tooltip-dialog, j-tooltip-dialog\", i1.JigsawTooltipDialog, View_JigsawTooltipDialog_Host_0, {}, { answer: \"answer\" }, [\"*\"]);\nexport { JigsawTooltipDialogNgFactory as JigsawTooltipDialogNgFactory };\nvar styles_JigsawSimpleTooltipComponent = [];\nvar RenderType_JigsawSimpleTooltipComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawSimpleTooltipComponent, data: {} });\nexport { RenderType_JigsawSimpleTooltipComponent as RenderType_JigsawSimpleTooltipComponent };\nexport function View_JigsawSimpleTooltipComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { tooltip: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"jigsaw-tooltip-dialog\", [], null, null, null, View_JigsawTooltipDialog_0, RenderType_JigsawTooltipDialog)), i0.ɵdid(2, 1097728, [[1, 4]], 0, i1.JigsawTooltipDialog, [i0.ElementRef, i0.Renderer2], null, null), (_l()(), i0.ɵeld(3, 0, null, 0, 0, \"span\", [], [[8, \"innerHTML\", 1]], null, null, null, null))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.tooltipMessage; _ck(_v, 3, 0, currVal_0); }); }\nexport function View_JigsawSimpleTooltipComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_JigsawSimpleTooltipComponent_0, RenderType_JigsawSimpleTooltipComponent)), i0.ɵdid(1, 49152, null, 0, i1.JigsawSimpleTooltipComponent, [], null, null)], null, null); }\nvar JigsawSimpleTooltipComponentNgFactory = i0.ɵccf(\"ng-component\", i1.JigsawSimpleTooltipComponent, View_JigsawSimpleTooltipComponent_Host_0, {}, { answer: \"answer\" }, []);\nexport { JigsawSimpleTooltipComponentNgFactory as JigsawSimpleTooltipComponentNgFactory };\n","<div class=\"jigsaw-tooltip\">\n    <div class=\"jigsaw-tooltip-arrow\"></div>\n    <ng-content></ng-content>\n</div>\n","<jigsaw-tooltip-dialog><span [innerHtml]=\"tooltipMessage\"></span></jigsaw-tooltip-dialog>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./time\";\nimport * as i4 from \"../../common/service/popup.service\";\nimport * as i5 from \"@ngx-translate/core\";\nvar styles_JigsawTime = [];\nvar RenderType_JigsawTime = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTime, data: {} });\nexport { RenderType_JigsawTime as RenderType_JigsawTime };\nfunction View_JigsawTime_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [], [[2, \"active\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$changeGranularity(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(1, null, [\" \", \" \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_v.context.$implicit.value == _co._$gr); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.context.$implicit.label; _ck(_v, 1, 0, currVal_1); }); }\nfunction View_JigsawTime_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"jigsaw-time-granularity\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTime_2)), i0.ɵdid(2, 278528, null, 0, i1.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.grItems; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_JigsawTime_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"div\", [[\"class\", \"jigsaw-time\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTime_1)), i0.ɵdid(2, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 0, \"div\", [[\"class\", \"jigsaw-time-box\"]], null, null, null, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.grItems && _co.grItems.length); _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_JigsawTime_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-time\", [], [[4, \"width\", null], [2, \"jigsaw-time-host\", null], [2, \"jigsaw-time-error\", null]], null, null, View_JigsawTime_0, RenderType_JigsawTime)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawTime]), i0.ɵdid(2, 4440064, null, 0, i3.JigsawTime, [i0.ElementRef, i0.Renderer2, i4.PopupService, i5.TranslateService], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar JigsawTimeNgFactory = i0.ɵccf(\"jigsaw-time, j-time\", i3.JigsawTime, View_JigsawTime_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", valid: \"valid\", gr: \"gr\", date: \"date\", limitEnd: \"limitEnd\", limitStart: \"limitStart\", refreshInterval: \"refreshInterval\", weekStart: \"weekStart\", weekDayStart: \"weekDayStart\", grItems: \"grItems\", recommendedBegin: \"recommendedBegin\", recommendedEnd: \"recommendedEnd\", recommendedLabel: \"recommendedLabel\" }, { grChange: \"grChange\", dateChange: \"dateChange\" }, []);\nexport { JigsawTimeNgFactory as JigsawTimeNgFactory };\n","<div class=\"jigsaw-time\">\n    <div *ngIf=\"grItems && grItems.length\" class=\"jigsaw-time-granularity\">\n    <span *ngFor=\"let item of grItems\" (click)=\"_$changeGranularity(item)\" [class.active]=\"item.value==_$gr\">\n        {{item.label}}\n    </span>\n    </div>\n    <div class=\"jigsaw-time-box\">\n\n    </div>\n</div>\n\n\n"],"sourceRoot":""}