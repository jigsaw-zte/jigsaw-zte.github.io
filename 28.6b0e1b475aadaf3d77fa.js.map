{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/switch/switch.ts","webpack:///./src/jigsaw/pc-components/switch/switch.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/list-and-tile/group-common.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/list-and-tile/group-common.ts","webpack:///./src/jigsaw/pc-components/switch/switch.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/switch/switch.html","webpack:///./src/app/demo/pc/button-bar/basic/demo.component.ngfactory.js.pre-build-optimizer.js","webpack:///./src/app/demo/pc/button-bar/basic/demo.component.html","webpack:///./src/app/demo/pc/button-bar/basic/demo.module.ts","webpack:///./src/app/demo/pc/button-bar/demo-set.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/switch/index.ts","webpack:///./src/jigsaw/pc-components/input/input.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/input/input.ts"],"names":["__webpack_require__","d","__webpack_exports__","JigsawSwitch","_angular_core__WEBPACK_IMPORTED_MODULE_0__","this","valid","size","_checked","checkedChange","change","_disabled","_propagateChange","Object","defineProperty","prototype","get","set","value","writeValue","enumerable","configurable","_setSwitchClass","_$switchClick","disabled","checked","emit","_$switchClass","jigsaw-switch","jigsaw-switch-small","jigsaw-switch-checked","jigsaw-switch-disabled","_setInnerValue","_$content","onLabel","offLabel","ngOnInit","registerOnChange","fn","registerOnTouched","AbstractJigsawGroupComponent","AbstractJigsawOptionComponent","tslib__WEBPACK_IMPORTED_MODULE_0__","_common_common__WEBPACK_IMPORTED_MODULE_1__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","_common_core_data_array_collection__WEBPACK_IMPORTED_MODULE_4__","_super","_this","apply","arguments","_trackItemBy","autoRemoveInvalidValue","_selectedItems","selectedItemsChange","split","newValue","_removeInvalidSelectedItems","_items","length","needRefresh","concat","forEach","selectedItem","find","item","compareWithKeyProperty","splice","selectedItems","indexOf","_updateSelectItems","itemValue","selected","multipleSelect","push","selectedItemValue","refresh","_updateSelectItemsForForm","update","_setItemState","items","callLater","hasSelected","_subscribeItemSelectedChange","observers","subscribe","call","_removeRefreshCallback","onRefresh","ngAfterContentInit","_removeItemsChanges","changes","ngOnDestroy","unsubscribe","_setSelectedItems","initialized","selectedChange","RenderType_JigsawSwitch","View_JigsawSwitch_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","encapsulation","styles","data","_l","_v","en","$event","ad","component","ngClass","_ck","RenderType_ButtonBarBasicDemoComponent","core","View_ButtonBarBasicDemoComponent_0","demo_description_ngfactory","demo_description","content","summary","_co","multiple","resetSelection","switch_ngfactory","fesm5_forms","p0_0","switch_switch","selectedCity","basicSelectChange","button_bar_ngfactory","button_bar","selectedCity2","basicSelectChange2","colorType","radio_lite_ngfactory","radio_lite","valueChange","selectedCity3","selectedCity4","height","description","cities","cities2","colorTypeList","selectedCityStr","selectedCityStr2","View_ButtonBarBasicDemoComponent_Host_0","demo_component","ButtonBarBasicDemoComponentNgFactory","ButtonBarBasicDemoModule","ButtonBarDemoModuleNgFactory","demo_set_module","router_ngfactory","common","router","input","tile","radio_radio","markdown","pc_components_switch","path","JigsawSwitchModule","JigsawInput","JigsawInputModule","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","clearable","password","_focusEmitter","_blurEmitter","_value","_placeholder","_focused","blurOnClear","isUndefined","toString","txt","focus","_inputElement","nativeElement","select","_$clearValue","_$handleFocus","event","_$handleBlur","_$stopPropagation","preventDefault","stopPropagation"],"mappings":"8FAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,QASAG,EAAA,oBAAAA,IAcWE,KAAAC,OAAiB,EAuBjBD,KAAAE,KAAe,UAEdF,KAAAG,UAAoB,EAgBXH,KAAAI,cAAgB,IAAIL,EAAA,EAKpBC,KAAAK,OAASL,KAAKI,cAEvBJ,KAAAM,WAAqB,EAuDrBN,KAAAO,iBAAwB,aAcpC,OAtFIC,OAAAC,eACWX,EAAAY,UAAA,UAAO,CCvBdC,IDsBJ,WACiC,OAAOX,KAAKG,UCtBzCS,IDuBJ,SAAmBC,GACfb,KAAKc,WAAWD,GAChBb,KAAKO,iBAAiBM,ICrBtBE,YAAY,EACZC,cAAc,IDuClBR,OAAAC,eACWX,EAAAY,UAAA,WAAQ,CChCfC,ID+BJ,WACiC,OAAOX,KAAKM,WC/BzCM,IDgCJ,SAAoBC,GAChBb,KAAKM,UAAYO,EACjBb,KAAKiB,mBC9BLF,YAAY,EACZC,cAAc,IDmCXlB,EAAAY,UAAAQ,cAAP,WACQlB,KAAKmB,WACLnB,KAAKoB,SAAWpB,KAAKoB,QAGrBpB,KAAKI,cAAciB,KAAKrB,KAAKoB,SAC7BpB,KAAKO,iBAAiBP,KAAKoB,WAY3BtB,EAAAY,UAAAO,gBAAR,WACIjB,KAAKsB,cAAgB,CACjBC,gBAAiB,OACjBC,sBAAqC,UAAdxB,KAAKE,KAC5BuB,wBAAyBzB,KAAKoB,QAC9BM,yBAA0B1B,KAAKmB,WAO/BrB,EAAAY,UAAAiB,eAAR,WACI3B,KAAK4B,UAAY5B,KAAKoB,QAAUpB,KAAK6B,QAAU7B,KAAK8B,UAGjDhC,EAAAY,UAAAqB,SAAP,WACI/B,KAAKiB,kBACLjB,KAAK2B,kBAKF7B,EAAAY,UAAAI,WAAP,SAAkBD,GACdb,KAAKG,WAAaU,EAClBb,KAAKiB,kBACLjB,KAAK2B,kBAGF7B,EAAAY,UAAAsB,iBAAP,SAAwBC,GACpBjC,KAAKO,iBAAmB0B,GAGrBnC,EAAAY,UAAAwB,kBAAP,SAAyBD,KAE7BnC,EAnIA,sCETAH,EAAAC,EAAAC,EAAA,sBAAAsC,IAAAxC,EAAAC,EAAAC,EAAA,sBAAAuC,IAAA,IAAAC,EAAA1C,EAAA,QAAA2C,EAAA3C,EAAA,QAAA4C,EAAA5C,EAAA,QAAA6C,EAAA7C,EAAA,QAAA8C,EAAA9C,EAAA,QCsBAwC,EAAA,SAAAO,GAAA,SAAAP,IAAA,IAAAQ,EAAA,OAAAD,KAAAE,MAAA5C,KAAA6C,YAAA7C,KDCQ,OCKG2C,EAAA1C,OAAiB,EAGhB0C,EAAAG,aAAyB,GAcjBH,EAAAI,wBAAkC,EAExCJ,EAAAK,eAAiB,IAAIP,EAAA,EAoCdE,EAAAM,oBAAsB,IAAIV,EAAA,EA0GjCI,EAAApC,iBAAwB,aDtKvBoC,ECoMf,OArMkDN,EAAA,EAAAF,EAAAO,GAW9ClC,OAAAC,eACW0B,EAAAzB,UAAA,cAAW,CDRlBC,ICOJ,WAEI,OAAOX,KAAK8C,cDNZlC,ICSJ,SAAuBC,GACnBb,KAAK8C,aAAgC,iBAAVjC,EAAqBA,EAAMqC,MAAM,YAAcrC,GDP1EE,YAAY,EACZC,cAAc,ICgBlBR,OAAAC,eACW0B,EAAAzB,UAAA,gBAAa,CDdpBC,ICaJ,WAEI,OAAOX,KAAKgD,gBDZZpC,ICeJ,SAAyBuC,GACrBnD,KAAKc,WAAWqC,GACZnD,KAAKgD,iBAAmBG,GAG5BnD,KAAKO,iBAAiB4C,IDbtBpC,YAAY,EACZC,cAAc,ICkBXmB,EAAAzB,UAAA0C,4BAAP,eAAAT,EAAA3C,KACI,GAAKA,KAAKqD,QAAWrD,KAAKgD,gBAAmBhD,KAAKgD,eAAeM,OAAjE,CAGA,IAAIC,GAAc,EACEvD,KAAKgD,eAAeQ,SAC1BC,QAAQ,SAAAC,GACdf,EAAKU,OAAOM,KAAK,SAAAC,GAAQ,OAAApB,EAAA,EAAYqB,uBAAuBD,EAAK/C,MAAO6C,EAAcf,EAAKG,kBAG/FH,EAAKK,eAAec,OAAOnB,EAAKoB,cAAcC,QAAQN,GAAe,GACrEH,GAAc,KAEfA,GACCvD,KAAKiD,oBAAoB5B,KAAKrB,KAAK+D,iBASjC5B,EAAAzB,UAAAuD,mBAAV,SAA6BC,EAAWC,GAAxC,IAAAxB,EAAA3C,KACQA,KAAKoE,eACDD,EACAnE,KAAK+D,cAAcM,KAAKH,GAExBlE,KAAKgD,eAAeS,QAAQ,SAAAa,GACpB9B,EAAA,EAAYqB,uBAAuBS,EAAmBJ,EAAWvB,EAAKG,eACtEH,EAAKK,eAAec,OAAOnB,EAAKoB,cAAcC,QAAQM,GAAoB,MAMtFtE,KAAKgD,eAAec,OAAO,EAAG9D,KAAKgD,eAAeM,QAClDtD,KAAK+D,cAAcM,KAAKH,IAE5BlE,KAAKgD,eAAeuB,UACpBvE,KAAKiD,oBAAoB5B,KAAKrB,KAAK+D,gBAI7B5B,EAAAzB,UAAA8D,0BAAV,SAAoCN,EAAWC,GAC3CnE,KAAKiE,mBAAmBC,EAAWC,GACnCnE,KAAKO,iBAAiBP,KAAK+D,gBAGxB5B,EAAAzB,UAAA+D,OAAP,SAAcP,EAAWC,GACrBnE,KAAKwE,0BAA0BN,EAAWC,IAIpChC,EAAAzB,UAAAgE,cAAV,SAAwBC,GAAxB,IAAAhC,EAAA3C,KACUA,KAAK+D,yBAAyBtB,EAAA,GAAqBkC,EAAMrB,QAG/DtD,KAAK4E,UAAU,WACXD,EAAMlB,QAAQ,SAAAG,GACV,IAAIiB,GAAc,EAClBlC,EAAKK,eAAeS,QAAQ,SAAAC,GACpBlB,EAAA,EAAYqB,uBAAuBD,EAAK/C,MAAO6C,EAAcf,EAAKG,gBAClE+B,GAAc,KAGtBjB,EAAKO,SAAWU,OAKpB1C,EAAAzB,UAAAoE,6BAAR,SAAqCH,GAArC,IAAAhC,EAAA3C,KACI2E,EAAMlB,QAAQ,SAAAG,GAEVA,EAAKvD,OAAO0E,UAAUzB,OAAS,EAC/BM,EAAKvD,OAAO2E,UAAU,WACdrC,EAAKyB,gBACLR,EAAKO,UAAYP,EAAKO,SACtBxB,EAAK6B,0BAA0BZ,EAAK/C,MAAO+C,EAAKO,WAE3CP,EAAKO,WACNP,EAAKO,UAAW,EAChBxB,EAAK6B,0BAA0BZ,EAAK/C,MAAO+C,EAAKO,gBAOpEhC,EAAAzB,UAAAqB,SAAA,eAAAY,EAAA3C,KACI0C,EAAAhC,UAAMqB,SAAQkD,KAAAjF,MACVA,KAAKkF,wBACLlF,KAAKkF,yBAETlF,KAAKkF,uBAAyBlF,KAAKgD,eAAemC,UAAU,WAAM,OAAAxC,EAAK+B,cAAc/B,EAAKU,WAG9FlB,EAAAzB,UAAA0E,mBAAA,eAAAzC,EAAA3C,KACIA,KAAK0E,cAAc1E,KAAKqD,QACxBrD,KAAK8E,6BAA6B9E,KAAKqD,QACvCrD,KAAKqF,oBAAsBrF,KAAKqD,OAAOiC,QAAQN,UAAU,SAAAL,GAErDhC,EAAK+B,cAAcC,GACnBhC,EAAKmC,6BAA6BH,KAElC3E,KAAKqD,OAAOC,QAAUtD,KAAK+C,wBAE3B/C,KAAKoD,+BAIbjB,EAAAzB,UAAA6E,YAAA,WACI7C,EAAAhC,UAAM6E,YAAWN,KAAAjF,MACbA,KAAKkF,wBACLlF,KAAKkF,yBAELlF,KAAKqD,QACLrD,KAAKqD,OAAOI,QAAQ,SAAAG,GAAQ,OAAAA,EAAKvD,OAAOmF,gBAExCxF,KAAKqF,qBACLrF,KAAKqF,oBAAoBG,eAOvBrD,EAAAzB,UAAA+E,kBAAV,SAA4BtC,GAA5B,IAAAR,EAAA3C,KACQA,KAAKgD,iBAAmBG,IAG5BA,EAAWA,aAAoBV,EAAA,EAAkBU,EAAW,IAAIV,EAAA,EAAgBU,GAEhFnD,KAAKgD,eAAiBG,EAClBnD,KAAK0F,aACL1F,KAAK0E,cAAc1E,KAAKqD,QAGxBrD,KAAKkF,wBACLlF,KAAKkF,yBAETlF,KAAKkF,uBAAyBlF,KAAKgD,eAAemC,UAAU,WAAM,OAAAxC,EAAK+B,cAAc/B,EAAKU,YAGvFlB,EAAAzB,UAAAI,WAAP,SAAkBqC,GACdnD,KAAKyF,kBAAkBtC,IAGpBhB,EAAAzB,UAAAsB,iBAAP,SAAwBC,GACpBjC,KAAKO,iBAAmB0B,GAGrBE,EAAAzB,UAAAwB,kBAAP,SAAyBD,KAE7BE,EArMA,CAAkDG,EAAA,GAuMlDF,EAAA,SAAAM,GAAA,SAAAN,IAAA,IAAAO,EAAA,OAAAD,KAAAE,MAAA5C,KAAA6C,YAAA7C,KDhBQ,OCmBY2C,EAAAxB,UAAoB,EAG7BwB,EAAAgD,eAAiB,IAAIpD,EAAA,EAGrBI,EAAAwB,UAAoB,EAGpBxB,EAAAtC,OAAS,IAAIkC,EAAA,ED5BTI,ECgCf,OAhBmDN,EAAA,EAAAD,EAAAM,GAgBnDN,EAhBA,CAAmDE,EAAA,sCC7NnD3C,EAAAC,EAAAC,EAAA,sBAAA+F,IAAAjG,EAAAC,EAAAC,EAAA,sBAAAgG,IAAA,IAAA9F,EAAAJ,EAAA,QAAAmG,EAAAnG,EAAA,QAWIiG,GAXJjG,EAAA,QAAAA,EAAA,QAW8BI,EAAA,GAAQ,CAAEgG,cAAe,EAAGC,OADhC,GAC6DC,KAAM,MAEtF,SAASJ,EAAoBK,GAAM,OAAOnG,EAAA,GAAQ,EAAG,ECb5DmG,MAAAnG,EAAA,2DAAAoG,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAA+B,UAAAF,IDevBE,GADoC,ICd5CH,EAAyDI,UDcjCrF,iBACFoF,GCftBA,GAAA,YAAAvG,EAAA,YAAA+F,EAAA,EAAAA,EAAA,GAAA/F,EAAA,EAAAA,EAAA,EAAAA,EAAA,EAAAA,EAAA,IAAAA,EAAA,mBAAA+F,EAAA,GAAAA,EAAA,IAAAU,QAAA,sBACIN,MAAAnG,EAAA,uFAAiCmG,MAAAnG,EAAA,qBAAa,SAAA0G,EAAAN,GADlDM,EAAAN,EAAA,IACkDA,EAAAI,UADpBjF,gBAAA,SAAAmF,EAAAN,GACOM,EAAAN,EAAA,IADPA,EAAAI,UACO3E,0NCiBjC8E,EAAyCC,EAAA,GAAQ,CAAEZ,cAAe,EAAGC,OADhC,GAC4EC,KAAM,KAEpH,SAASW,EAAmCV,GAAM,OAAOS,EAAA,GAAQ,EAAG,ECnB3ET,MAAAS,EAAA,+DAAAE,EAAA,EAAAA,EAAA,IAAAF,EAAA,mBAAAG,EAAA,MAAAC,QAAA,cAAAC,QAAA,sBAKAd,MAAAS,EAAA,mFACIT,MAAAS,EAAA,uDAAIT,MAAAS,EAAA,6BACJT,MAAAS,EAAA,6MAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAW,EAAAd,EAA6FI,UAA7F,MAAe,kBAAAH,IDcXE,GADwC,KAA3BW,EAAIC,SAAWb,IACdC,GCd+C,WAAAF,IDiB7DE,GADqC,IAAzBW,EAAIE,kBACFb,GCjBlBA,GAAAc,EAAA,EAAAA,EAAA,IAAAT,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAC,EAAA,IAAAZ,EAAA,mBAAAY,EAAA,MAAA1F,QAAA,cAAAC,SAAA,eAAAV,QAAA,gBAAAhB,cAAA,gBAAAC,OAAA,YAEA6F,MAAAS,EAAA,oFACIT,MAAAS,EAAA,uDAAIT,MAAAS,EAAA,2CACJT,MAAAS,EAAA,iPAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAW,EAAAd,EACqEI,UADrE,MAAmB,wBAAAH,IDgBnBE,GAD4C,KAA/BW,EAAIO,aAAenB,IAClBC,GCfK,wBAAAF,IDkBnBE,GAD8C,IAAlCW,EAAIQ,kBAAkBpB,IACpBC,GCnBdA,GAAAoB,EAAA,EAAAA,EAAA,IAAAf,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAK,EAAA,IAAAhB,EAAA,oBAAAgB,EAAA,MAAA1B,KAAA,WAAA7B,eAAA,qBAAAL,cAAA,sBAAAd,oBAAA,yBAGAiD,MAAAS,EAAA,0EAAmBT,MAAAS,EAAA,gEAEvBT,MAAAS,EAAA,qFACIT,MAAAS,EAAA,wDAAIT,MAAAS,EAAA,iDACJT,MAAAS,EAAA,iPAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,EAAAW,EAAAd,EACsEI,UADtE,MAAmB,wBAAAH,IDenBE,GAD6C,KAAhCW,EAAIW,cAAgBvB,IACnBC,GCdK,wBAAAF,IDiBnBE,GAD+C,IAAnCW,EAAIY,mBAAmBxB,IACrBC,GClBdA,GAAAoB,EAAA,EAAAA,EAAA,IAAAf,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAK,EAAA,IAAAhB,EAAA,oBAAAgB,EAAA,MAAA1B,KAAA,WAAA7B,eAAA,qBAAAL,cAAA,sBAAAd,oBAAA,yBAGAiD,MAAAS,EAAA,0EAAmBT,MAAAS,EAAA,gEAGvBT,MAAAS,EAAA,qFACIT,MAAAS,EAAA,wDAAIT,MAAAS,EAAA,4BACJT,MAAAS,EAAA,2IAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAA2C,gBAAAF,IDa3CE,GADyC,KCZzCH,EAAiEI,UDYhDuB,UAAYzB,IACfC,GCbdA,GAAAyB,EAAA,EAAAA,EAAA,IAAApB,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAU,EAAA,IAAArB,EAAA,oBAAAqB,EAAA,MAAA/B,KAAA,WAAApF,MAAA,cAAAoH,YAAA,iBACqB/B,MAAAS,EAAA,wDACrBT,MAAAS,EAAA,iPAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAoC,wBAAAF,IDcpCE,GAD6C,KCb7CH,EAC+CI,UDY9B2B,cAAgB7B,IACnBC,GCddA,GAAAoB,EAAA,EAAAA,EAAA,IAAAf,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAK,EAAA,IAAAhB,EAAA,oBAAAgB,EAAA,MAAA1B,KAAA,WAAA7B,eAAA,qBAAAL,cAAA,oBAAA+D,UAAA,kBAAA7E,oBAAA,yBAKJiD,MAAAS,EAAA,qFACIT,MAAAS,EAAA,wDAAIT,MAAAS,EAAA,yBACJT,MAAAS,EAAA,gQAAAR,EAAAC,EAAAC,GAAA,IAAAC,GAAA,QAAoC,wBAAAF,IDUpCE,GAD6C,KCT7CH,EAC+CI,UDQ9B4B,cAAgB9B,IACnBC,GCVdA,GAAAoB,EAAA,EAAAA,EAAA,IAAAf,EAAA,aAAAU,EAAA,WAAAC,GAAA,OAAAA,IAAA,CAAAK,EAAA,IAAAhB,EAAA,oBAAAgB,EAAA,MAAAS,OAAA,aAAAnC,KAAA,WAAA7B,eAAA,qBAAAL,cAAA,sBAAAd,oBAAA,yBAC+C,SAAAwD,EAAAN,GAAA,IAAAc,EAAAd,EAAAI,UApCvDE,EAAAN,EAAA,IAA6Cc,EAAuBoB,YAA3CpB,EAAmBD,SAOxCP,EAAAN,EAAA,IAAsC,eAAa,eAApCc,EAAsBC,UAIjCT,EAAAN,EAAA,KAAoDc,EAAeqB,OAACrB,EAA2BC,SAA5ED,EAAgCO,cAOnDf,EAAAN,EAAA,KAAqDc,EAAgBsB,QAACtB,EAA2BC,SAA9ED,EAAiCW,eAQpDnB,EAAAN,EAAA,KAAoBc,EAAsBuB,cAACvB,EAAqBa,WAEhErB,EAAAN,EAAA,KAAmBc,EAAgBsB,QAChBtB,EAA2BC,SADVD,EAAiCiB,cAACjB,EAAuBa,WAO7FrB,EAAAN,EAAA,KAAsE,KAAnDc,EAAgBsB,QAChBtB,EAA2BC,SADVD,EAAiCkB,gBAAA,SAAA1B,EAAAN,GAAA,IAAAc,EAAAd,EAAAI,UA5BzEE,EAAAN,EAAA,QAAAQ,EAAA,GAAAR,EAAA,GAAAlG,OAIIwG,EAAAN,EAAA,oBAAAQ,EAAA,GAAAR,EAAA,IAAA2B,UAAA,YAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAA,UAAAnB,EAAA,GAAAR,EAAA,IAAA2B,WAAA,WAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAAnB,EAAA,GAAAR,EAAA,IAAAiC,QAGmB3B,EAAAN,EAAA,KAAAc,EAAAwB,iBAInBhC,EAAAN,EAAA,oBAAAQ,EAAA,GAAAR,EAAA,IAAA2B,UAAA,YAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAA,UAAAnB,EAAA,GAAAR,EAAA,IAAA2B,WAAA,WAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAAnB,EAAA,GAAAR,EAAA,IAAAiC,QAGmB3B,EAAAN,EAAA,KAAAc,EAAAyB,kBAKnBjC,EAAAN,EAAA,SAAAQ,EAAA,GAAAR,EAAA,IAAAlG,OAEAwG,EAAAN,EAAA,oBAAAQ,EAAA,GAAAR,EAAA,IAAA2B,UAAA,YAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAA,UAAAnB,EAAA,GAAAR,EAAA,IAAA2B,WAAA,WAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAAnB,EAAA,GAAAR,EAAA,IAAAiC,QAOA3B,EAAAN,EAAA,oBAAAQ,EAAA,GAAAR,EAAA,IAAA2B,UAAA,YAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAA,UAAAnB,EAAA,GAAAR,EAAA,IAAA2B,WAAA,WAAAnB,EAAA,GAAAR,EAAA,IAAA2B,UAAAnB,EAAA,GAAAR,EAAA,IAAAiC,UDYD,SAASO,EAAwCzC,GAAM,OAAOS,EAAA,GAAQ,EAAG,EAAET,MAAQS,EAAA,GAAQ,EAAG,EAAG,KAAM,KAAM,EAAG,eAAgB,GAAI,KAAM,KAAM,KAAMC,EAAoCF,IAA0CC,EAAA,GAAQ,EAAG,QAAS,KAAM,EAAGiC,EAAA,EAAiC,GAAI,KAAM,OAAQ,KAAM,MACjU,IAAIC,EAAuClC,EAAA,GAAQ,eAAgBiC,EAAA,EAAiCD,EAAyC,GAAI,GAAI,wFE1CrJG,EAAA,WAMA,OANA,gBCPAnJ,EAAAC,EAAAC,EAAA,iDAAAkJ,IAuBA,IAAIA,EAA+BpC,EAAA,GAAQqC,EAAA,EAAwB,GAAI,SAAU9C,GAAM,OAAOS,EAAA,GAAQ,CAACA,EAAA,GAAQ,IAAKA,EAAA,EAA6BA,EAAA,GAAqC,CAAC,CAAC,EAAG,CAACsC,EAAA,EAA+CJ,IAA2C,CAAC,EAAGlC,EAAA,GAA8BA,EAAA,IAAkBA,EAAA,GAAQ,KAAMuC,EAAA,EAAmBA,EAAA,EAAyB,CAACvC,EAAA,EAAc,CAAC,EAAGuC,EAAA,KAAyCvC,EAAA,GAAQ,KAAMU,EAAA,EAAoCA,EAAA,EAAoC,IAAKV,EAAA,GAAQ,WAAYwC,EAAA,EAAiBA,EAAA,EAAiB,CAAC,CAAC,EAAGA,EAAA,GAAuC,CAAC,EAAGA,EAAA,KAAcxC,EAAA,GAAQ,WAAYuC,EAAA,EAAiBA,EAAA,EAAiB,IAAKvC,EAAA,GAAQ,WAAYU,EAAA,EAAoCA,EAAA,EAAoC,IAAKV,EAAA,GAAQ,WAAYU,EAAA,EAAgBA,EAAA,EAAgB,IAAKV,EAAA,GAAQ,WAAYyC,EAAA,EAAsBA,EAAA,EAAsB,IAAKzC,EAAA,GAAQ,WAAY0C,EAAA,EAA2BA,EAAA,EAA2B,IAAK1C,EAAA,GAAQ,WAAYgB,EAAA,EAA0BA,EAAA,EAA0B,IAAKhB,EAAA,GAAQ,WAAY2C,EAAA,EAAuBA,EAAA,EAAuB,IAAK3C,EAAA,GAAQ,WAAYqB,EAAA,EAA2BA,EAAA,EAA2B,IAAKrB,EAAA,GAAQ,WAAY4C,EAAA,EAA0BA,EAAA,EAA0B,IAAK5C,EAAA,GAAQ,WAAYG,EAAA,EAAiCA,EAAA,EAAiC,IAAKH,EAAA,GAAQ,WAAY6C,EAAA,EAAwBA,EAAA,EAAwB,IAAK7C,EAAA,GAAQ,WAAYmC,EAA8BA,EAA8B,IAAKnC,EAAA,GAAQ,WAAYqC,EAAA,EAAwBA,EAAA,EAAwB,IAAKrC,EAAA,GAAQ,KAAMwC,EAAA,EAAW,WAAc,MAAO,CAAC,CAAC,CAAEM,KAAM,QAASlD,UAAWqC,EAAA,MAAwC,6CCf9tDjJ,EAAAC,EAAAC,EAAA,sBAAA6J,IAAA/J,EAAA,YAAA+J,EAAA,WAMkC,OANlC,mDCRA/J,EAAAC,EAAAC,EAAA,sBAAA8J,IAAAhK,EAAAC,EAAAC,EAAA,sBAAA+J,IAAA,IAAAvH,EAAA1C,EAAA,QAAAkK,EAAAlK,EAAA,QAAAmK,EAAAnK,EAAA,QAAA6C,EAAA7C,EAAA,QCiBAgK,EAAA,SAAAjH,GAAA,SAAAiH,IAAA,IAAAhH,EAAA,OAAAD,KAAAE,MAAA5C,KAAA6C,YAAA7C,KDgDQ,OCzBY2C,EAAAoH,WAAqB,EAOrBpH,EAAAxB,UAAoB,EAQpBwB,EAAA1C,OAAiB,EAQjB0C,EAAAqH,UAAoB,EAQ5BrH,EAAAsH,cAA0C,IAAIJ,EAAA,EAG9ClH,EAAAuH,aAAyC,IAAIL,EAAA,EAE7ClH,EAAApC,iBAAwB,aAiBxBoC,EAAAwH,OAAiB,GA2BlBxH,EAAAsF,YAAoC,IAAI4B,EAAA,EAEvClH,EAAAyH,aAAuB,GAiDvBzH,EAAA0H,UAAoB,EA4BrB1H,EAAA2H,aAAuB,EDtInB3H,EC+Jf,OA/LiCN,EAAA,EAAAsH,EAAAjH,GAgC7BlC,OAAAC,eACWkJ,EAAAjJ,UAAA,OAAI,CDEXC,ICHJ,WAEI,OAAOX,KAAKgK,SAAW,WAAa,QDIpCjJ,YAAY,EACZC,cAAc,ICOX2I,EAAAjJ,UAAAI,WAAP,SAAkBD,GACV2B,EAAA,EAAY+H,YAAY1J,KAG5Bb,KAAKmK,OAAStJ,EAAM2J,aAGjBb,EAAAjJ,UAAAsB,iBAAP,SAAwBC,GACpBjC,KAAKO,iBAAmB0B,GAGrB0H,EAAAjJ,UAAAwB,kBAAP,SAAyBD,KAUzBzB,OAAAC,eACWkJ,EAAAjJ,UAAA,QAAK,CDVZC,ICSJ,WAEI,OAAOX,KAAKmK,QDRZvJ,ICWJ,SAAiBuC,GACTX,EAAA,EAAY+H,YAAYpH,IAAanD,KAAKmK,SAAWhH,IAGzDnD,KAAKmK,OAAShH,EACdnD,KAAKiI,YAAY5G,KAAKrB,KAAKmK,QAC3BnK,KAAKO,iBAAiBP,KAAKmK,UDT3BpJ,YAAY,EACZC,cAAc,IC0BlBR,OAAAC,eACWkJ,EAAAjJ,UAAA,cAAW,CDxBlBC,IC4BJ,WACI,OAAOX,KAAKoK,cDrBZxJ,ICeJ,SACuB6J,GACnBzK,KAAKoK,aAAeK,GDdpB1J,YAAY,EACZC,cAAc,IC8BX2I,EAAAjJ,UAAAgK,MAAP,WACI1K,KAAKqK,UAAW,EAChBrK,KAAK2K,cAAcC,cAAcF,SAS9Bf,EAAAjJ,UAAAmK,OAAP,WACI7K,KAAK2K,cAAcC,cAAcC,UAM9BlB,EAAAjJ,UAAAoK,aAAP,WACI9K,KAAKa,MAAQ,GACbb,KAAK0K,SAUTlK,OAAAC,eAAWkJ,EAAAjJ,UAAA,UAAO,CD1BdC,IC0BJ,WACI,OAAOX,KAAKqK,UDxBZtJ,YAAY,EACZC,cAAc,IC6BX2I,EAAAjJ,UAAAqK,cAAP,SAAqBC,GACjBhL,KAAKqK,UAAW,EAChBrK,KAAKiK,cAAc5I,KAAK2J,IAiBrBrB,EAAAjJ,UAAAuK,aAAP,SAAoBD,GAApB,IAAArI,EAAA3C,KACIA,KAAKqK,UAAW,EACZrK,KAAKsK,YACLtK,KAAKkK,aAAa7I,KAAK2J,GAEvBhL,KAAK4E,UAAU,WACNjC,EAAK0H,UACN1H,EAAKuH,aAAa7I,KAAK2J,IAE5B,MAOJrB,EAAAjJ,UAAAwK,kBAAP,SAAyBF,GACrBA,EAAMG,iBACNH,EAAMI,mBAEdzB,EA/MA,CAgBiCG,EAAA,GAiMjCF,EAAA,WAOA,OAPA","file":"28.6b0e1b475aadaf3d77fa.js","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit, forwardRef} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\n@Component({\n    selector: 'jigsaw-switch, j-switch',\n    templateUrl: './switch.html',\n    host: {\n        '[class.jigsaw-switch-host]': 'true',\n        '[class.jigsaw-switch-error]': '!valid'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawSwitch), multi: true},\n    ]\n})\n\nexport class JigsawSwitch implements ControlValueAccessor, OnInit {\n    @Input()\n    public valid: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$content: any; // 当前显示的内容.\n\n    /**\n     * 开关状态打开时的文本.(只支持字符串)\n     */\n    @Input()\n    public onLabel: any;\n\n    /**\n     * 开关状态关闭时显示的文本(只支持字符串)\n     */\n    @Input()\n    public offLabel: any;\n\n    /**\n     * size 默认 'default' 可选值 ‘small’\n     */\n    @Input()\n    public size: string = 'default';\n\n    private _checked: boolean = false;\n\n    /**\n     * 选中 默认值false;\n     *\n     */\n    @Input()\n    public get checked(): boolean  { return this._checked};\n    public set checked(value: boolean) {\n        this.writeValue(value);\n        this._propagateChange(value);\n    }\n\n    /**\n     * 可以忽略, 主要使checked 属性支持双向数据绑定.\n     */\n    @Output() public checkedChange = new EventEmitter<boolean>();\n\n    /**\n     * 对外暴露事件,\n     */\n    @Output() public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 是否禁用 类型 boolean 默认值 false;\n     *\n     */\n    @Input()\n    public get disabled(): boolean { return this._disabled; };\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setSwitchClass();\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClick() {\n        if(!this.disabled) {\n            this.checked = !this.checked;\n\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClass: {};\n\n    /**\n     * 更新控件样式的方法\n     */\n    private _setSwitchClass() {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        }\n    }\n\n    /**\n     * 设置选中和费选中的值.\n     */\n    private _setInnerValue() {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    }\n\n    public ngOnInit() {\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    private _propagateChange: any = () => {};\n\n    public writeValue(value: any): void {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\nvar JigsawSwitch = /** @class */ (function () {\n    function JigsawSwitch() {\n        this.valid = true;\n        /**\n         * size 默认 'default' 可选值 ‘small’\n         */\n        this.size = 'default';\n        this._checked = false;\n        /**\n         * 可以忽略, 主要使checked 属性支持双向数据绑定.\n         */\n        this.checkedChange = new EventEmitter();\n        /**\n         * 对外暴露事件,\n         */\n        this.change = this.checkedChange;\n        this._disabled = false;\n        this._propagateChange = function () { };\n    }\n    Object.defineProperty(JigsawSwitch.prototype, \"checked\", {\n        /**\n         * 选中 默认值false;\n         *\n         */\n        get: function () { return this._checked; },\n        set: function (value) {\n            this.writeValue(value);\n            this._propagateChange(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(JigsawSwitch.prototype, \"disabled\", {\n        /**\n         * 是否禁用 类型 boolean 默认值 false;\n         *\n         */\n        get: function () { return this._disabled; },\n        set: function (value) {\n            this._disabled = value;\n            this._setSwitchClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @internal\n     */\n    JigsawSwitch.prototype._$switchClick = function () {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    };\n    /**\n     * 更新控件样式的方法\n     */\n    JigsawSwitch.prototype._setSwitchClass = function () {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        };\n    };\n    /**\n     * 设置选中和费选中的值.\n     */\n    JigsawSwitch.prototype._setInnerValue = function () {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    };\n    JigsawSwitch.prototype.ngOnInit = function () {\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.writeValue = function (value) {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawSwitch.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawSwitch;\n}());\nexport { JigsawSwitch };\n","import * as tslib_1 from \"tslib\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { AfterContentInit, ChangeDetectorRef, EventEmitter, OnDestroy, QueryList, OnInit } from \"@angular/core\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\nimport { ArrayCollection } from \"../../common/core/data/array-collection\";\nvar GroupOptionValue = /** @class */ (function () {\n    function GroupOptionValue() {\n    }\n    return GroupOptionValue;\n}());\nexport { GroupOptionValue };\nvar AbstractJigsawGroupComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJigsawGroupComponent, _super);\n    function AbstractJigsawGroupComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.valid = true;\n        //设置对象的标识\n        _this._trackItemBy = [];\n        _this.autoRemoveInvalidValue = true;\n        _this._selectedItems = new ArrayCollection();\n        _this.selectedItemsChange = new EventEmitter();\n        _this._propagateChange = function () {\n        };\n        return _this;\n    }\n    Object.defineProperty(AbstractJigsawGroupComponent.prototype, \"trackItemBy\", {\n        get: function () {\n            return this._trackItemBy;\n        },\n        set: function (value) {\n            this._trackItemBy = typeof value === 'string' ? value.split(/\\s*,\\s*/g) : value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AbstractJigsawGroupComponent.prototype, \"selectedItems\", {\n        get: function () {\n            return this._selectedItems;\n        },\n        set: function (newValue) {\n            this.writeValue(newValue);\n            if (this._selectedItems === newValue) {\n                return;\n            }\n            this._propagateChange(newValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    AbstractJigsawGroupComponent.prototype._removeInvalidSelectedItems = function () {\n        var _this = this;\n        if (!this._items || !this._selectedItems || !this._selectedItems.length) {\n            return;\n        }\n        var needRefresh = false;\n        var selectedItems = this._selectedItems.concat();\n        selectedItems.forEach(function (selectedItem) {\n            if (_this._items.find(function (item) { return CommonUtils.compareWithKeyProperty(item.value, selectedItem, _this._trackItemBy); })) {\n                return;\n            }\n            _this._selectedItems.splice(_this.selectedItems.indexOf(selectedItem), 1);\n            needRefresh = true;\n        });\n        if (needRefresh) {\n            this.selectedItemsChange.emit(this.selectedItems);\n        }\n    };\n    AbstractJigsawGroupComponent.prototype._updateSelectItems = function (itemValue, selected) {\n        var _this = this;\n        if (this.multipleSelect) { //多选\n            if (selected) {\n                this.selectedItems.push(itemValue);\n            }\n            else {\n                this._selectedItems.forEach(function (selectedItemValue) {\n                    if (CommonUtils.compareWithKeyProperty(selectedItemValue, itemValue, _this._trackItemBy)) {\n                        _this._selectedItems.splice(_this.selectedItems.indexOf(selectedItemValue), 1);\n                    }\n                });\n            }\n        }\n        else {\n            //单选选中\n            this._selectedItems.splice(0, this._selectedItems.length);\n            this.selectedItems.push(itemValue);\n        }\n        this._selectedItems.refresh();\n        this.selectedItemsChange.emit(this.selectedItems);\n    };\n    //根据选中的item更新selectedItems\n    AbstractJigsawGroupComponent.prototype._updateSelectItemsForForm = function (itemValue, selected) {\n        this._updateSelectItems(itemValue, selected);\n        this._propagateChange(this.selectedItems);\n    };\n    AbstractJigsawGroupComponent.prototype.update = function (itemValue, selected) {\n        this._updateSelectItemsForForm(itemValue, selected);\n    };\n    //根据selectedItems设置选中的option\n    AbstractJigsawGroupComponent.prototype._setItemState = function (items) {\n        var _this = this;\n        if (!(this.selectedItems instanceof ArrayCollection) || !items.length) {\n            return;\n        }\n        this.callLater(function () {\n            items.forEach(function (item) {\n                var hasSelected = false;\n                _this._selectedItems.forEach(function (selectedItem) {\n                    if (CommonUtils.compareWithKeyProperty(item.value, selectedItem, _this._trackItemBy)) {\n                        hasSelected = true;\n                    }\n                });\n                item.selected = hasSelected;\n            });\n        });\n    };\n    AbstractJigsawGroupComponent.prototype._subscribeItemSelectedChange = function (items) {\n        var _this = this;\n        items.forEach(function (item) {\n            // 取消可能重复的订阅事件\n            item.change.observers.length = 0;\n            item.change.subscribe(function () {\n                if (_this.multipleSelect) { //多选\n                    item.selected = !item.selected; //切换组件选中状态\n                    _this._updateSelectItemsForForm(item.value, item.selected);\n                }\n                else { //单选\n                    if (!item.selected) {\n                        item.selected = true;\n                        _this._updateSelectItemsForForm(item.value, item.selected);\n                    }\n                }\n            });\n        });\n    };\n    AbstractJigsawGroupComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        _super.prototype.ngOnInit.call(this);\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        this._removeRefreshCallback = this._selectedItems.onRefresh(function () { return _this._setItemState(_this._items); });\n    };\n    AbstractJigsawGroupComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this._setItemState(this._items);\n        this._subscribeItemSelectedChange(this._items);\n        this._removeItemsChanges = this._items.changes.subscribe(function (items) {\n            // 异步变更data数据\n            _this._setItemState(items);\n            _this._subscribeItemSelectedChange(items);\n        });\n        if (this._items.length && this.autoRemoveInvalidValue) {\n            // 在本地数据为空时，不检查无用选项\n            this._removeInvalidSelectedItems();\n        }\n    };\n    AbstractJigsawGroupComponent.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        if (this._items) {\n            this._items.forEach(function (item) { return item.change.unsubscribe(); });\n        }\n        if (this._removeItemsChanges) {\n            this._removeItemsChanges.unsubscribe();\n        }\n    };\n    AbstractJigsawGroupComponent.prototype._setSelectedItems = function (newValue) {\n        var _this = this;\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        newValue = newValue instanceof ArrayCollection ? newValue : new ArrayCollection(newValue);\n        this._selectedItems = newValue;\n        if (this.initialized) {\n            this._setItemState(this._items);\n        }\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        this._removeRefreshCallback = this._selectedItems.onRefresh(function () { return _this._setItemState(_this._items); });\n    };\n    AbstractJigsawGroupComponent.prototype.writeValue = function (newValue) {\n        this._setSelectedItems(newValue);\n    };\n    AbstractJigsawGroupComponent.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    AbstractJigsawGroupComponent.prototype.registerOnTouched = function (fn) {\n    };\n    return AbstractJigsawGroupComponent;\n}(AbstractJigsawComponent));\nexport { AbstractJigsawGroupComponent };\nvar AbstractJigsawOptionComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(AbstractJigsawOptionComponent, _super);\n    function AbstractJigsawOptionComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.disabled = false;\n        _this.selectedChange = new EventEmitter();\n        _this.selected = false; // 选中状态\n        _this.change = new EventEmitter();\n        return _this;\n    }\n    return AbstractJigsawOptionComponent;\n}(AbstractJigsawComponent));\nexport { AbstractJigsawOptionComponent };\n","import {AbstractJigsawComponent} from \"../../common/common\";\nimport {ControlValueAccessor} from \"@angular/forms\";\nimport {\n    AfterContentInit,\n    ChangeDetectorRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    Output,\n    QueryList,\n    OnInit\n} from \"@angular/core\";\nimport {CallbackRemoval, CommonUtils} from \"../../common/core/utils/common-utils\";\nimport {ArrayCollection} from \"../../common/core/data/array-collection\";\nimport {Subscription} from \"rxjs\";\n\nexport class GroupOptionValue {\n    [index: string]: any;\n\n    disabled?: boolean;\n}\n\nexport class AbstractJigsawGroupComponent extends AbstractJigsawComponent implements ControlValueAccessor, AfterContentInit, OnDestroy, OnInit {\n\n    protected _removeRefreshCallback: CallbackRemoval;\n    private _removeItemsChanges: Subscription;\n\n    @Input()\n    public valid: boolean = true;\n\n    //设置对象的标识\n    private _trackItemBy: string[] = [];\n\n    @Input()\n    public get trackItemBy(): string | string[] {\n        return this._trackItemBy;\n    }\n\n    public set trackItemBy(value: string | string[]) {\n        this._trackItemBy = typeof value === 'string' ? value.split(/\\s*,\\s*/g) : value;\n    }\n\n    //判断是否支持多选\n    @Input() public multipleSelect: boolean;\n\n    @Input() public autoRemoveInvalidValue: boolean = true;\n\n    protected _selectedItems = new ArrayCollection<any>();\n\n    @Input()\n    public get selectedItems(): ArrayCollection<any> | any[] {\n        return this._selectedItems;\n    }\n\n    public set selectedItems(newValue: ArrayCollection<any> | any[]) {\n        this.writeValue(newValue);\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        this._propagateChange(newValue);\n    }\n\n    /**\n     * @internal\n     */\n    public _removeInvalidSelectedItems(): void {\n        if (!this._items || !this._selectedItems || !this._selectedItems.length) {\n            return;\n        }\n        let needRefresh = false;\n        let selectedItems = this._selectedItems.concat();\n        selectedItems.forEach(selectedItem => {\n            if (this._items.find(item => CommonUtils.compareWithKeyProperty(item.value, selectedItem, this._trackItemBy))) {\n                return;\n            }\n            this._selectedItems.splice(this.selectedItems.indexOf(selectedItem), 1);\n            needRefresh = true;\n        });\n        if(needRefresh) {\n            this.selectedItemsChange.emit(this.selectedItems);\n        }\n    }\n\n    @Output() public selectedItemsChange = new EventEmitter<any[]>();\n\n    //获取映射的items\n    protected _items: QueryList<AbstractJigsawOptionComponent>;\n\n    protected _updateSelectItems(itemValue, selected): void {\n        if (this.multipleSelect) { //多选\n            if (selected) {\n                this.selectedItems.push(itemValue);\n            } else {\n                this._selectedItems.forEach(selectedItemValue => {\n                    if (CommonUtils.compareWithKeyProperty(selectedItemValue, itemValue, this._trackItemBy)) {\n                        this._selectedItems.splice(this.selectedItems.indexOf(selectedItemValue), 1);\n                    }\n                });\n            }\n        } else {\n            //单选选中\n            this._selectedItems.splice(0, this._selectedItems.length);\n            this.selectedItems.push(itemValue);\n        }\n        this._selectedItems.refresh();\n        this.selectedItemsChange.emit(this.selectedItems);\n    }\n\n    //根据选中的item更新selectedItems\n    protected _updateSelectItemsForForm(itemValue, selected): void {\n        this._updateSelectItems(itemValue, selected);\n        this._propagateChange(this.selectedItems);\n    }\n\n    public update(itemValue, selected) {\n        this._updateSelectItemsForForm(itemValue, selected);\n    }\n\n    //根据selectedItems设置选中的option\n    protected _setItemState(items: QueryList<AbstractJigsawOptionComponent>): void {\n        if (!(this.selectedItems instanceof ArrayCollection) || !items.length) {\n            return;\n        }\n        this.callLater(() => {\n            items.forEach(item => {\n                let hasSelected = false;\n                this._selectedItems.forEach(selectedItem => {\n                    if (CommonUtils.compareWithKeyProperty(item.value, selectedItem, this._trackItemBy)) {\n                        hasSelected = true;\n                    }\n                });\n                item.selected = hasSelected;\n            });\n        });\n    }\n\n    private _subscribeItemSelectedChange(items: QueryList<AbstractJigsawOptionComponent>) {\n        items.forEach(item => {\n            // 取消可能重复的订阅事件\n            item.change.observers.length = 0;\n            item.change.subscribe(() => {\n                if (this.multipleSelect) { //多选\n                    item.selected = !item.selected;//切换组件选中状态\n                    this._updateSelectItemsForForm(item.value, item.selected);\n                } else { //单选\n                    if (!item.selected) {\n                        item.selected = true;\n                        this._updateSelectItemsForForm(item.value, item.selected);\n                    }\n                }\n            })\n        });\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback()\n        }\n        this._removeRefreshCallback = this._selectedItems.onRefresh(() => this._setItemState(this._items));\n    }\n\n    ngAfterContentInit() {\n        this._setItemState(this._items);\n        this._subscribeItemSelectedChange(this._items);\n        this._removeItemsChanges = this._items.changes.subscribe(items => {\n            // 异步变更data数据\n            this._setItemState(items);\n            this._subscribeItemSelectedChange(items);\n        });\n        if (this._items.length && this.autoRemoveInvalidValue) {\n            // 在本地数据为空时，不检查无用选项\n            this._removeInvalidSelectedItems();\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback()\n        }\n        if (this._items) {\n            this._items.forEach(item => item.change.unsubscribe());\n        }\n        if (this._removeItemsChanges) {\n            this._removeItemsChanges.unsubscribe();\n        }\n    }\n\n    protected _propagateChange: any = () => {\n    };\n\n    protected _setSelectedItems(newValue: any): void {\n        if (this._selectedItems === newValue) {\n            return;\n        }\n        newValue = newValue instanceof ArrayCollection ? newValue : new ArrayCollection(newValue);\n\n        this._selectedItems = newValue;\n        if (this.initialized) {\n            this._setItemState(this._items);\n        }\n\n        if (this._removeRefreshCallback) {\n            this._removeRefreshCallback();\n        }\n        this._removeRefreshCallback = this._selectedItems.onRefresh(() => this._setItemState(this._items));\n    }\n\n    public writeValue(newValue: any): void {\n        this._setSelectedItems(newValue);\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n\nexport class AbstractJigsawOptionComponent extends AbstractJigsawComponent {\n    @Input() public value: any;\n\n    @Input() public disabled: boolean = false;\n\n    @Output()\n    public selectedChange = new EventEmitter<boolean>();\n\n    @Input()\n    public selected: boolean = false; // 选中状态\n\n    @Output()\n    public change = new EventEmitter<AbstractJigsawOptionComponent>();\n\n    public changeDetector: ChangeDetectorRef\n\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./switch\";\nvar styles_JigsawSwitch = [];\nvar RenderType_JigsawSwitch = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawSwitch, data: {} });\nexport { RenderType_JigsawSwitch as RenderType_JigsawSwitch };\nexport function View_JigsawSwitch_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$switchClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-switch-inner\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$switchClass; _ck(_v, 2, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co._$content; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_JigsawSwitch_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], null, null, View_JigsawSwitch_0, RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawSwitch]), i0.ɵdid(2, 114688, null, 0, i3.JigsawSwitch, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar JigsawSwitchNgFactory = i0.ɵccf(\"jigsaw-switch, j-switch\", i3.JigsawSwitch, View_JigsawSwitch_Host_0, { valid: \"valid\", onLabel: \"onLabel\", offLabel: \"offLabel\", size: \"size\", checked: \"checked\", disabled: \"disabled\" }, { checkedChange: \"checkedChange\", change: \"change\" }, []);\nexport { JigsawSwitchNgFactory as JigsawSwitchNgFactory };\n","<div [ngClass]=\"_$switchClass\" (click)=\"_$switchClick()\">\n    <div class=\"jigsaw-switch-inner\">{{_$content}}</div>\n</div>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../demo-description/demo-description.ngfactory\";\nimport * as i2 from \"../../../../demo-description/demo-description\";\nimport * as i3 from \"../../../../../jigsaw/pc-components/switch/switch.ngfactory\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../../../../jigsaw/pc-components/switch/switch\";\nimport * as i6 from \"../../../../../jigsaw/pc-components/list-and-tile/button-bar.ngfactory\";\nimport * as i7 from \"../../../../../jigsaw/pc-components/list-and-tile/button-bar\";\nimport * as i8 from \"../../../../../jigsaw/pc-components/radio/radio-lite.ngfactory\";\nimport * as i9 from \"../../../../../jigsaw/pc-components/radio/radio-lite\";\nimport * as i10 from \"./demo.component\";\nvar styles_ButtonBarBasicDemoComponent = [];\nvar RenderType_ButtonBarBasicDemoComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ButtonBarBasicDemoComponent, data: {} });\nexport { RenderType_ButtonBarBasicDemoComponent as RenderType_ButtonBarBasicDemoComponent };\nexport function View_ButtonBarBasicDemoComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-demo-description\", [], null, null, null, i1.View_JigsawDemoDescription_0, i1.RenderType_JigsawDemoDescription)), i0.ɵdid(1, 114688, null, 0, i2.JigsawDemoDescription, [], { content: [0, \"content\"], summary: [1, \"summary\"] }, null), (_l()(), i0.ɵeld(2, 0, null, null, 37, \"div\", [[\"class\", \"live-demo-wrap\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"h2\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Button Bar\"])), (_l()(), i0.ɵeld(5, 0, null, null, 2, \"jigsaw-switch\", [[\"offLabel\", \"\\u5355\\u9009\"], [\"onLabel\", \"\\u591A\\u9009\"]], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"], [null, \"change\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.multiple = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"change\" === en)) {\n        var pd_1 = (_co.resetSelection() !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i3.View_JigsawSwitch_0, i3.RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i5.JigsawSwitch]), i0.ɵdid(7, 114688, null, 0, i5.JigsawSwitch, [], { onLabel: [0, \"onLabel\"], offLabel: [1, \"offLabel\"], checked: [2, \"checked\"] }, { checkedChange: \"checkedChange\", change: \"change\" }), (_l()(), i0.ɵeld(8, 0, null, null, 7, \"div\", [[\"class\", \"demo-1 live-demo\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(9, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u5BF9\\u8C61\\u6570\\u7EC4\"])), (_l()(), i0.ɵeld(11, 0, null, null, 2, \"jigsaw-button-bar\", [], [[2, \"jigsaw-button-bar\", null], [2, \"jigsaw-button-bar-primary\", null], [2, \"jigsaw-button-bar-warning\", null], [2, \"jigsaw-button-bar-error\", null], [4, \"height\", null]], [[null, \"selectedItemsChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectedItemsChange\" === en)) {\n        var pd_0 = ((_co.selectedCity = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectedItemsChange\" === en)) {\n        var pd_1 = (_co.basicSelectChange($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i6.View_JigsawButtonBar_0, i6.RenderType_JigsawButtonBar)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawButtonBar]), i0.ɵdid(13, 245760, null, 0, i7.JigsawButtonBar, [], { data: [0, \"data\"], multipleSelect: [1, \"multipleSelect\"], selectedItems: [2, \"selectedItems\"] }, { selectedItemsChange: \"selectedItemsChange\" }), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"p\", [[\"class\", \"message\"]], null, null, null, null, null)), (_l()(), i0.ɵted(15, null, [\"\\u9009\\u62E9\\u7684\\u57CE\\u5E02\\u662F\\uFF1A\", \"\"])), (_l()(), i0.ɵeld(16, 0, null, null, 7, \"div\", [[\"class\", \"demo-2 live-demo\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(17, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u5B57\\u7B26\\u4E32\\u6570\\u7EC4\"])), (_l()(), i0.ɵeld(19, 0, null, null, 2, \"jigsaw-button-bar\", [], [[2, \"jigsaw-button-bar\", null], [2, \"jigsaw-button-bar-primary\", null], [2, \"jigsaw-button-bar-warning\", null], [2, \"jigsaw-button-bar-error\", null], [4, \"height\", null]], [[null, \"selectedItemsChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectedItemsChange\" === en)) {\n        var pd_0 = ((_co.selectedCity2 = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"selectedItemsChange\" === en)) {\n        var pd_1 = (_co.basicSelectChange2($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i6.View_JigsawButtonBar_0, i6.RenderType_JigsawButtonBar)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawButtonBar]), i0.ɵdid(21, 245760, null, 0, i7.JigsawButtonBar, [], { data: [0, \"data\"], multipleSelect: [1, \"multipleSelect\"], selectedItems: [2, \"selectedItems\"] }, { selectedItemsChange: \"selectedItemsChange\" }), (_l()(), i0.ɵeld(22, 0, null, null, 1, \"p\", [[\"class\", \"message\"]], null, null, null, null, null)), (_l()(), i0.ɵted(23, null, [\"\\u9009\\u62E9\\u7684\\u57CE\\u5E02\\u662F\\uFF1A\", \"\"])), (_l()(), i0.ɵeld(24, 0, null, null, 9, \"div\", [[\"class\", \"demo-2 live-demo\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(25, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"colorType\"])), (_l()(), i0.ɵeld(27, 0, null, null, 2, \"jigsaw-radios-lite\", [], [[2, \"jigsaw-radios-lite\", null], [2, \"jigsaw-radios-error\", null]], [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = ((_co.colorType = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i8.View_JigsawRadiosLite_0, i8.RenderType_JigsawRadiosLite)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i9.JigsawRadiosLite]), i0.ɵdid(29, 245760, null, 0, i9.JigsawRadiosLite, [], { data: [0, \"data\"], value: [1, \"value\"] }, { valueChange: \"valueChange\" }), (_l()(), i0.ɵeld(30, 0, null, null, 0, \"br\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(31, 0, null, null, 2, \"jigsaw-button-bar\", [], [[2, \"jigsaw-button-bar\", null], [2, \"jigsaw-button-bar-primary\", null], [2, \"jigsaw-button-bar-warning\", null], [2, \"jigsaw-button-bar-error\", null], [4, \"height\", null]], [[null, \"selectedItemsChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectedItemsChange\" === en)) {\n        var pd_0 = ((_co.selectedCity3 = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_JigsawButtonBar_0, i6.RenderType_JigsawButtonBar)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawButtonBar]), i0.ɵdid(33, 245760, null, 0, i7.JigsawButtonBar, [], { data: [0, \"data\"], multipleSelect: [1, \"multipleSelect\"], selectedItems: [2, \"selectedItems\"], colorType: [3, \"colorType\"] }, { selectedItemsChange: \"selectedItemsChange\" }), (_l()(), i0.ɵeld(34, 0, null, null, 5, \"div\", [[\"class\", \"demo-2 live-demo\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(35, 0, null, null, 1, \"h3\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"height\"])), (_l()(), i0.ɵeld(37, 0, null, null, 2, \"jigsaw-button-bar\", [[\"height\", \"22\"]], [[2, \"jigsaw-button-bar\", null], [2, \"jigsaw-button-bar-primary\", null], [2, \"jigsaw-button-bar-warning\", null], [2, \"jigsaw-button-bar-error\", null], [4, \"height\", null]], [[null, \"selectedItemsChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"selectedItemsChange\" === en)) {\n        var pd_0 = ((_co.selectedCity4 = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i6.View_JigsawButtonBar_0, i6.RenderType_JigsawButtonBar)), i0.ɵprd(5120, null, i4.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawButtonBar]), i0.ɵdid(39, 245760, null, 0, i7.JigsawButtonBar, [], { height: [0, \"height\"], data: [1, \"data\"], multipleSelect: [2, \"multipleSelect\"], selectedItems: [3, \"selectedItems\"] }, { selectedItemsChange: \"selectedItemsChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.description; var currVal_1 = _co.summary; _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_4 = \"\\u591A\\u9009\"; var currVal_5 = \"\\u5355\\u9009\"; var currVal_6 = _co.multiple; _ck(_v, 7, 0, currVal_4, currVal_5, currVal_6); var currVal_12 = _co.cities; var currVal_13 = _co.multiple; var currVal_14 = _co.selectedCity; _ck(_v, 13, 0, currVal_12, currVal_13, currVal_14); var currVal_21 = _co.cities2; var currVal_22 = _co.multiple; var currVal_23 = _co.selectedCity2; _ck(_v, 21, 0, currVal_21, currVal_22, currVal_23); var currVal_27 = _co.colorTypeList; var currVal_28 = _co.colorType; _ck(_v, 29, 0, currVal_27, currVal_28); var currVal_34 = _co.cities2; var currVal_35 = _co.multiple; var currVal_36 = _co.selectedCity3; var currVal_37 = _co.colorType; _ck(_v, 33, 0, currVal_34, currVal_35, currVal_36, currVal_37); var currVal_43 = \"22\"; var currVal_44 = _co.cities2; var currVal_45 = _co.multiple; var currVal_46 = _co.selectedCity4; _ck(_v, 39, 0, currVal_43, currVal_44, currVal_45, currVal_46); }, function (_ck, _v) { var _co = _v.component; var currVal_2 = true; var currVal_3 = !i0.ɵnov(_v, 7).valid; _ck(_v, 5, 0, currVal_2, currVal_3); var currVal_7 = true; var currVal_8 = (i0.ɵnov(_v, 13).colorType === \"primary\"); var currVal_9 = (i0.ɵnov(_v, 13).colorType === \"warning\"); var currVal_10 = ((i0.ɵnov(_v, 13).colorType === \"error\") || (i0.ɵnov(_v, 13).colorType === \"danger\")); var currVal_11 = i0.ɵnov(_v, 13).height; _ck(_v, 11, 0, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11); var currVal_15 = _co.selectedCityStr; _ck(_v, 15, 0, currVal_15); var currVal_16 = true; var currVal_17 = (i0.ɵnov(_v, 21).colorType === \"primary\"); var currVal_18 = (i0.ɵnov(_v, 21).colorType === \"warning\"); var currVal_19 = ((i0.ɵnov(_v, 21).colorType === \"error\") || (i0.ɵnov(_v, 21).colorType === \"danger\")); var currVal_20 = i0.ɵnov(_v, 21).height; _ck(_v, 19, 0, currVal_16, currVal_17, currVal_18, currVal_19, currVal_20); var currVal_24 = _co.selectedCityStr2; _ck(_v, 23, 0, currVal_24); var currVal_25 = true; var currVal_26 = !i0.ɵnov(_v, 29).valid; _ck(_v, 27, 0, currVal_25, currVal_26); var currVal_29 = true; var currVal_30 = (i0.ɵnov(_v, 33).colorType === \"primary\"); var currVal_31 = (i0.ɵnov(_v, 33).colorType === \"warning\"); var currVal_32 = ((i0.ɵnov(_v, 33).colorType === \"error\") || (i0.ɵnov(_v, 33).colorType === \"danger\")); var currVal_33 = i0.ɵnov(_v, 33).height; _ck(_v, 31, 0, currVal_29, currVal_30, currVal_31, currVal_32, currVal_33); var currVal_38 = true; var currVal_39 = (i0.ɵnov(_v, 39).colorType === \"primary\"); var currVal_40 = (i0.ɵnov(_v, 39).colorType === \"warning\"); var currVal_41 = ((i0.ɵnov(_v, 39).colorType === \"error\") || (i0.ɵnov(_v, 39).colorType === \"danger\")); var currVal_42 = i0.ɵnov(_v, 39).height; _ck(_v, 37, 0, currVal_38, currVal_39, currVal_40, currVal_41, currVal_42); }); }\nexport function View_ButtonBarBasicDemoComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_ButtonBarBasicDemoComponent_0, RenderType_ButtonBarBasicDemoComponent)), i0.ɵdid(1, 1097728, null, 0, i10.ButtonBarBasicDemoComponent, [], null, null)], null, null); }\nvar ButtonBarBasicDemoComponentNgFactory = i0.ɵccf(\"ng-component\", i10.ButtonBarBasicDemoComponent, View_ButtonBarBasicDemoComponent_Host_0, {}, {}, []);\nexport { ButtonBarBasicDemoComponentNgFactory as ButtonBarBasicDemoComponentNgFactory };\n","<!-- ignore the following lines, they are not important to this demo -->\n<jigsaw-demo-description [summary]=\"summary\" [content]=\"description\">\n</jigsaw-demo-description>\n\n\n<!-- start to learn the demo from here -->\n<div class=\"live-demo-wrap\">\n    <h2>Button Bar</h2>\n    <jigsaw-switch [(checked)]=\"multiple\" onLabel=\"多选\" offLabel=\"单选\" (change)=\"resetSelection()\">\n    </jigsaw-switch>\n    <div class=\"demo-1 live-demo\">\n        <h3>对象数组</h3>\n        <jigsaw-button-bar [(selectedItems)]=\"selectedCity\" [data]=\"cities\" [multipleSelect]=\"multiple\"\n                           (selectedItemsChange)=\"basicSelectChange($event)\">\n        </jigsaw-button-bar>\n        <p class=\"message\">选择的城市是：{{selectedCityStr}}</p>\n    </div>\n    <div class=\"demo-2 live-demo\">\n        <h3>字符串数组</h3>\n        <jigsaw-button-bar [(selectedItems)]=\"selectedCity2\" [data]=\"cities2\" [multipleSelect]=\"multiple\"\n                           (selectedItemsChange)=\"basicSelectChange2($event)\">\n        </jigsaw-button-bar>\n        <p class=\"message\">选择的城市是：{{selectedCityStr2}}</p>\n    </div>\n\n    <div class=\"demo-2 live-demo\">\n        <h3>colorType</h3>\n        <jigsaw-radios-lite [data]=\"colorTypeList\" [(value)]=\"colorType\">\n        </jigsaw-radios-lite><br>\n        <jigsaw-button-bar [data]=\"cities2\" [(selectedItems)]=\"selectedCity3\" [colorType]=\"colorType\"\n                           [multipleSelect]=\"multiple\">\n        </jigsaw-button-bar>\n    </div>\n\n    <div class=\"demo-2 live-demo\">\n        <h3>height</h3>\n        <jigsaw-button-bar [data]=\"cities2\" [(selectedItems)]=\"selectedCity4\" height=\"22\"\n                           [multipleSelect]=\"multiple\">\n        </jigsaw-button-bar>\n    </div>\n</div>\n\n\n\n\n\n","import {NgModule} from '@angular/core';\nimport {ButtonBarBasicDemoComponent} from './demo.component';\nimport {JigsawDemoDescriptionModule} from \"app/demo-description/demo-description\";\nimport {JigsawButtonBarModule} from \"jigsaw/pc-components/list-and-tile/button-bar\";\nimport {JigsawRadioLiteModule} from \"jigsaw/pc-components/radio/radio-lite\";\nimport {JigsawSwitchModule} from \"jigsaw/pc-components/switch/index\";\n\n@NgModule({\n    imports: [JigsawButtonBarModule, JigsawRadioLiteModule, JigsawDemoDescriptionModule, JigsawSwitchModule],\n    declarations: [ButtonBarBasicDemoComponent],\n    exports: [ButtonBarBasicDemoComponent]\n})\nexport class ButtonBarBasicDemoModule {\n}\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./demo-set.module\";\nimport * as i2 from \"../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./basic/demo.component.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../../../../jigsaw/pc-components/input/input\";\nimport * as i8 from \"../../../../jigsaw/pc-components/list-and-tile/tile\";\nimport * as i9 from \"../../../../jigsaw/pc-components/list-and-tile/button-bar\";\nimport * as i10 from \"../../../../jigsaw/pc-components/radio/radio\";\nimport * as i11 from \"../../../../jigsaw/pc-components/radio/radio-lite\";\nimport * as i12 from \"../../../markdown/markdown\";\nimport * as i13 from \"../../../demo-description/demo-description\";\nimport * as i14 from \"../../../../jigsaw/pc-components/switch/index\";\nimport * as i15 from \"./basic/demo.module\";\nimport * as i16 from \"./basic/demo.component\";\nvar ButtonBarDemoModuleNgFactory = i0.ɵcmf(i1.ButtonBarDemoModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.ButtonBarBasicDemoComponentNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.ɵangular_packages_forms_forms_o, i5.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(1073742336, i6.RouterModule, i6.RouterModule, [[2, i6.ɵangular_packages_router_router_a], [2, i6.Router]]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i5.ɵangular_packages_forms_forms_d, i5.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i5.FormsModule, i5.FormsModule, []), i0.ɵmpd(1073742336, i7.JigsawInputModule, i7.JigsawInputModule, []), i0.ɵmpd(1073742336, i8.JigsawTileSelectModule, i8.JigsawTileSelectModule, []), i0.ɵmpd(1073742336, i9.JigsawButtonBarModule, i9.JigsawButtonBarModule, []), i0.ɵmpd(1073742336, i10.JigsawRadioModule, i10.JigsawRadioModule, []), i0.ɵmpd(1073742336, i11.JigsawRadioLiteModule, i11.JigsawRadioLiteModule, []), i0.ɵmpd(1073742336, i12.JigsawMarkdownModule, i12.JigsawMarkdownModule, []), i0.ɵmpd(1073742336, i13.JigsawDemoDescriptionModule, i13.JigsawDemoDescriptionModule, []), i0.ɵmpd(1073742336, i14.JigsawSwitchModule, i14.JigsawSwitchModule, []), i0.ɵmpd(1073742336, i15.ButtonBarBasicDemoModule, i15.ButtonBarBasicDemoModule, []), i0.ɵmpd(1073742336, i1.ButtonBarDemoModule, i1.ButtonBarDemoModule, []), i0.ɵmpd(1024, i6.ROUTES, function () { return [[{ path: \"basic\", component: i16.ButtonBarBasicDemoComponent }]]; }, [])]); });\nexport { ButtonBarDemoModuleNgFactory as ButtonBarDemoModuleNgFactory };\n","/**\n * Created by 10177553 on 2017/3/16.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\n\nimport { JigsawSwitch } from './switch';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawSwitch],\n    declarations: [JigsawSwitch],\n    providers: [],\n})\nexport class JigsawSwitchModule { }\n\nexport * from './switch';\n","import * as tslib_1 from \"tslib\";\nimport { EventEmitter, ElementRef } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\nvar JigsawInput = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawInput, _super);\n    function JigsawInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n         *\n         * $demo = input/clearable\n         */\n        _this.clearable = true;\n        /**\n         * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n         *\n         * $demo = input/disabled\n         */\n        _this.disabled = false;\n        /**\n         * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n         *\n         * $demo = input/valid\n         * $demo = form/template-driven\n         */\n        _this.valid = true;\n        /**\n         * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n         *\n         * $demo = input/password\n         */\n        _this.password = false;\n        _this._focusEmitter = new EventEmitter();\n        _this._blurEmitter = new EventEmitter();\n        _this._propagateChange = function () {\n        };\n        _this._value = ''; //input表单值\n        /**\n         * 当文本框中的文本发生变化时，组件会发出此事件。\n         *\n         * $demo = input/value-change\n         */\n        _this.valueChange = new EventEmitter();\n        _this._placeholder = '';\n        _this._focused = false;\n        /**\n         * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n         * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n         * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n         * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n         *\n         * $demo = table/update-column-define\n         */\n        _this.blurOnClear = true;\n        return _this;\n    }\n    Object.defineProperty(JigsawInput.prototype, \"type\", {\n        get: function () {\n            return this.password ? \"password\" : \"text\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawInput.prototype.writeValue = function (value) {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    };\n    JigsawInput.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawInput.prototype.registerOnTouched = function (fn) {\n    };\n    Object.defineProperty(JigsawInput.prototype, \"value\", {\n        /**\n         * 文本框中当前的文本\n         *\n         * $demo = input/valid\n         */\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n                return;\n            }\n            this._value = newValue;\n            this.valueChange.emit(this._value);\n            this._propagateChange(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawInput.prototype, \"placeholder\", {\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n         *\n         * $demo = input/valid\n         */\n        set: function (txt) {\n            this._placeholder = txt;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    JigsawInput.prototype.focus = function () {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    };\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    JigsawInput.prototype.select = function () {\n        this._inputElement.nativeElement.select();\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$clearValue = function () {\n        this.value = '';\n        this.focus();\n    };\n    Object.defineProperty(JigsawInput.prototype, \"focused\", {\n        /**\n         * 获取文本框是否有焦点\n         *\n         * $demo = input/focus\n         */\n        get: function () {\n            return this._focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$handleFocus = function (event) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$handleBlur = function (event) {\n        var _this = this;\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        }\n        else {\n            this.callLater(function () {\n                if (!_this._focused) {\n                    _this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$stopPropagation = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    return JigsawInput;\n}(AbstractJigsawComponent));\nexport { JigsawInput };\nvar JigsawInputModule = /** @class */ (function () {\n    function JigsawInputModule() {\n    }\n    return JigsawInputModule;\n}());\nexport { JigsawInputModule };\n","import {\n    NgModule, Component, EventEmitter, Input, Output, ElementRef, ViewChild, forwardRef\n} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {AbstractJigsawComponent, IJigsawFormControl} from \"../../common/common\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\n@Component({\n    selector: 'jigsaw-input, j-input',\n    templateUrl: 'input.html',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '(click)': '_$stopPropagation($event)',\n        '[class.jigsaw-input]': 'true',\n        '[class.jigsaw-input-error]': '!valid',\n        '[class.jigsaw-input-focused]': 'focused',\n        '[class.jigsaw-input-disabled]': 'disabled'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawInput), multi: true},\n    ]\n})\nexport class JigsawInput extends AbstractJigsawComponent implements IJigsawFormControl, ControlValueAccessor {\n\n    /**\n     * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n     *\n     * $demo = input/clearable\n     */\n    @Input() public clearable: boolean = true;\n\n    /**\n     * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n     *\n     * $demo = input/disabled\n     */\n    @Input() public disabled: boolean = false;\n\n    /**\n     * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n     *\n     * $demo = input/valid\n     * $demo = form/template-driven\n     */\n    @Input() public valid: boolean = true;\n\n\n    /**\n     * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n     *\n     * $demo = input/password\n     */\n    @Input() public password: boolean = false;\n\n    @Input()\n    public get type(): string {\n        return this.password ? \"password\" : \"text\";\n    }\n\n    @Output('focus')\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output('blur')\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    private _propagateChange: any = () => {\n    };\n\n    public writeValue(value: any): void {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n\n    private _value: string = ''; //input表单值\n\n    /**\n     * 文本框中当前的文本\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public get value(): string {\n        return this._value;\n    }\n\n    public set value(newValue: string) {\n        if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n            return;\n        }\n        this._value = newValue;\n        this.valueChange.emit(this._value);\n        this._propagateChange(this._value);\n    }\n\n    /**\n     * 当文本框中的文本发生变化时，组件会发出此事件。\n     *\n     * $demo = input/value-change\n     */\n    @Output()\n    public valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n    private _placeholder: string = '';\n\n    /**\n     * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public set placeholder(txt: string) {\n        this._placeholder = txt;\n    }\n\n    public get placeholder() {\n        return this._placeholder;\n    }\n\n\n    @ViewChild('input', {static: false})\n    private _inputElement: ElementRef;\n\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    public focus() {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    }\n\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    public select() {\n        this._inputElement.nativeElement.select();\n    }\n\n    /**\n     * @internal\n     */\n    public _$clearValue(): void {\n        this.value = '';\n        this.focus();\n    }\n\n    private _focused: boolean = false;\n\n    /**\n     * 获取文本框是否有焦点\n     *\n     * $demo = input/focus\n     */\n    public get focused(): boolean {\n        return this._focused;\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleFocus(event: FocusEvent) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    }\n\n    /**\n     * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n     * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n     * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n     * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n     *\n     * $demo = table/update-column-define\n     */\n    @Input()\n    public blurOnClear: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$handleBlur(event: FocusEvent) {\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        } else {\n            this.callLater(() => {\n                if (!this._focused) {\n                    this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$stopPropagation(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [JigsawInput],\n    exports: [JigsawInput],\n})\nexport class JigsawInputModule {\n\n}\n"],"sourceRoot":""}