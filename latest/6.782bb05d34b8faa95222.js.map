{"version":3,"sources":["webpack:///./src/jigsaw/pc-components/switch/switch.ts","webpack:///./src/jigsaw/pc-components/switch/switch.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table-renderer.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.DefaultCellRenderer.html","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.TableCellTextEditorRenderer.html","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.TableHeadCheckboxRenderer.html","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.TableCellCheckboxRenderer.html","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.TableCellSwitchRenderer.html","webpack:///./src/jigsaw/pc-components/table/table-renderer.ts.TableCellSelectRenderer.html","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.html","webpack:///./src/jigsaw/pc-components/switch/switch.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/switch/switch.html","webpack:///./src/jigsaw/pc-components/switch/index.ts","webpack:///./src/jigsaw/pc-components/table/table-utils.ts","webpack:///./src/jigsaw/pc-components/table/table.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table.ts","webpack:///./src/jigsaw/pc-components/table/table-inner.components.ts","webpack:///./src/jigsaw/pc-components/table/table-inner.components.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table-inner.components.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table-inner.components.ts.JigsawTableHeaderInternalComponent.html","webpack:///./src/jigsaw/pc-components/table/table-inner.components.ts.JigsawTableCellInternalComponent.html","webpack:///./src/jigsaw/pc-components/table/table.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/table/table.html","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ts","webpack:///./src/jigsaw/pc-components/checkbox/checkbox.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/checkbox/index.ts"],"names":["__webpack_require__","d","__webpack_exports__","JigsawSwitch","_angular_core__WEBPACK_IMPORTED_MODULE_0__","this","valid","size","_checked","checkedChange","change","_disabled","_propagateChange","Object","defineProperty","prototype","get","set","value","writeValue","enumerable","configurable","_setSwitchClass","_$switchClick","disabled","checked","emit","_$switchClass","jigsaw-switch","jigsaw-switch-small","jigsaw-switch-checked","jigsaw-switch-disabled","_setInnerValue","_$content","onLabel","offLabel","ngOnInit","registerOnChange","fn","registerOnTouched","DefaultCellRendererNgFactory","TableCellTextEditorRendererNgFactory","TableHeadCheckboxRendererNgFactory","TableCellCheckboxRendererNgFactory","TableCellSwitchRendererNgFactory","TableCellSelectRendererNgFactory","_table_renderer__WEBPACK_IMPORTED_MODULE_1__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_input_input__WEBPACK_IMPORTED_MODULE_7__","_select_select__WEBPACK_IMPORTED_MODULE_15__","_input_input_ngfactory__WEBPACK_IMPORTED_MODULE_16__","_checkbox_checkbox_ngfactory__WEBPACK_IMPORTED_MODULE_17__","_checkbox_checkbox__WEBPACK_IMPORTED_MODULE_18__","_switch_switch_ngfactory__WEBPACK_IMPORTED_MODULE_19__","_switch_switch__WEBPACK_IMPORTED_MODULE_20__","_select_select_ngfactory__WEBPACK_IMPORTED_MODULE_21__","RenderType_DefaultCellRenderer","encapsulation","styles","data","View_DefaultCellRenderer_0","_l","_ck","_v","component","cellData","View_DefaultCellRenderer_Host_0","row","field","initData","tableData","additionalData","cellDataChange","RenderType_TableCellTextEditorRenderer","View_TableCellTextEditorRenderer_0","input","en","$event","ad","_co","_$stopPropagation","dispatchChangeEvent","p0_0","width","placeholder","blurOnClear","_blurEmitter","valueChange","_$placeholder","height","focused","View_TableCellTextEditorRenderer_Host_0","RenderType_TableHeadCheckboxRenderer","View_TableHeadCheckboxRenderer_0","View_TableHeadCheckboxRenderer_Host_0","RenderType_TableCellCheckboxRenderer","View_TableCellCheckboxRenderer_0","onChange","View_TableCellCheckboxRenderer_Host_0","RenderType_TableCellSwitchRenderer","View_TableCellSwitchRenderer_0","View_TableCellSwitchRenderer_Host_0","RenderType_TableCellSelectRenderer","View_TableCellSelectRenderer_0","label","optionCount","selected","multipleSelect","minWidth","maxWidth","View_TableCellSelectRenderer_Host_0","RenderType_JigsawCheckBox","View_JigsawCheckBox_0","_angular_common__WEBPACK_IMPORTED_MODULE_1__","_$onCheckboxClick","ngClass","_$checkboxClass","RenderType_JigsawSwitch","View_JigsawSwitch_0","JigsawSwitchModule","table_utils_TableUtils","TableUtils","updateHeaderSettings","columnDefine","settings","visible","renderer","clazz","sortable","sortAs","component_data","string","defaultSortOrder","default","innerHtmlContext","target","headerDef","header","common_utils","isDefined","text","getRenderer","updateCellSettings","rendererInitData","rowSpan","editable","editorRenderer","editorRendererInitData","group","tooltip","cellDef","cell","Function","table_renderer","e","getGenerator","property","table_JigsawTable","JigsawTableModule","_super","JigsawTable","_renderer","_elementRef","_zone","_changeDetectorRef","_this","call","sort","core","_contentWidth","hideHeader","selectChange","selectedRowChange","_$headerSettings","_headerSettingsBackup","_$cellSettings","_cellSettingsBackup","_additionalData","table_typings","additionalDataChange","edit","_additionalColumnDefines","doubleClick","floatingHeader","_$noDataSrc","noDataImageSrc","getBrowserType","_$isFFBrowser","tslib_es6","_width","getCssValue","callLater","resize","_selectedRow","initialized","_selectRow","_getColumnIndex","_getHeaderValueByField","_a","index","console","error","_updateHeaderSettings","columnDefines","oldBackup","shallowCopy","splice","length","forEach","realColIndex","headerData","push","_getCellDataByField","_updateAdditionalData","_updateCellSettings","dataLen","groupSetting","rowIndex","undefined","cellDataGenerator","tooltipGenerator","_getMixedColumnDefines","cd","_columnDefineGenerator","i","acd","pos","update","_data","detectChanges","_handleScrollBar","selectedRow","warn","_trackRowBy","trackRowBy","reset","originData","_removeTableDataRefresh","onRefresh","_removeAdditionalDataRefresh","_initAdditionalData","safeInvokeCallback","columnDefineGeneratorContext","find","colDef","Array","findIndex","_$handleRowDoubleClick","_$clickRow","suppressEvent","_rowElementRefs","addClass","nativeElement","removeClass","_addWindowListener","_removeWindowListener","runOutsideAngular","_removeWindowResizeListener","listen","_removeWindowScrollListener","_fixHeaderTop","_setVerticalScrollbarOffset","maxTop","offsetHeight","_tableHeaderElement","tableDocumentTop","internal_utils","offset","top","getScrollTop","setStyle","style","_$onSort","sortInfo","_headerComponents","comp","updateSortOrderClass","resetSort","_calculateContentWidth","host","tHeadColGroup","querySelectorAll","tBodyColGroup","tHeadTds","tBodyTds","contentWidth","table","querySelector","widthStorage","col","setAttribute","td","offsetWidth","colWidth","_calibrateTable","_updateScrollbar","tableHeader","tableBody","tableBodyRange","tableRange","_yScrollbarElement","contentScrollbar","geometry","x","_initVerticalScroll","yScrollbar","_bodyScrollbar","_listenHorizontalScroll","_removeHorizontalScrollListener","elementRef","ngAfterViewInit","_maxHeight","ngOnDestroy","common","table_inner_components_TableInternalCellBase","TableInternalCellBase","componentFactoryResolver","changeDetector","_column","_cellData","_updateDataInRenderer","_tableData","_initTargetData","prop","rendererRef","instance","context","targetData","rendererFactory","rendererHost","viewContainerRef","createEmbeddedView","componentFactory","resolveComponentFactory","componentRef","createComponent","insertRenderer","common_common","table_inner_components_JigsawTableHeaderInternalComponent","JigsawTableHeaderInternalComponent","resolver","sortOrder","_$sortOrderClass","jigsaw-table-sort-box","jigsaw-table-asc","asc","jigsaw-table-des","desc","_defaultSortOrder","newValue","_$sortAsc","_sort","_$sortDes","order","unsubscribe","table_inner_components_JigsawTableCellInternalComponent","JigsawTableCellInternalComponent","cfr","_editable","parentElement","_setGoEditListener","_emitDataChange","rows","column","refresh","oldCellData","_rendererSubscribe","subscribe","isUndefined","_editorRendererSubscribe","clear","insertEditorRenderer","editorRendererRef","_goEditCallback","RenderType_JigsawTableHeaderInternalComponent","View_JigsawTableHeaderInternalComponent_1","View_JigsawTableHeaderInternalComponent_2","View_JigsawTableHeaderInternalComponent_0","ngIf","RenderType_JigsawTableCellInternalComponent","View_JigsawTableCellInternalComponent_1","View_JigsawTableCellInternalComponent_0","RenderType_JigsawTable","View_JigsawTable_0","View_JigsawTable_1","$implicit","View_JigsawTable_3","trusted_html","platform_browser","trustedHtmlContext","trustedHtml","parent","innerHtml","View_JigsawTable_4","View_JigsawTable_2","ngSwitch","ngSwitchCase","View_JigsawTable_5","View_JigsawTable_7","View_JigsawTable_6","ngForOf","View_JigsawTable_10","View_JigsawTable_11","View_JigsawTable_12","View_JigsawTable_9","View_JigsawTable_8","ngx_perfect_scrollbar_es5","config","suppressScrollY","wheelSpeed","wheelPropagation","minScrollbarLength","suppressScrollX","currVal_1","currVal_7","JigsawCheckBox","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","_typings__WEBPACK_IMPORTED_MODULE_3__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_4__","_enableIndeterminate","unchecked","_valueCandidates","indeterminate","_setCheckBoxClass","ngAfterContentInit","labelEl","innerText","trim","_toggle","indexOf","_fixCheckValue","event","stopPropagation","preventDefault","jigsaw-checkbox","jigsaw-checkbox-checked","jigsaw-checkbox-indeterminate","jigsaw-checkbox-disabled","JigsawCheckBoxModule"],"mappings":"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","file":"6.782bb05d34b8faa95222.js","sourcesContent":["import {Component, Input, Output, EventEmitter, OnInit, forwardRef} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\n@Component({\n    selector: 'jigsaw-switch, j-switch',\n    templateUrl: './switch.html',\n    host: {\n        '[class.jigsaw-switch-host]': 'true',\n        '[class.jigsaw-switch-error]': '!valid'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawSwitch), multi: true},\n    ]\n})\n\nexport class JigsawSwitch implements ControlValueAccessor, OnInit {\n    @Input()\n    public valid: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$content: any; // 当前显示的内容.\n\n    /**\n     * 开关状态打开时的文本.(只支持字符串)\n     */\n    @Input()\n    public onLabel: any;\n\n    /**\n     * 开关状态关闭时显示的文本(只支持字符串)\n     */\n    @Input()\n    public offLabel: any;\n\n    /**\n     * size 默认 'default' 可选值 ‘small’\n     */\n    @Input()\n    public size: string = 'default';\n\n    private _checked: boolean = false;\n\n    /**\n     * 选中 默认值false;\n     *\n     */\n    @Input()\n    public get checked(): boolean  { return this._checked};\n    public set checked(value: boolean) {\n        this.writeValue(value);\n        this._propagateChange(value);\n    }\n\n    /**\n     * 可以忽略, 主要使checked 属性支持双向数据绑定.\n     */\n    @Output() public checkedChange = new EventEmitter<boolean>();\n\n    /**\n     * 对外暴露事件,\n     */\n    @Output() public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 是否禁用 类型 boolean 默认值 false;\n     *\n     */\n    @Input()\n    public get disabled(): boolean { return this._disabled; };\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setSwitchClass();\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClick() {\n        if(!this.disabled) {\n            this.checked = !this.checked;\n\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$switchClass: {};\n\n    /**\n     * 更新控件样式的方法\n     */\n    private _setSwitchClass() {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        }\n    }\n\n    /**\n     * 设置选中和费选中的值.\n     */\n    private _setInnerValue() {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    }\n\n    public ngOnInit() {\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    private _propagateChange: any = () => {};\n\n    public writeValue(value: any): void {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","import { EventEmitter, OnInit } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\n/**\n * @description 开关组件\n *\n * 何时使用\n * 只有两种状态切换时.\n */\nvar JigsawSwitch = /** @class */ (function () {\n    function JigsawSwitch() {\n        this.valid = true;\n        /**\n         * size 默认 'default' 可选值 ‘small’\n         */\n        this.size = 'default';\n        this._checked = false;\n        /**\n         * 可以忽略, 主要使checked 属性支持双向数据绑定.\n         */\n        this.checkedChange = new EventEmitter();\n        /**\n         * 对外暴露事件,\n         */\n        this.change = this.checkedChange;\n        this._disabled = false;\n        this._propagateChange = function () { };\n    }\n    Object.defineProperty(JigsawSwitch.prototype, \"checked\", {\n        /**\n         * 选中 默认值false;\n         *\n         */\n        get: function () { return this._checked; },\n        set: function (value) {\n            this.writeValue(value);\n            this._propagateChange(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    Object.defineProperty(JigsawSwitch.prototype, \"disabled\", {\n        /**\n         * 是否禁用 类型 boolean 默认值 false;\n         *\n         */\n        get: function () { return this._disabled; },\n        set: function (value) {\n            this._disabled = value;\n            this._setSwitchClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @internal\n     */\n    JigsawSwitch.prototype._$switchClick = function () {\n        if (!this.disabled) {\n            this.checked = !this.checked;\n            // 发出事件\n            this.checkedChange.emit(this.checked);\n            this._propagateChange(this.checked);\n        }\n    };\n    /**\n     * 更新控件样式的方法\n     */\n    JigsawSwitch.prototype._setSwitchClass = function () {\n        this._$switchClass = {\n            'jigsaw-switch': 'true',\n            'jigsaw-switch-small': this.size === 'small',\n            'jigsaw-switch-checked': this.checked,\n            'jigsaw-switch-disabled': this.disabled\n        };\n    };\n    /**\n     * 设置选中和费选中的值.\n     */\n    JigsawSwitch.prototype._setInnerValue = function () {\n        this._$content = this.checked ? this.onLabel : this.offLabel;\n    };\n    JigsawSwitch.prototype.ngOnInit = function () {\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.writeValue = function (value) {\n        this._checked = !!value;\n        this._setSwitchClass();\n        this._setInnerValue();\n    };\n    JigsawSwitch.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawSwitch.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawSwitch;\n}());\nexport { JigsawSwitch };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./table-renderer\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../common/service/popup.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"../checkbox/index\";\nimport * as i7 from \"../input/input\";\nimport * as i8 from \"../switch/index\";\nimport * as i9 from \"../tag/tag\";\nimport * as i10 from \"../../common/directive/float/index\";\nimport * as i11 from \"ngx-perfect-scrollbar\";\nimport * as i12 from \"../combo-select/index\";\nimport * as i13 from \"../list-and-tile/list\";\nimport * as i14 from \"../list-and-tile/list-lite\";\nimport * as i15 from \"../select/select\";\nimport * as i16 from \"../input/input.ngfactory\";\nimport * as i17 from \"../checkbox/checkbox.ngfactory\";\nimport * as i18 from \"../checkbox/checkbox\";\nimport * as i19 from \"../switch/switch.ngfactory\";\nimport * as i20 from \"../switch/switch\";\nimport * as i21 from \"../select/select.ngfactory\";\nvar JigsawTableRendererModuleNgFactory = i0.ɵcmf(i1.JigsawTableRendererModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.ɵangular_packages_forms_forms_o, i3.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i4.PopupService, i4.PopupService, [i0.ComponentFactoryResolver, i0.NgZone, [2, i5.Router], [2, i5.ActivatedRoute]]), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i6.JigsawCheckBoxModule, i6.JigsawCheckBoxModule, []), i0.ɵmpd(1073742336, i3.ɵangular_packages_forms_forms_d, i3.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i3.FormsModule, i3.FormsModule, []), i0.ɵmpd(1073742336, i7.JigsawInputModule, i7.JigsawInputModule, []), i0.ɵmpd(1073742336, i8.JigsawSwitchModule, i8.JigsawSwitchModule, []), i0.ɵmpd(1073742336, i9.JigsawTagModule, i9.JigsawTagModule, []), i0.ɵmpd(1073742336, i10.JigsawFloatModule, i10.JigsawFloatModule, []), i0.ɵmpd(1073742336, i11.PerfectScrollbarModule, i11.PerfectScrollbarModule, []), i0.ɵmpd(1073742336, i12.JigsawComboSelectModule, i12.JigsawComboSelectModule, []), i0.ɵmpd(1073742336, i13.JigsawListModule, i13.JigsawListModule, []), i0.ɵmpd(1073742336, i14.JigsawListLiteModule, i14.JigsawListLiteModule, []), i0.ɵmpd(1073742336, i15.JigsawSelectModule, i15.JigsawSelectModule, []), i0.ɵmpd(1073742336, i1.JigsawTableRendererModule, i1.JigsawTableRendererModule, [])]); });\nexport { JigsawTableRendererModuleNgFactory as JigsawTableRendererModuleNgFactory };\nvar styles_DefaultCellRenderer = [];\nvar RenderType_DefaultCellRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_DefaultCellRenderer, data: {} });\nexport { RenderType_DefaultCellRenderer as RenderType_DefaultCellRenderer };\nexport function View_DefaultCellRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-table-cell-text\"]], null, null, null, null, null)), (_l()(), i0.ɵted(1, null, [\"\", \"\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.cellData; _ck(_v, 1, 0, currVal_0); }); }\nexport function View_DefaultCellRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_DefaultCellRenderer_0, RenderType_DefaultCellRenderer)), i0.ɵdid(1, 245760, null, 0, i1.DefaultCellRenderer, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar DefaultCellRendererNgFactory = i0.ɵccf(\"ng-component\", i1.DefaultCellRenderer, View_DefaultCellRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { DefaultCellRendererNgFactory as DefaultCellRendererNgFactory };\nvar styles_TableCellTextEditorRenderer = [];\nvar RenderType_TableCellTextEditorRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_TableCellTextEditorRenderer, data: {} });\nexport { RenderType_TableCellTextEditorRenderer as RenderType_TableCellTextEditorRenderer };\nexport function View_TableCellTextEditorRenderer_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { input: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"jigsaw-input\", [[\"width\", \"100%\"]], [[4, \"width\", null], [4, \"height\", null], [2, \"jigsaw-input\", null], [2, \"jigsaw-input-error\", null], [2, \"jigsaw-input-focused\", null], [2, \"jigsaw-input-disabled\", null]], [[null, \"valueChange\"], [null, \"blur\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 3)._$stopPropagation($event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"valueChange\" === en)) {\n        var pd_1 = ((_co.cellData = $event) !== false);\n        ad = (pd_1 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_2 = (_co.dispatchChangeEvent(_co.cellData) !== false);\n        ad = (pd_2 && ad);\n    } return ad; }, i16.View_JigsawInput_0, i16.RenderType_JigsawInput)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i7.JigsawInput]), i0.ɵdid(3, 245760, [[1, 4], [\"input\", 4]], 0, i7.JigsawInput, [], { width: [0, \"width\"], value: [1, \"value\"], placeholder: [2, \"placeholder\"], blurOnClear: [3, \"blurOnClear\"] }, { _blurEmitter: \"blur\", valueChange: \"valueChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_6 = \"100%\"; var currVal_7 = _co.cellData; var currVal_8 = _co._$placeholder; var currVal_9 = false; _ck(_v, 3, 0, currVal_6, currVal_7, currVal_8, currVal_9); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 3).width; var currVal_1 = i0.ɵnov(_v, 3).height; var currVal_2 = true; var currVal_3 = !i0.ɵnov(_v, 3).valid; var currVal_4 = i0.ɵnov(_v, 3).focused; var currVal_5 = i0.ɵnov(_v, 3).disabled; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nexport function View_TableCellTextEditorRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_TableCellTextEditorRenderer_0, RenderType_TableCellTextEditorRenderer)), i0.ɵdid(1, 4440064, null, 0, i1.TableCellTextEditorRenderer, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableCellTextEditorRendererNgFactory = i0.ɵccf(\"ng-component\", i1.TableCellTextEditorRenderer, View_TableCellTextEditorRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { TableCellTextEditorRendererNgFactory as TableCellTextEditorRendererNgFactory };\nvar styles_TableHeadCheckboxRenderer = [];\nvar RenderType_TableHeadCheckboxRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_TableHeadCheckboxRenderer, data: {} });\nexport { RenderType_TableHeadCheckboxRenderer as RenderType_TableHeadCheckboxRenderer };\nexport function View_TableHeadCheckboxRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.checked = $event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i17.View_JigsawCheckBox_0, i17.RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i18.JigsawCheckBox]), i0.ɵdid(2, 1294336, null, 0, i18.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.checked; _ck(_v, 2, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_TableHeadCheckboxRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_TableHeadCheckboxRenderer_0, RenderType_TableHeadCheckboxRenderer)), i0.ɵdid(1, 245760, null, 0, i1.TableHeadCheckboxRenderer, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableHeadCheckboxRendererNgFactory = i0.ɵccf(\"ng-component\", i1.TableHeadCheckboxRenderer, View_TableHeadCheckboxRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { TableHeadCheckboxRendererNgFactory as TableHeadCheckboxRendererNgFactory };\nvar styles_TableCellCheckboxRenderer = [];\nvar RenderType_TableCellCheckboxRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_TableCellCheckboxRenderer, data: {} });\nexport { RenderType_TableCellCheckboxRenderer as RenderType_TableCellCheckboxRenderer };\nexport function View_TableCellCheckboxRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = (_co.onChange($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i17.View_JigsawCheckBox_0, i17.RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i18.JigsawCheckBox]), i0.ɵdid(2, 1294336, null, 0, i18.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_3 = _co.checked; _ck(_v, 2, 0, currVal_3); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nexport function View_TableCellCheckboxRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_TableCellCheckboxRenderer_0, RenderType_TableCellCheckboxRenderer)), i0.ɵdid(1, 245760, null, 0, i1.TableCellCheckboxRenderer, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableCellCheckboxRendererNgFactory = i0.ɵccf(\"ng-component\", i1.TableCellCheckboxRenderer, View_TableCellCheckboxRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { TableCellCheckboxRendererNgFactory as TableCellCheckboxRendererNgFactory };\nvar styles_TableCellSwitchRenderer = [];\nvar RenderType_TableCellSwitchRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_TableCellSwitchRenderer, data: {} });\nexport { RenderType_TableCellSwitchRenderer as RenderType_TableCellSwitchRenderer };\nexport function View_TableCellSwitchRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"j-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], [[null, \"checkedChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"checkedChange\" === en)) {\n        var pd_0 = ((_co.cellData = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"checkedChange\" === en)) {\n        var pd_1 = (_co.dispatchChangeEvent(_co.cellData) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i19.View_JigsawSwitch_0, i19.RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i20.JigsawSwitch]), i0.ɵdid(2, 114688, null, 0, i20.JigsawSwitch, [], { checked: [0, \"checked\"] }, { checkedChange: \"checkedChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_2 = _co.cellData; _ck(_v, 2, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nexport function View_TableCellSwitchRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_TableCellSwitchRenderer_0, RenderType_TableCellSwitchRenderer)), i0.ɵdid(1, 245760, null, 0, i1.TableCellSwitchRenderer, [], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableCellSwitchRendererNgFactory = i0.ɵccf(\"ng-component\", i1.TableCellSwitchRenderer, View_TableCellSwitchRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { TableCellSwitchRendererNgFactory as TableCellSwitchRendererNgFactory };\nvar styles_TableCellSelectRenderer = [];\nvar RenderType_TableCellSelectRenderer = i0.ɵcrt({ encapsulation: 2, styles: styles_TableCellSelectRenderer, data: {} });\nexport { RenderType_TableCellSelectRenderer as RenderType_TableCellSelectRenderer };\nexport function View_TableCellSelectRenderer_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-select\", [[\"height\", \"20\"], [\"optionCount\", \"5\"], [\"width\", \"100%\"]], [[2, \"jigsaw-select-host\", null], [2, \"jigsaw-select-single-select\", null], [4, \"min-width\", null], [4, \"max-width\", null], [4, \"width\", null]], [[null, \"valueChange\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"valueChange\" === en)) {\n        var pd_0 = (_co.dispatchChangeEvent($event.label) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i21.View_JigsawSelect_0, i21.RenderType_JigsawSelect)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i15.JigsawSelect]), i0.ɵdid(2, 245760, null, 0, i15.JigsawSelect, [], { width: [0, \"width\"], height: [1, \"height\"], optionCount: [2, \"optionCount\"], data: [3, \"data\"], value: [4, \"value\"] }, { valueChange: \"valueChange\" })], function (_ck, _v) { var _co = _v.component; var currVal_5 = \"100%\"; var currVal_6 = \"20\"; var currVal_7 = \"5\"; var currVal_8 = _co.data; var currVal_9 = _co.selected; _ck(_v, 2, 0, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).multipleSelect; var currVal_2 = (i0.ɵnov(_v, 2).multipleSelect ? i0.ɵnov(_v, 2).minWidth : \"none\"); var currVal_3 = (i0.ɵnov(_v, 2).multipleSelect ? i0.ɵnov(_v, 2).maxWidth : \"none\"); var currVal_4 = (!i0.ɵnov(_v, 2).multipleSelect ? i0.ɵnov(_v, 2).width : \"none\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4); }); }\nexport function View_TableCellSelectRenderer_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_TableCellSelectRenderer_0, RenderType_TableCellSelectRenderer)), i0.ɵdid(1, 245760, null, 0, i1.TableCellSelectRenderer, [i0.ChangeDetectorRef, i0.Renderer2], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar TableCellSelectRendererNgFactory = i0.ɵccf(\"ng-component\", i1.TableCellSelectRenderer, View_TableCellSelectRenderer_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", initData: \"initData\", tableData: \"tableData\", additionalData: \"additionalData\" }, { cellDataChange: \"cellDataChange\" }, []);\nexport { TableCellSelectRendererNgFactory as TableCellSelectRendererNgFactory };\n","<span class=\"jigsaw-table-cell-text\">{{cellData}}</span>","\n        <jigsaw-input #input [(value)]=\"cellData\" width=\"100%\" [blurOnClear]=\"false\" [placeholder]=\"_$placeholder\"\n                      (blur)=\"dispatchChangeEvent(cellData)\">\n        </jigsaw-input>\n    ","\n        <jigsaw-checkbox [(checked)]=\"checked\"></jigsaw-checkbox>","\n        <jigsaw-checkbox [checked]=\"checked\" (checkedChange)=\"onChange($event)\">\n        </jigsaw-checkbox>\n    ","<j-switch [(checked)]=\"cellData\" (checkedChange)=\"dispatchChangeEvent(cellData)\"></j-switch>","\n        <jigsaw-select [value]=\"selected\" [data]=\"data\"\n                       (valueChange)=\"dispatchChangeEvent($event.label)\"\n                       optionCount=\"5\" width=\"100%\" height=\"20\">\n        </jigsaw-select>\n    ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * Created by 10177553 on 2017/3/14.\n\r\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./checkbox\";\nvar styles_JigsawCheckBox = [];\nvar RenderType_JigsawCheckBox = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawCheckBox, data: {} });\nexport { RenderType_JigsawCheckBox as RenderType_JigsawCheckBox };\nexport function View_JigsawCheckBox_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 5, \"label\", [[\"class\", \"jigsaw-checkbox-wrapper\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$onCheckboxClick($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"span\", [], null, null, null, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(3, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(4, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-checkbox-label\"]], null, null, null, null, null)), i0.ɵncd(null, 0)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$checkboxClass; _ck(_v, 3, 0, currVal_0); }, null); }\nexport function View_JigsawCheckBox_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-checkbox\", [], [[4, \"width\", null], [2, \"jigsaw-checkbox-host\", null], [2, \"jigsaw-checkbox-error\", null]], null, null, View_JigsawCheckBox_0, RenderType_JigsawCheckBox)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawCheckBox]), i0.ɵdid(2, 1294336, null, 0, i3.JigsawCheckBox, [i0.Renderer2, i0.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = true; var currVal_2 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nvar JigsawCheckBoxNgFactory = i0.ɵccf(\"jigsaw-checkbox, j-checkbox\", i3.JigsawCheckBox, View_JigsawCheckBox_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", enableIndeterminate: \"enableIndeterminate\", checked: \"checked\", disabled: \"disabled\", valid: \"valid\" }, { checkedChange: \"checkedChange\", change: \"change\" }, [\"*\"]);\nexport { JigsawCheckBoxNgFactory as JigsawCheckBoxNgFactory };\n","<label class=\"jigsaw-checkbox-wrapper\" (click)=\"_$onCheckboxClick($event)\">\n    <span [ngClass]=\"_$checkboxClass\"></span>\n    <span class=\"jigsaw-checkbox-label\">\n        <ng-content></ng-content>\n    </span>\n</label>\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"./switch\";\nvar styles_JigsawSwitch = [];\nvar RenderType_JigsawSwitch = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawSwitch, data: {} });\nexport { RenderType_JigsawSwitch as RenderType_JigsawSwitch };\nexport function View_JigsawSwitch_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$switchClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-switch-inner\"]], null, null, null, null, null)), (_l()(), i0.ɵted(4, null, [\"\", \"\"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$switchClass; _ck(_v, 2, 0, currVal_0); }, function (_ck, _v) { var _co = _v.component; var currVal_1 = _co._$content; _ck(_v, 4, 0, currVal_1); }); }\nexport function View_JigsawSwitch_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-switch\", [], [[2, \"jigsaw-switch-host\", null], [2, \"jigsaw-switch-error\", null]], null, null, View_JigsawSwitch_0, RenderType_JigsawSwitch)), i0.ɵprd(5120, null, i2.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.JigsawSwitch]), i0.ɵdid(2, 114688, null, 0, i3.JigsawSwitch, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = true; var currVal_1 = !i0.ɵnov(_v, 2).valid; _ck(_v, 0, 0, currVal_0, currVal_1); }); }\nvar JigsawSwitchNgFactory = i0.ɵccf(\"jigsaw-switch, j-switch\", i3.JigsawSwitch, View_JigsawSwitch_Host_0, { valid: \"valid\", onLabel: \"onLabel\", offLabel: \"offLabel\", size: \"size\", checked: \"checked\", disabled: \"disabled\" }, { checkedChange: \"checkedChange\", change: \"change\" }, []);\nexport { JigsawSwitchNgFactory as JigsawSwitchNgFactory };\n","<div [ngClass]=\"_$switchClass\" (click)=\"_$switchClick()\">\n    <div class=\"jigsaw-switch-inner\">{{_$content}}</div>\n</div>\n","/**\n * Created by 10177553 on 2017/3/16.\n */\nimport { NgModule } from '@angular/core';\nimport {CommonModule} from \"@angular/common\";\n\nimport { JigsawSwitch } from './switch';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawSwitch],\n    declarations: [JigsawSwitch],\n    providers: [],\n})\nexport class JigsawSwitchModule { }\n\nexport * from './switch';\n","import {\n    ColumnDefine, TableCellSetting, TableHeadSetting, TableSyncRenderer\n} from \"./table-typings\";\nimport {SortAs, SortOrder} from \"../../common/core/data/component-data\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\nimport {TableCellRendererBase} from \"./table-renderer\";\n\nexport class TableUtils {\n    public static updateHeaderSettings(columnDefine: ColumnDefine, settings: TableHeadSetting): TableHeadSetting {\n        if (!settings) {\n            settings = {\n                cellData: null, width: null, visible: true, renderer: null, clazz: '', field: '',\n                sortable: false, sortAs: SortAs.string, defaultSortOrder: SortOrder.default, innerHtmlContext: null\n            };\n        }\n        settings.width = columnDefine.width;\n        settings.field = <string>columnDefine.target;\n        let headerDef = columnDefine.header;\n        if (headerDef) {\n            settings.cellData = CommonUtils.isDefined(headerDef.text) ? headerDef.text : settings.cellData;\n            settings.renderer = TableUtils.getRenderer(headerDef.renderer);\n            settings.clazz = headerDef.clazz;\n            settings.sortable = headerDef.sortable;\n            settings.sortAs = CommonUtils.isDefined(headerDef.sortAs) ? headerDef.sortAs : settings.sortAs;\n            settings.defaultSortOrder = CommonUtils.isDefined(headerDef.sortAs) ?\n                headerDef.defaultSortOrder : settings.defaultSortOrder;\n            settings.innerHtmlContext = headerDef.innerHtmlContext;\n        }\n        return settings;\n    }\n\n    public static updateCellSettings(columnDefine: ColumnDefine, settings: TableCellSetting): TableCellSetting {\n        if (!settings) {\n            settings = {\n                cellData: '', width: null, visible: true, renderer: null, rendererInitData: null, clazz: '', rowSpan: 1,\n                editable: false, editorRenderer: null, editorRendererInitData: null, group: null, field: null, tooltip: null, innerHtmlContext: null\n            }\n        }\n        settings.width = columnDefine.width;\n        settings.group = columnDefine.group;\n        settings.field = <string>columnDefine.target;\n        let cellDef = columnDefine.cell;\n        if (cellDef) {\n            settings.renderer = TableUtils.getRenderer(cellDef.renderer);\n            settings.rendererInitData = cellDef.rendererInitData;\n            settings.clazz = cellDef.clazz;\n            settings.editable = cellDef.editable;\n            settings.editorRenderer = TableUtils.getRenderer(cellDef.editorRenderer);\n            settings.editorRendererInitData = cellDef.editorRendererInitData;\n            settings.tooltip = cellDef.tooltip;\n            settings.innerHtmlContext = cellDef.innerHtmlContext;\n        }\n        return settings;\n    }\n\n    public static getRenderer(renderer): TableSyncRenderer {\n        if (renderer instanceof Function && !(renderer.prototype instanceof TableCellRendererBase)) {\n            try {\n                return renderer();\n            } catch (e) {\n                return undefined;\n            }\n        }\n        return renderer;\n    }\n\n    public static getGenerator(columnDefine: ColumnDefine, property: string): Function {\n        return columnDefine.cell && columnDefine.cell[property] instanceof Function ? columnDefine.cell[property] : null;\n    }\n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, ChangeDetectorRef, ElementRef, EventEmitter, NgZone, OnDestroy, OnInit, QueryList, Renderer2 } from \"@angular/core\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { JigsawTableHeaderInternalComponent } from \"./table-inner.components\";\nimport { TableData } from \"../../common/core/data/table-data\";\nimport { _getColumnIndex, AdditionalTableData } from \"./table-typings\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\nimport { SortOrder } from \"../../common/core/data/component-data\";\nimport { DefaultCellRenderer, TableCellTextEditorRenderer } from \"./table-renderer\";\nimport { AffixUtils } from \"../../common/core/utils/internal-utils\";\nimport { PerfectScrollbarDirective } from \"ngx-perfect-scrollbar\";\nimport { TableUtils } from \"./table-utils\";\nvar JigsawTable = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTable, _super);\n    function JigsawTable(_renderer, _elementRef, _zone, _changeDetectorRef) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._zone = _zone;\n        _this._changeDetectorRef = _changeDetectorRef;\n        _this.sort = new EventEmitter();\n        _this._contentWidth = 'auto';\n        _this.hideHeader = false;\n        _this.selectChange = new EventEmitter();\n        _this.selectedRowChange = new EventEmitter();\n        /**\n         * @internal\n         */\n        _this._$headerSettings = [];\n        _this._headerSettingsBackup = {};\n        /**\n         * @internal\n         */\n        _this._$cellSettings = [];\n        _this._cellSettingsBackup = {};\n        _this._additionalData = new AdditionalTableData();\n        _this.additionalDataChange = new EventEmitter();\n        _this.edit = new EventEmitter();\n        _this._additionalColumnDefines = [];\n        _this.doubleClick = new EventEmitter();\n        _this.floatingHeader = false;\n        /**\n         * @internal\n         */\n        _this._$noDataSrc = CommonUtils.noDataImageSrc;\n        if (CommonUtils.getBrowserType() == 'Firefox') {\n            _this._$isFFBrowser = true;\n        }\n        return _this;\n    }\n    Object.defineProperty(JigsawTable.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = CommonUtils.getCssValue(value);\n            this.callLater(this.resize, this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTable.prototype, \"contentWidth\", {\n        get: function () {\n            return this._contentWidth;\n        },\n        set: function (value) {\n            this._contentWidth = CommonUtils.getCssValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTable.prototype, \"selectedRow\", {\n        get: function () {\n            return this._selectedRow;\n        },\n        set: function (value) {\n            if (this._selectedRow === value) {\n                return;\n            }\n            this._selectedRow = value;\n            if (this.initialized) {\n                this._selectRow(value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTable.prototype._getColumnIndex = function (field) {\n        return _getColumnIndex(this.data, this._additionalData, field);\n    };\n    JigsawTable.prototype._getHeaderValueByField = function (field) {\n        var _a = this._getColumnIndex(field), index = _a[0], tableData = _a[1];\n        if (index == -1) {\n            console.error('no header value found, unknown field: ' + field);\n            return '';\n        }\n        return tableData.header[index];\n    };\n    JigsawTable.prototype._updateHeaderSettings = function (columnDefines) {\n        var _this = this;\n        var oldBackup = CommonUtils.shallowCopy(this._headerSettingsBackup);\n        this._headerSettingsBackup = {};\n        this._$headerSettings.splice(0, this._$headerSettings.length);\n        columnDefines.forEach(function (columnDefine) {\n            if (columnDefine.visible === false) {\n                return;\n            }\n            var field = columnDefine.target;\n            var realColIndex = _this._getColumnIndex(field)[0];\n            var settings = oldBackup[field];\n            settings = TableUtils.updateHeaderSettings(columnDefine, settings);\n            var headerData = columnDefine.header && columnDefine.header.data ? columnDefine.header.data : null;\n            if (headerData instanceof Function) {\n                settings.cellData = headerData(_this.data, realColIndex, _this._additionalData);\n            }\n            else if (typeof headerData == 'string') {\n                settings.cellData = headerData;\n            }\n            else {\n                settings.cellData = _this._getHeaderValueByField(field);\n            }\n            _this._$headerSettings.push(settings);\n            _this._headerSettingsBackup[field] = settings;\n        });\n    };\n    /**\n     * 没有cellData generator获取数据的情况\n     * @param field\n     * @param row\n     *\n     *\n     */\n    JigsawTable.prototype._getCellDataByField = function (field, row) {\n        var _a = this._getColumnIndex(field), index = _a[0], tableData = _a[1];\n        if (index == -1) {\n            console.error('no cell data found, unknown field: ' + field);\n            return '';\n        }\n        if (!tableData.data[row]) {\n            tableData.data[row] = [];\n        }\n        if (tableData instanceof AdditionalTableData) {\n            // 没有cellData generator获取数据的情况\n            // 如果是AdditionalTableData，重新reset AdditionalTableData，cellData取空值，\n            // 在renderer里面通过touchedValue取真实的值，见issue522\n            tableData.data[row][index] = '';\n        }\n        return tableData.data[row][index];\n    };\n    JigsawTable.prototype._updateAdditionalData = function (field, row, cellData) {\n        var _a = this._getColumnIndex(field), index = _a[0], tableData = _a[1];\n        if (index == -1) {\n            console.error('no cell data found, unknown field: ' + field);\n            return;\n        }\n        if (!tableData.data[row]) {\n            tableData.data[row] = [];\n        }\n        if (tableData instanceof AdditionalTableData) {\n            tableData.data[row][index] = cellData;\n        }\n    };\n    JigsawTable.prototype._updateCellSettings = function (columnDefines) {\n        var _this = this;\n        // clear origin settings, but keep the origin row array ref,\n        // which will avoid ngFor from re-rendering the dom\n        this._$cellSettings.forEach(function (row) { return row.splice(0, row.length); });\n        var dataLen = this.data.data.length;\n        // remove extra lines if necessary\n        this._$cellSettings.splice(dataLen, this._$cellSettings.length);\n        this._additionalData.data.splice(dataLen, this._$cellSettings.length);\n        var oldBackup = CommonUtils.shallowCopy(this._cellSettingsBackup);\n        this._cellSettingsBackup = {};\n        columnDefines.forEach(function (columnDefine) {\n            if (columnDefine.visible === false) {\n                return;\n            }\n            var field = columnDefine.target;\n            // prepare for backing up the new settings\n            _this._cellSettingsBackup[field] = [];\n            var realColIndex = _this._getColumnIndex(field)[0];\n            var groupSetting;\n            var settings;\n            for (var rowIndex = 0; rowIndex < dataLen; rowIndex++) {\n                settings = oldBackup[field] ? oldBackup[field][rowIndex] : undefined;\n                settings = TableUtils.updateCellSettings(columnDefine, settings);\n                // reset the rowSpan value, it will be recomputed later.\n                settings.rowSpan = 1;\n                _this._cellSettingsBackup[field].push(settings);\n                if (!_this._$cellSettings[rowIndex]) {\n                    _this._$cellSettings.push([]);\n                }\n                _this._$cellSettings[rowIndex].push(settings);\n                if (settings.editable) {\n                    settings.renderer = settings.renderer ? settings.renderer : DefaultCellRenderer;\n                    settings.editorRenderer = settings.editorRenderer ? settings.editorRenderer : TableCellTextEditorRenderer;\n                }\n                var cellDataGenerator = TableUtils.getGenerator(columnDefine, 'data');\n                if (cellDataGenerator) {\n                    settings.cellData = cellDataGenerator(_this.data, rowIndex, realColIndex, _this._additionalData);\n                    _this._updateAdditionalData(field, rowIndex, settings.cellData);\n                }\n                else if (columnDefine.cell && typeof columnDefine.cell.data == 'string') {\n                    settings.cellData = columnDefine.cell.data;\n                    _this._updateAdditionalData(field, rowIndex, settings.cellData);\n                }\n                else {\n                    settings.cellData = _this._getCellDataByField(field, rowIndex);\n                }\n                settings.cellData = CommonUtils.isDefined(settings.cellData) ? settings.cellData : '';\n                // generate a tooltip if necessary\n                var tooltipGenerator = TableUtils.getGenerator(columnDefine, 'tooltip');\n                if (tooltipGenerator) {\n                    settings.tooltip = tooltipGenerator(_this.data, rowIndex, realColIndex, _this._additionalData);\n                }\n                else if (columnDefine.cell && CommonUtils.isDefined(columnDefine.cell.tooltip)) {\n                    settings.tooltip = columnDefine.cell.tooltip;\n                }\n                else {\n                    settings.tooltip = '';\n                }\n                // 修改settings的group属性\n                if (columnDefine.group) {\n                    if (groupSetting && groupSetting.cellData == settings.cellData) {\n                        groupSetting.rowSpan++;\n                        settings.rowSpan = 0;\n                    }\n                    else {\n                        groupSetting = settings;\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * 生成混合后的列定义序列\n     *\n     *\n     */\n    JigsawTable.prototype._getMixedColumnDefines = function () {\n        var _this = this;\n        if (!this.data) {\n            return [];\n        }\n        var columnDefines = [];\n        this.data.field.forEach(function (field, index) {\n            var cd = _this._columnDefineGenerator(field, index);\n            if (cd) {\n                cd = CommonUtils.shallowCopy(cd);\n                cd.target = field;\n            }\n            columnDefines.push(cd ? cd : { target: field });\n        });\n        if (this._additionalColumnDefines) {\n            for (var i = this._additionalColumnDefines.length - 1; i >= 0; i--) {\n                var acd = this._additionalColumnDefines[i];\n                var cd = {\n                    target: 'additional-field-' + i, header: acd.header, group: acd.group,\n                    cell: acd.cell, width: acd.width, visible: acd.visible\n                };\n                var pos = CommonUtils.isDefined(acd.pos) ? acd.pos : columnDefines.length;\n                columnDefines.splice(pos, 0, cd);\n            }\n        }\n        return columnDefines;\n    };\n    JigsawTable.prototype.update = function () {\n        var _this = this;\n        if (!this.initialized || !this._data) {\n            return;\n        }\n        if (!this._data.field || this._data.field.length == 0) {\n            console.warn('invalid table data, need a \"field\" property.');\n            return;\n        }\n        var columnDefines = this._getMixedColumnDefines();\n        this._updateHeaderSettings(columnDefines);\n        this._updateCellSettings(columnDefines);\n        this._changeDetectorRef.detectChanges();\n        this.callLater(function () {\n            // 等待additionalTableData在renderer更新完成\n            _this.additionalDataChange.emit(_this.additionalData);\n            // 等待滚动条初始化\n            _this._handleScrollBar();\n            // 自动再次标记选中行\n            _this._selectRow(_this.selectedRow);\n        });\n    };\n    Object.defineProperty(JigsawTable.prototype, \"additionalData\", {\n        get: function () {\n            return this._additionalData;\n        },\n        set: function (value) {\n            //ignore incoming data.\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTable.prototype, \"trackRowBy\", {\n        get: function () {\n            return this._trackRowBy;\n        },\n        set: function (value) {\n            this._trackRowBy = value;\n            this._additionalData.trackRowBy = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTable.prototype, \"data\", {\n        get: function () {\n            return this._data;\n        },\n        set: function (value) {\n            if (value == this._data || !value) {\n                return;\n            }\n            this._data = value;\n            this._additionalData.reset();\n            this._additionalData.originData = value;\n            this.update();\n            if (this._removeTableDataRefresh) {\n                this._removeTableDataRefresh();\n            }\n            this._removeTableDataRefresh = value.onRefresh(this.update, this);\n            if (!this._removeAdditionalDataRefresh) {\n                this._removeAdditionalDataRefresh = this._additionalData.onRefresh(this.update, this);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawTable.prototype, \"additionalColumnDefines\", {\n        get: function () {\n            return this._additionalColumnDefines;\n        },\n        set: function (value) {\n            this._additionalColumnDefines = value;\n            this._initAdditionalData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTable.prototype._columnDefineGenerator = function (field, index) {\n        if (!this.columnDefines) {\n            return undefined;\n        }\n        if (this.columnDefines instanceof Function) {\n            return CommonUtils.safeInvokeCallback(this.columnDefineGeneratorContext, this.columnDefines, [field, index]);\n        }\n        else {\n            return this.columnDefines.find(function (colDef) {\n                var targets = colDef.target instanceof Array ? colDef.target : [colDef.target];\n                var idx = targets.findIndex(function (target) {\n                    return (typeof target === 'number' && target === index) || (typeof target === 'string' && target === field);\n                });\n                return idx != -1;\n            });\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTable.prototype._$handleRowDoubleClick = function (rowIndex) {\n        this.doubleClick.emit(rowIndex);\n    };\n    /**\n     * @internal\n     */\n    JigsawTable.prototype._$clickRow = function (rowIndex) {\n        if (this._selectedRow === rowIndex) {\n            return;\n        }\n        this._selectedRow = rowIndex;\n        this._selectRow(rowIndex);\n    };\n    JigsawTable.prototype._selectRow = function (rowIndex, suppressEvent) {\n        var _this = this;\n        if (suppressEvent === void 0) { suppressEvent = false; }\n        this._rowElementRefs.forEach(function (row, index) {\n            if (index === rowIndex) {\n                _this._renderer.addClass(row.nativeElement, 'jigsaw-table-row-selected');\n                if (!suppressEvent) {\n                    _this.selectChange.emit(rowIndex);\n                    _this.selectedRowChange.emit(rowIndex);\n                }\n            }\n            else {\n                _this._renderer.removeClass(row.nativeElement, 'jigsaw-table-row-selected');\n            }\n        });\n    };\n    JigsawTable.prototype._addWindowListener = function () {\n        var _this = this;\n        this._removeWindowListener();\n        this._zone.runOutsideAngular(function () {\n            _this._removeWindowResizeListener = _this._renderer.listen('window', 'resize', function () { return _this.resize(); });\n        });\n        if (this.floatingHeader && !this.hideHeader) {\n            this._zone.runOutsideAngular(function () {\n                _this._removeWindowScrollListener = _this._renderer.listen('window', 'scroll', function () { return _this._fixHeaderTop(); });\n            });\n        }\n    };\n    JigsawTable.prototype.resize = function () {\n        this._fixHeaderTop();\n        this._handleScrollBar();\n        this._setVerticalScrollbarOffset();\n    };\n    JigsawTable.prototype._fixHeaderTop = function () {\n        if (!this.floatingHeader || this.hideHeader) {\n            return;\n        }\n        var maxTop = this._elementRef.nativeElement.offsetHeight - this._tableHeaderElement.offsetHeight;\n        var tableDocumentTop = AffixUtils.offset(this._elementRef.nativeElement).top;\n        var scrollTop = AffixUtils.getScrollTop();\n        var top = scrollTop - tableDocumentTop;\n        if (top > 0 && top < maxTop) {\n            this._renderer.setStyle(this._tableHeaderElement, 'top', top + 'px');\n        }\n        else if (top <= 0) {\n            if (this._tableHeaderElement.style.top !== '0' && this._tableHeaderElement.style.top !== '0px') {\n                this._renderer.setStyle(this._tableHeaderElement, 'top', '0');\n            }\n        }\n        else if (top >= maxTop) {\n            // table超出屏幕显示位置\n        }\n    };\n    JigsawTable.prototype._removeWindowListener = function () {\n        if (this._removeWindowScrollListener) {\n            this._removeWindowScrollListener();\n            this._removeWindowScrollListener = null;\n        }\n        if (this._removeWindowResizeListener) {\n            this._removeWindowResizeListener();\n            this._removeWindowResizeListener = null;\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawTable.prototype._$onSort = function (sortInfo) {\n        this._headerComponents.forEach(function (comp) { return sortInfo.field != comp.field && comp.updateSortOrderClass(SortOrder.default); });\n        this.sort.emit(sortInfo);\n    };\n    /**\n     * 手动重置sort按钮样式\n     */\n    JigsawTable.prototype.resetSort = function () {\n        this._headerComponents.forEach(function (comp) { return comp.updateSortOrderClass(comp.defaultSortOrder); });\n    };\n    JigsawTable.prototype._initAdditionalData = function () {\n        var _this = this;\n        if (!this._additionalColumnDefines) {\n            return;\n        }\n        this._additionalData.field = [];\n        this._additionalData.header = [];\n        this._additionalColumnDefines.forEach(function (acd, i) {\n            _this._additionalData.field.push('additional-field-' + i);\n            _this._additionalData.header.push(acd.header.text);\n        });\n    };\n    /**\n     * 根据内容计算自适应列宽\n     *\n     */\n    JigsawTable.prototype._calculateContentWidth = function () {\n        var _this = this;\n        var host = this._elementRef.nativeElement;\n        var tHeadColGroup = host.querySelectorAll('.jigsaw-table-header > colgroup col');\n        var tBodyColGroup = host.querySelectorAll('.jigsaw-table-body > colgroup col');\n        var tHeadTds = host.querySelectorAll('.jigsaw-table-header > thead td');\n        var tBodyTds = host.querySelectorAll('.jigsaw-table-body > thead td');\n        if (this.contentWidth != 'auto' || !tHeadColGroup || !tHeadColGroup.length)\n            return;\n        host.querySelectorAll('table').forEach(function (table) {\n            _this._renderer.setStyle(table, 'table-layout', 'auto');\n        });\n        // 设置表头随内容撑开\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'width', 'auto');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'white-space', 'nowrap');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body'), 'width', 'auto');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body-range'), 'width', '100%');\n        var widthStorage = [];\n        // 清空col的width\n        tHeadColGroup.forEach(function (col) { return col.setAttribute('width', ''); });\n        tBodyColGroup.forEach(function (col) { return col.setAttribute('width', ''); });\n        if (this._$isFFBrowser) {\n            tHeadTds.forEach(function (col) { return col.setAttribute('width', ''); });\n            tBodyTds.forEach(function (col) { return col.setAttribute('width', ''); });\n        }\n        host.querySelectorAll('.jigsaw-table-body > tbody tr:first-child td')\n            .forEach(function (td) { return widthStorage.push(td.offsetWidth); });\n        if (widthStorage.length) {\n            host.querySelectorAll('.jigsaw-table-header > thead tr:first-child td')\n                .forEach(function (td, index) {\n                if (td.offsetWidth > widthStorage[index]) {\n                    widthStorage[index] = td.offsetWidth;\n                }\n            });\n        }\n        else {\n            host.querySelectorAll('.jigsaw-table-header > thead tr:first-child td')\n                .forEach(function (td) {\n                widthStorage.push(td.offsetWidth);\n            });\n        }\n        widthStorage.forEach(function (width, index) {\n            // columnDefine定义过的列宽不会被覆盖\n            var colWidth = _this._$headerSettings && _this._$headerSettings[index] && _this._$headerSettings[index].width ? _this._$headerSettings[index].width : width;\n            tHeadColGroup[index] && tHeadColGroup[index].setAttribute('width', colWidth);\n            tBodyColGroup[index] && tBodyColGroup[index].setAttribute('width', colWidth);\n            if (_this._$isFFBrowser) {\n                tHeadTds[index] && tHeadTds[index].setAttribute('width', colWidth);\n                tBodyTds[index] && tBodyTds[index].setAttribute('width', colWidth);\n            }\n        });\n        // 还原\n        host.querySelectorAll('table').forEach(function (table) {\n            _this._renderer.setStyle(table, 'table-layout', 'fixed');\n        });\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'width', '100%');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'white-space', 'normal');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body'), 'width', '100%');\n    };\n    /**\n     * 处理滚动条\n     *\n     */\n    JigsawTable.prototype._handleScrollBar = function () {\n        this._calculateContentWidth();\n        this._calibrateTable();\n        this._updateScrollbar();\n    };\n    /**\n     * 校正表头表体的宽度\n     *\n     */\n    JigsawTable.prototype._calibrateTable = function () {\n        var host = this._elementRef.nativeElement;\n        var tableHeader = host.querySelector('table.jigsaw-table-header');\n        var tableBody = host.querySelector('table.jigsaw-table-body');\n        var tableBodyRange = host.querySelector('.jigsaw-table-body-range');\n        var tableRange = host.querySelector('.jigsaw-table-range');\n        // table body's width is always not less than the host component\n        if (host.offsetWidth > tableBody.offsetWidth) {\n            this._renderer.setStyle(tableBody, 'width', host.offsetWidth + 'px');\n        }\n        // table body range's width is always equal to table body's\n        if (tableBodyRange.offsetWidth != tableBody.offsetWidth) {\n            this._renderer.setStyle(tableBodyRange, 'width', tableBody.offsetWidth + 'px');\n        }\n        // table header's width is always equal to table body's\n        if (tableHeader.offsetWidth != tableBody.offsetWidth) {\n            this._renderer.setStyle(tableHeader, 'width', tableBody.offsetWidth + 'px');\n        }\n        // 根据表头的高度，设置表体的padding-top\n        if (this.hideHeader) {\n            this._renderer.setStyle(tableRange, 'padding-top', 0);\n        }\n        else {\n            this._renderer.setStyle(tableRange, 'padding-top', tableHeader.offsetHeight + 'px');\n        }\n    };\n    /**\n     * 设置纵向滚动条位置\n     *\n     */\n    JigsawTable.prototype._setVerticalScrollbarOffset = function () {\n        if (this._yScrollbarElement) {\n            this._renderer.setStyle(this._yScrollbarElement, 'left', this._elementRef.nativeElement.offsetWidth + this.contentScrollbar.geometry().x - 15 + 'px');\n        }\n    };\n    /**\n     * 找到纵向滚动条，并设置初始位置\n     *\n     */\n    JigsawTable.prototype._initVerticalScroll = function () {\n        var _this = this;\n        this.callLater(function () {\n            // selector使用>选择直接子元素，避免选择到其他滚动条\n            var yScrollbar = _this._elementRef.nativeElement.querySelector('.jigsaw-table-body-range > .ps__rail-y');\n            if (yScrollbar) {\n                _this._renderer.setStyle(yScrollbar, 'left', _this._elementRef.nativeElement.offsetWidth - 15 + 'px');\n                _this._yScrollbarElement = yScrollbar;\n            }\n            else {\n                _this._initVerticalScroll();\n            }\n        });\n    };\n    /**\n     * 当内容数据变化时，刷新一下滚动条\n     *\n     */\n    JigsawTable.prototype._updateScrollbar = function () {\n        if (this.contentScrollbar) {\n            this.contentScrollbar.update();\n        }\n        if (this._bodyScrollbar) {\n            this._bodyScrollbar.update();\n        }\n    };\n    /**\n     * 监听横向滚动事件，更新纵向滚动条的位置\n     *\n     */\n    JigsawTable.prototype._listenHorizontalScroll = function () {\n        var _this = this;\n        if (!this.contentScrollbar) {\n            return;\n        }\n        this._zone.runOutsideAngular(function () {\n            var el = _this.contentScrollbar.elementRef.nativeElement;\n            _this._removeHorizontalScrollListener = _this._renderer.listen(el, 'ps-scroll-x', function () { return _this._setVerticalScrollbarOffset(); });\n        });\n    };\n    JigsawTable.prototype.ngAfterViewInit = function () {\n        this._selectRow(this.selectedRow, true);\n        // 初始化滚动条\n        this._initVerticalScroll();\n        this._listenHorizontalScroll();\n    };\n    JigsawTable.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n        if (this._data && this._data.field && this._data.field.length != 0) {\n            this.update();\n        }\n        this._addWindowListener();\n        this._renderer.setStyle(this._elementRef.nativeElement.querySelector('.jigsaw-table-body-range'), 'max-height', this._maxHeight);\n        this._tableHeaderElement = this._elementRef.nativeElement.querySelector(\".jigsaw-table-header\");\n    };\n    JigsawTable.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._removeTableDataRefresh) {\n            this._removeTableDataRefresh();\n            this._removeTableDataRefresh = null;\n        }\n        if (this._removeAdditionalDataRefresh) {\n            this._removeAdditionalDataRefresh();\n            this._removeAdditionalDataRefresh = null;\n        }\n        if (this._removeHorizontalScrollListener) {\n            this._removeHorizontalScrollListener();\n            this._removeHorizontalScrollListener = null;\n        }\n        this._removeWindowListener();\n        this.columnDefines = null;\n        this._additionalColumnDefines = null;\n        this._data = null;\n        this._headerSettingsBackup = null;\n        this._cellSettingsBackup = null;\n        this._$cellSettings = null;\n        this._$headerSettings = null;\n        this._tableHeaderElement = null;\n        this._rowElementRefs = null;\n        this._headerComponents = null;\n    };\n    return JigsawTable;\n}(AbstractJigsawComponent));\nexport { JigsawTable };\nvar JigsawTableModule = /** @class */ (function () {\n    function JigsawTableModule() {\n    }\n    return JigsawTableModule;\n}());\nexport { JigsawTableModule };\n","\nimport {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    NgModule,\n    NgZone,\n    OnDestroy,\n    OnInit,\n    Output,\n    QueryList,\n    Renderer2,\n    ViewChild,\n    ViewChildren\n} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {AbstractJigsawComponent, JigsawCommonModule} from \"../../common/common\";\nimport {JigsawTableCellInternalComponent, JigsawTableHeaderInternalComponent} from \"./table-inner.components\";\nimport {TableData} from \"../../common/core/data/table-data\";\n\nimport {\n    _getColumnIndex,\n    AdditionalColumnDefine,\n    AdditionalTableData,\n    ColumnDefine,\n    ColumnDefineGenerator,\n    SortChangeEvent,\n    TableCellSetting,\n    TableDataChangeEvent,\n    TableHeadSetting\n} from \"./table-typings\";\nimport {CallbackRemoval, CommonUtils} from \"../../common/core/utils/common-utils\";\nimport {SortOrder} from \"../../common/core/data/component-data\";\nimport {\n    DefaultCellRenderer,\n    JigsawTableRendererModule,\n    TableCellCheckboxRenderer,\n    TableCellSelectRenderer,\n    TableCellSwitchRenderer,\n    TableCellTextEditorRenderer,\n    TableHeadCheckboxRenderer\n} from \"./table-renderer\";\nimport {AffixUtils} from \"../../common/core/utils/internal-utils\";\nimport {PerfectScrollbarDirective, PerfectScrollbarModule} from \"ngx-perfect-scrollbar\";\nimport {TableUtils} from \"./table-utils\";\nimport {JigsawTrustedHtmlModule} from \"../../common/directive/trusted-html/trusted-html\";\n\n@Component({\n    selector: 'jigsaw-table, j-table',\n    templateUrl: 'table.html',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '[class.jigsaw-table-host]': 'true',\n        '[class.jigsaw-table-ff]': '_$isFFBrowser'\n    },\n})\nexport class JigsawTable extends AbstractJigsawComponent implements OnInit, AfterViewInit, OnDestroy {\n\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef,\n                private _zone: NgZone, private _changeDetectorRef: ChangeDetectorRef) {\n        super();\n        if (CommonUtils.getBrowserType() == 'Firefox') {\n            this._$isFFBrowser = true;\n        }\n    }\n\n    public _$isFFBrowser;\n\n    @Input()\n    public get width(): string {\n        return this._width;\n    }\n\n    public set width(value: string) {\n        this._width = CommonUtils.getCssValue(value);\n        this.callLater(this.resize, this);\n    }\n\n    @Output()\n    public sort = new EventEmitter<SortChangeEvent>();\n\n    private _contentWidth: string = 'auto';\n\n    @Input()\n    public get contentWidth(): string {\n        return this._contentWidth;\n    }\n\n    public set contentWidth(value: string) {\n        this._contentWidth = CommonUtils.getCssValue(value);\n    }\n\n    @Input()\n    public hideHeader: boolean = false;\n\n    private _selectedRow: number;\n\n    @Input()\n    public get selectedRow(): number {\n        return this._selectedRow;\n    }\n\n    public set selectedRow(value: number) {\n        if (this._selectedRow === value) {\n            return;\n        }\n        this._selectedRow = value;\n        if (this.initialized) {\n            this._selectRow(value);\n        }\n    }\n\n    @Output()\n    public selectChange: EventEmitter<number> = new EventEmitter<number>();\n    @Output()\n    public selectedRowChange: EventEmitter<number> = new EventEmitter<number>();\n\n    private _getColumnIndex(field: string): [number, TableData] {\n        return _getColumnIndex(this.data, this._additionalData, field);\n    }\n\n    private _getHeaderValueByField(field): string {\n        let [index, tableData] = this._getColumnIndex(field);\n        if (index == -1) {\n            console.error('no header value found, unknown field: ' + field);\n            return '';\n        }\n        return tableData.header[index];\n    }\n\n    /**\n     * @internal\n     */\n    public _$headerSettings: TableHeadSetting[] = [];\n    private _headerSettingsBackup: { [field: string]: TableHeadSetting } = {};\n\n    private _updateHeaderSettings(columnDefines: ColumnDefine[]): void {\n        const oldBackup = CommonUtils.shallowCopy(this._headerSettingsBackup);\n        this._headerSettingsBackup = {};\n        this._$headerSettings.splice(0, this._$headerSettings.length);\n\n        columnDefines.forEach(columnDefine => {\n            if (columnDefine.visible === false) {\n                return;\n            }\n\n            const field: string = <string>columnDefine.target;\n            const [realColIndex,] = this._getColumnIndex(field);\n            let settings = oldBackup[field];\n            settings = TableUtils.updateHeaderSettings(columnDefine, settings);\n            let headerData = columnDefine.header && columnDefine.header.data ? columnDefine.header.data : null;\n            if(headerData instanceof Function) {\n                settings.cellData = headerData(this.data, realColIndex, this._additionalData);\n            } else if(typeof headerData == 'string') {\n                settings.cellData = headerData;\n            } else {\n                settings.cellData = this._getHeaderValueByField(field);\n            }\n            this._$headerSettings.push(settings);\n            this._headerSettingsBackup[field] = settings;\n        });\n    }\n\n    /**\n     * 没有cellData generator获取数据的情况\n     * @param field\n     * @param row\n     *\n     *\n     */\n    private _getCellDataByField(field: string, row: number): any {\n        let [index, tableData] = this._getColumnIndex(field);\n        if (index == -1) {\n            console.error('no cell data found, unknown field: ' + field);\n            return '';\n        }\n        if (!tableData.data[row]) {\n            tableData.data[row] = [];\n        }\n        if (tableData instanceof AdditionalTableData) {\n            // 没有cellData generator获取数据的情况\n            // 如果是AdditionalTableData，重新reset AdditionalTableData，cellData取空值，\n            // 在renderer里面通过touchedValue取真实的值，见issue522\n            tableData.data[row][index] = '';\n        }\n        return tableData.data[row][index];\n    }\n\n    private _updateAdditionalData(field: string, row: number, cellData: string) {\n        let [index, tableData] = this._getColumnIndex(field);\n        if (index == -1) {\n            console.error('no cell data found, unknown field: ' + field);\n            return;\n        }\n        if (!tableData.data[row]) {\n            tableData.data[row] = [];\n        }\n        if (tableData instanceof AdditionalTableData) {\n            tableData.data[row][index] = cellData;\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$cellSettings: TableCellSetting[][] = [];\n    private _cellSettingsBackup: { [field: string]: TableCellSetting[] } = {};\n\n    private _updateCellSettings(columnDefines: ColumnDefine[]): void {\n        // clear origin settings, but keep the origin row array ref,\n        // which will avoid ngFor from re-rendering the dom\n        this._$cellSettings.forEach(row => row.splice(0, row.length));\n        const dataLen = this.data.data.length;\n        // remove extra lines if necessary\n        this._$cellSettings.splice(dataLen, this._$cellSettings.length);\n        this._additionalData.data.splice(dataLen, this._$cellSettings.length);\n\n        let oldBackup = CommonUtils.shallowCopy(this._cellSettingsBackup);\n        this._cellSettingsBackup = {};\n\n        columnDefines.forEach(columnDefine => {\n            if (columnDefine.visible === false) {\n                return;\n            }\n\n            const field = <string>columnDefine.target;\n            // prepare for backing up the new settings\n            this._cellSettingsBackup[field] = [];\n\n            const [realColIndex,] = this._getColumnIndex(field);\n            let groupSetting: TableCellSetting;\n            let settings: TableCellSetting;\n            for (let rowIndex = 0; rowIndex < dataLen; rowIndex++) {\n                settings = oldBackup[field] ? oldBackup[field][rowIndex] : undefined;\n                settings = TableUtils.updateCellSettings(columnDefine, settings);\n                // reset the rowSpan value, it will be recomputed later.\n                settings.rowSpan = 1;\n                this._cellSettingsBackup[field].push(settings);\n\n                if (!this._$cellSettings[rowIndex]) {\n                    this._$cellSettings.push([]);\n                }\n                this._$cellSettings[rowIndex].push(settings);\n\n                if (settings.editable) {\n                    settings.renderer = settings.renderer ? settings.renderer : DefaultCellRenderer;\n                    settings.editorRenderer = settings.editorRenderer ? settings.editorRenderer : TableCellTextEditorRenderer;\n                }\n\n                const cellDataGenerator = TableUtils.getGenerator(columnDefine, 'data');\n                if (cellDataGenerator) {\n                    settings.cellData = cellDataGenerator(this.data, rowIndex, realColIndex, this._additionalData);\n                    this._updateAdditionalData(field, rowIndex, settings.cellData);\n                } else if (columnDefine.cell && typeof columnDefine.cell.data == 'string') {\n                    settings.cellData = columnDefine.cell.data;\n                    this._updateAdditionalData(field, rowIndex, settings.cellData);\n                } else {\n                    settings.cellData = this._getCellDataByField(field, rowIndex);\n                }\n                settings.cellData = CommonUtils.isDefined(settings.cellData) ? settings.cellData : '';\n\n                // generate a tooltip if necessary\n                const tooltipGenerator = TableUtils.getGenerator(columnDefine, 'tooltip');\n                if (tooltipGenerator) {\n                    settings.tooltip = tooltipGenerator(this.data, rowIndex, realColIndex, this._additionalData);\n                } else if (columnDefine.cell && CommonUtils.isDefined(columnDefine.cell.tooltip)) {\n                    settings.tooltip = columnDefine.cell.tooltip;\n                } else {\n                    settings.tooltip = '';\n                }\n\n                // 修改settings的group属性\n                if (columnDefine.group) {\n                    if (groupSetting && groupSetting.cellData == settings.cellData) {\n                        groupSetting.rowSpan++;\n                        settings.rowSpan = 0;\n                    } else {\n                        groupSetting = settings;\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * 生成混合后的列定义序列\n     *\n     *\n     */\n    private _getMixedColumnDefines(): ColumnDefine[] {\n        if (!this.data) {\n            return [];\n        }\n        const columnDefines: ColumnDefine[] = [];\n        this.data.field.forEach((field, index) => {\n            let cd = this._columnDefineGenerator(field, index);\n            if (cd) {\n                cd = <ColumnDefine>CommonUtils.shallowCopy(cd);\n                cd.target = field;\n            }\n            columnDefines.push(cd ? cd : {target: field});\n        });\n\n        if (this._additionalColumnDefines) {\n            for (let i = this._additionalColumnDefines.length - 1; i >= 0; i--) {\n                const acd = this._additionalColumnDefines[i];\n                const cd: ColumnDefine = {\n                    target: 'additional-field-' + i, header: acd.header, group: acd.group,\n                    cell: acd.cell, width: acd.width, visible: acd.visible\n                };\n                const pos = CommonUtils.isDefined(acd.pos) ? acd.pos : columnDefines.length;\n                columnDefines.splice(pos, 0, cd);\n            }\n        }\n        return columnDefines;\n    }\n\n    public update(): void {\n        if (!this.initialized || !this._data) {\n            return;\n        }\n        if (!this._data.field || this._data.field.length == 0) {\n            console.warn('invalid table data, need a \"field\" property.');\n            return;\n        }\n\n        const columnDefines = this._getMixedColumnDefines();\n        this._updateHeaderSettings(columnDefines);\n        this._updateCellSettings(columnDefines);\n        this._changeDetectorRef.detectChanges();\n\n        this.callLater(() => {\n            // 等待additionalTableData在renderer更新完成\n            this.additionalDataChange.emit(this.additionalData);\n            // 等待滚动条初始化\n            this._handleScrollBar();\n            // 自动再次标记选中行\n            this._selectRow(this.selectedRow);\n        })\n    }\n\n    private _additionalData = new AdditionalTableData();\n\n    @Input()\n    public get additionalData(): TableData {\n        return this._additionalData;\n    }\n\n    public set additionalData(value: TableData) {\n        //ignore incoming data.\n    }\n\n    @Output()\n    public additionalDataChange = new EventEmitter<TableData>();\n\n    private _trackRowBy: string;\n\n    @Input()\n    public get trackRowBy(): string {\n        return this._trackRowBy;\n    }\n\n    public set trackRowBy(value: string) {\n        this._trackRowBy = value;\n        this._additionalData.trackRowBy = value;\n    }\n\n    private _removeTableDataRefresh: CallbackRemoval;\n    private _removeAdditionalDataRefresh: CallbackRemoval;\n    private _data: TableData;\n\n    @Input()\n    public get data(): TableData {\n        return this._data;\n    }\n\n    public set data(value: TableData) {\n        if (value == this._data || !value) {\n            return;\n        }\n        this._data = value;\n        this._additionalData.reset();\n        this._additionalData.originData = value;\n\n        this.update();\n\n        if (this._removeTableDataRefresh) {\n            this._removeTableDataRefresh();\n        }\n        this._removeTableDataRefresh = value.onRefresh(this.update, this);\n\n        if (!this._removeAdditionalDataRefresh) {\n            this._removeAdditionalDataRefresh = this._additionalData.onRefresh(this.update, this);\n        }\n    }\n\n    @Output()\n    public edit = new EventEmitter<TableDataChangeEvent>();\n\n    @Input()\n    public columnDefines: ColumnDefine[] | ColumnDefineGenerator;\n\n    @Input()\n    public columnDefineGeneratorContext: any;\n\n    private _additionalColumnDefines: AdditionalColumnDefine[] = [];\n\n    @Input()\n    public get additionalColumnDefines(): AdditionalColumnDefine[] {\n        return this._additionalColumnDefines;\n    }\n\n    public set additionalColumnDefines(value: AdditionalColumnDefine[]) {\n        this._additionalColumnDefines = value;\n        this._initAdditionalData();\n    }\n\n    private _columnDefineGenerator(field: string, index: number): ColumnDefine {\n        if (!this.columnDefines) {\n            return undefined;\n        }\n        if (this.columnDefines instanceof Function) {\n            return CommonUtils.safeInvokeCallback(this.columnDefineGeneratorContext, this.columnDefines, [field, index]);\n        } else {\n            return this.columnDefines.find(colDef => {\n                const targets: (number | string)[] = colDef.target instanceof Array ? colDef.target : [colDef.target];\n                const idx = targets.findIndex(target =>\n                    (typeof target === 'number' && target === index) || (typeof target === 'string' && target === field));\n                return idx != -1;\n            });\n        }\n    }\n\n    @Output()\n    public doubleClick: EventEmitter<number> = new EventEmitter<number>();\n\n    /**\n     * @internal\n     */\n    public _$handleRowDoubleClick(rowIndex: number) {\n        this.doubleClick.emit(rowIndex);\n    }\n\n    @ViewChildren('tableRow', {read: ElementRef})\n    private _rowElementRefs: QueryList<ElementRef>;\n\n    /**\n     * @internal\n     */\n    public _$clickRow(rowIndex: number) {\n        if (this._selectedRow === rowIndex) {\n            return;\n        }\n        this._selectedRow = rowIndex;\n        this._selectRow(rowIndex);\n    }\n\n    private _selectRow(rowIndex: number, suppressEvent: boolean = false) {\n        this._rowElementRefs.forEach((row, index) => {\n            if (index === rowIndex) {\n                this._renderer.addClass(row.nativeElement, 'jigsaw-table-row-selected');\n                if (!suppressEvent) {\n                    this.selectChange.emit(rowIndex);\n                    this.selectedRowChange.emit(rowIndex);\n                }\n            } else {\n                this._renderer.removeClass(row.nativeElement, 'jigsaw-table-row-selected');\n            }\n        })\n    }\n\n    @Input()\n    public floatingHeader: boolean = false;\n\n    private _removeWindowScrollListener: Function;\n    private _removeWindowResizeListener: Function;\n\n    private _addWindowListener() {\n        this._removeWindowListener();\n\n        this._zone.runOutsideAngular(() => {\n            this._removeWindowResizeListener = this._renderer.listen(\n                'window', 'resize', () => this.resize());\n        });\n\n        if (this.floatingHeader && !this.hideHeader) {\n            this._zone.runOutsideAngular(() => {\n                this._removeWindowScrollListener = this._renderer.listen(\n                    'window', 'scroll', () => this._fixHeaderTop());\n            });\n        }\n    }\n\n    public resize() {\n        this._fixHeaderTop();\n        this._handleScrollBar();\n        this._setVerticalScrollbarOffset();\n    }\n\n    private _tableHeaderElement: HTMLElement;\n\n    private _fixHeaderTop() {\n        if (!this.floatingHeader || this.hideHeader) {\n            return;\n        }\n        const maxTop = this._elementRef.nativeElement.offsetHeight - this._tableHeaderElement.offsetHeight;\n        let tableDocumentTop = AffixUtils.offset(this._elementRef.nativeElement).top;\n        let scrollTop = AffixUtils.getScrollTop();\n        let top = scrollTop - tableDocumentTop;\n        if (top > 0 && top < maxTop) {\n            this._renderer.setStyle(this._tableHeaderElement, 'top', top + 'px');\n        } else if (top <= 0) {\n            if (this._tableHeaderElement.style.top !== '0' && this._tableHeaderElement.style.top !== '0px') {\n                this._renderer.setStyle(this._tableHeaderElement, 'top', '0');\n            }\n        } else if (top >= maxTop) {\n            // table超出屏幕显示位置\n        }\n    }\n\n    private _removeWindowListener() {\n        if (this._removeWindowScrollListener) {\n            this._removeWindowScrollListener();\n            this._removeWindowScrollListener = null;\n        }\n        if (this._removeWindowResizeListener) {\n            this._removeWindowResizeListener();\n            this._removeWindowResizeListener = null;\n        }\n    }\n\n    @ViewChildren(JigsawTableHeaderInternalComponent)\n    private _headerComponents: QueryList<JigsawTableHeaderInternalComponent>;\n\n    /**\n     * @internal\n     */\n    public _$onSort(sortInfo): void {\n        this._headerComponents.forEach(comp => sortInfo.field != comp.field && comp.updateSortOrderClass(SortOrder.default));\n        this.sort.emit(sortInfo);\n    }\n\n    /**\n     * 手动重置sort按钮样式\n     */\n    public resetSort() {\n        this._headerComponents.forEach(comp => comp.updateSortOrderClass(comp.defaultSortOrder));\n    }\n\n    private _initAdditionalData(): void {\n        if (!this._additionalColumnDefines) {\n            return;\n        }\n        this._additionalData.field = [];\n        this._additionalData.header = [];\n        this._additionalColumnDefines.forEach((acd, i) => {\n            this._additionalData.field.push('additional-field-' + i);\n            this._additionalData.header.push(acd.header.text);\n        });\n    }\n\n    @ViewChild('contentScrollbar', {read: PerfectScrollbarDirective, static: false})\n    public contentScrollbar: PerfectScrollbarDirective;\n\n    @ViewChild('bodyScrollbar', {read: PerfectScrollbarDirective, static: false})\n    private _bodyScrollbar: PerfectScrollbarDirective;\n\n    /**\n     * @internal\n     */\n    public _$noDataSrc = CommonUtils.noDataImageSrc;\n\n    /**\n     * 根据内容计算自适应列宽\n     *\n     */\n    private _calculateContentWidth() {\n        const host = this._elementRef.nativeElement;\n        const tHeadColGroup = host.querySelectorAll('.jigsaw-table-header > colgroup col');\n        const tBodyColGroup = host.querySelectorAll('.jigsaw-table-body > colgroup col');\n        const tHeadTds = host.querySelectorAll('.jigsaw-table-header > thead td');\n        const tBodyTds = host.querySelectorAll('.jigsaw-table-body > thead td');\n        if (this.contentWidth != 'auto' || !tHeadColGroup || !tHeadColGroup.length) return;\n\n        host.querySelectorAll('table').forEach(table => {\n            this._renderer.setStyle(table, 'table-layout', 'auto');\n        });\n\n        // 设置表头随内容撑开\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'width', 'auto');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'white-space', 'nowrap');\n\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body'), 'width', 'auto');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body-range'), 'width', '100%');\n\n        const widthStorage = [];\n\n        // 清空col的width\n        tHeadColGroup.forEach(col => col.setAttribute('width', ''));\n        tBodyColGroup.forEach(col => col.setAttribute('width', ''));\n        if (this._$isFFBrowser) {\n            tHeadTds.forEach(col => col.setAttribute('width', ''));\n            tBodyTds.forEach(col => col.setAttribute('width', ''));\n        }\n\n        host.querySelectorAll('.jigsaw-table-body > tbody tr:first-child td')\n            .forEach(td => widthStorage.push(td.offsetWidth));\n\n        if (widthStorage.length) {\n            host.querySelectorAll('.jigsaw-table-header > thead tr:first-child td')\n                .forEach((td, index) => {\n                    if (td.offsetWidth > widthStorage[index]) {\n                        widthStorage[index] = td.offsetWidth;\n                    }\n                });\n        } else {\n            host.querySelectorAll('.jigsaw-table-header > thead tr:first-child td')\n                .forEach(td => {\n                    widthStorage.push(td.offsetWidth);\n                });\n        }\n\n        widthStorage.forEach((width, index) => {\n            // columnDefine定义过的列宽不会被覆盖\n            const colWidth = this._$headerSettings && this._$headerSettings[index] && this._$headerSettings[index].width ? this._$headerSettings[index].width : width;\n            tHeadColGroup[index] && tHeadColGroup[index].setAttribute('width', colWidth);\n            tBodyColGroup[index] && tBodyColGroup[index].setAttribute('width', colWidth);\n            if (this._$isFFBrowser) {\n                tHeadTds[index] && tHeadTds[index].setAttribute('width', colWidth);\n                tBodyTds[index] && tBodyTds[index].setAttribute('width', colWidth);\n            }\n        });\n\n        // 还原\n        host.querySelectorAll('table').forEach(table => {\n            this._renderer.setStyle(table, 'table-layout', 'fixed');\n        });\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'width', '100%');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-header'), 'white-space', 'normal');\n        this._renderer.setStyle(host.querySelector('.jigsaw-table-body'), 'width', '100%');\n    }\n\n    /**\n     * 处理滚动条\n     *\n     */\n    private _handleScrollBar() {\n        this._calculateContentWidth();\n        this._calibrateTable();\n        this._updateScrollbar();\n    }\n\n    /**\n     * 校正表头表体的宽度\n     *\n     */\n    private _calibrateTable() {\n        const host = this._elementRef.nativeElement;\n        const tableHeader = host.querySelector('table.jigsaw-table-header');\n        const tableBody = host.querySelector('table.jigsaw-table-body');\n        const tableBodyRange = host.querySelector('.jigsaw-table-body-range');\n        const tableRange = host.querySelector('.jigsaw-table-range');\n\n        // table body's width is always not less than the host component\n        if (host.offsetWidth > tableBody.offsetWidth) {\n            this._renderer.setStyle(tableBody, 'width', host.offsetWidth + 'px');\n        }\n\n        // table body range's width is always equal to table body's\n        if (tableBodyRange.offsetWidth != tableBody.offsetWidth) {\n            this._renderer.setStyle(tableBodyRange, 'width', tableBody.offsetWidth + 'px');\n        }\n\n        // table header's width is always equal to table body's\n        if (tableHeader.offsetWidth != tableBody.offsetWidth) {\n            this._renderer.setStyle(tableHeader, 'width', tableBody.offsetWidth + 'px');\n        }\n\n        // 根据表头的高度，设置表体的padding-top\n        if (this.hideHeader) {\n            this._renderer.setStyle(tableRange, 'padding-top', 0);\n        } else {\n            this._renderer.setStyle(tableRange, 'padding-top', tableHeader.offsetHeight + 'px');\n        }\n    }\n\n    private _yScrollbarElement: HTMLElement;\n\n    /**\n     * 设置纵向滚动条位置\n     *\n     */\n    private _setVerticalScrollbarOffset() {\n        if (this._yScrollbarElement) {\n            this._renderer.setStyle(this._yScrollbarElement, 'left',\n                this._elementRef.nativeElement.offsetWidth + this.contentScrollbar.geometry().x - 15 + 'px');\n        }\n    }\n\n    /**\n     * 找到纵向滚动条，并设置初始位置\n     *\n     */\n    private _initVerticalScroll() {\n        this.callLater(() => {\n            // selector使用>选择直接子元素，避免选择到其他滚动条\n            const yScrollbar = this._elementRef.nativeElement.querySelector('.jigsaw-table-body-range > .ps__rail-y');\n            if (yScrollbar) {\n                this._renderer.setStyle(yScrollbar, 'left',\n                    this._elementRef.nativeElement.offsetWidth - 15 + 'px');\n                this._yScrollbarElement = yScrollbar;\n            } else {\n                this._initVerticalScroll();\n            }\n        });\n    }\n\n    /**\n     * 当内容数据变化时，刷新一下滚动条\n     *\n     */\n    private _updateScrollbar() {\n        if (this.contentScrollbar) {\n            this.contentScrollbar.update();\n        }\n        if (this._bodyScrollbar) {\n            this._bodyScrollbar.update();\n        }\n    }\n\n    private _removeHorizontalScrollListener: Function;\n\n    /**\n     * 监听横向滚动事件，更新纵向滚动条的位置\n     *\n     */\n    private _listenHorizontalScroll() {\n        if (!this.contentScrollbar) {\n            return;\n        }\n        this._zone.runOutsideAngular(() => {\n            const el = this.contentScrollbar.elementRef.nativeElement;\n            this._removeHorizontalScrollListener = this._renderer.listen(\n                el, 'ps-scroll-x', () => this._setVerticalScrollbarOffset());\n        });\n    }\n\n    ngAfterViewInit() {\n        this._selectRow(this.selectedRow, true);\n\n        // 初始化滚动条\n        this._initVerticalScroll();\n        this._listenHorizontalScroll();\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        if (this._data && this._data.field && this._data.field.length != 0) {\n            this.update();\n        }\n\n        this._addWindowListener();\n\n        this._renderer.setStyle(this._elementRef.nativeElement.querySelector('.jigsaw-table-body-range'),\n            'max-height', this._maxHeight);\n        this._tableHeaderElement = this._elementRef.nativeElement.querySelector(\".jigsaw-table-header\");\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n\n        if (this._removeTableDataRefresh) {\n            this._removeTableDataRefresh();\n            this._removeTableDataRefresh = null;\n        }\n        if (this._removeAdditionalDataRefresh) {\n            this._removeAdditionalDataRefresh();\n            this._removeAdditionalDataRefresh = null;\n        }\n        if (this._removeHorizontalScrollListener) {\n            this._removeHorizontalScrollListener();\n            this._removeHorizontalScrollListener = null;\n        }\n        this._removeWindowListener();\n\n        this.columnDefines = null;\n        this._additionalColumnDefines = null;\n        this._data = null;\n        this._headerSettingsBackup = null;\n        this._cellSettingsBackup = null;\n        this._$cellSettings = null;\n        this._$headerSettings = null;\n        this._tableHeaderElement = null;\n        this._rowElementRefs = null;\n        this._headerComponents = null;\n    }\n}\n\n@NgModule({\n    declarations: [JigsawTable, JigsawTableCellInternalComponent, JigsawTableHeaderInternalComponent],\n    imports: [CommonModule, JigsawCommonModule, JigsawTableRendererModule, PerfectScrollbarModule, JigsawTrustedHtmlModule],\n    exports: [JigsawTable, JigsawTableCellInternalComponent, JigsawTableHeaderInternalComponent],\n    entryComponents: [DefaultCellRenderer, TableCellTextEditorRenderer, TableHeadCheckboxRenderer,\n        TableCellCheckboxRenderer, TableCellSwitchRenderer, TableCellSelectRenderer]\n})\nexport class JigsawTableModule {\n}\n","import {\n    AfterViewInit,\n    ChangeDetectorRef,\n    Component,\n    ComponentFactoryResolver,\n    ComponentRef,\n    ElementRef,\n    EmbeddedViewRef,\n    EventEmitter,\n    Input,\n    OnDestroy,\n    OnInit,\n    Output,\n    Renderer2,\n    TemplateRef,\n    Type,\n    ViewChild\n} from \"@angular/core\";\nimport {AbstractJigsawViewBase, JigsawRendererHost} from \"../../common/common\";\nimport {_getColumnIndex, SortChangeEvent, TableDataChangeEvent} from \"./table-typings\";\nimport {DefaultCellRenderer, TableCellRendererBase} from \"./table-renderer\";\nimport {TableData} from \"../../common/core/data/table-data\";\nimport {SortAs, SortOrder} from \"../../common/core/data/component-data\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\nexport class TableInternalCellBase extends AbstractJigsawViewBase implements AfterViewInit {\n    constructor(protected componentFactoryResolver: ComponentFactoryResolver,\n                protected changeDetector: ChangeDetectorRef) {\n        super();\n    }\n\n    @ViewChild(JigsawRendererHost, {static: false})\n    protected rendererHost: JigsawRendererHost;\n    protected targetData: TableData;\n    protected rendererRef: ComponentRef<TableCellRendererBase> | EmbeddedViewRef<any>;\n\n    private _cellData;\n\n    @Input()\n    public get cellData() {\n        return this._cellData;\n    }\n\n    public set cellData(value) {\n        this._cellData = value;\n        this._updateDataInRenderer('cellData', value);\n    }\n\n    @Input()\n    public row: number;\n    @Input()\n    public field: string;\n    @Input()\n    public renderer: Type<TableCellRendererBase> | TemplateRef<any>;\n    @Input()\n    public rendererInitData: any;\n\n    @Output()\n    public cellDataChange = new EventEmitter<any>();\n\n    private _column: number = -1;\n\n    public get column(): number {\n        return this._column;\n    }\n\n    private _tableData: TableData;\n\n    @Input()\n    public get tableData(): TableData {\n        return this._tableData;\n    }\n\n    public set tableData(value: TableData) {\n        this._tableData = value;\n        this._updateDataInRenderer('tableData', value);\n        this._initTargetData();\n    }\n\n    private _additionalData: TableData;\n\n    @Input()\n    public get additionalData(): TableData {\n        return this._additionalData;\n    }\n\n    public set additionalData(value: TableData) {\n        this._additionalData = value;\n        this._updateDataInRenderer('additionalData', value);\n        this._initTargetData();\n    }\n\n    private _updateDataInRenderer(prop: string, value: any) {\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance[prop] = value;\n        } else if (this.rendererRef && this.rendererRef.context && this.rendererRef.context.context) {\n            this.rendererRef.context.context[prop] = value;\n        }\n    }\n\n    private _initTargetData(): void {\n        if (!this.tableData || !this.additionalData) {\n            return;\n        }\n        [this._column, this.targetData] = _getColumnIndex(this._tableData, this._additionalData, this.field);\n    }\n\n    /*\n     * 渲染器制造工厂\n     * */\n    protected rendererFactory(renderer: Type<TableCellRendererBase> | TemplateRef<any>, initData: any): ComponentRef<TableCellRendererBase> | EmbeddedViewRef<any> {\n        if (renderer instanceof TemplateRef) {\n            return this.rendererHost.viewContainerRef.createEmbeddedView(renderer, {\n                context: {\n                    tableData: this.tableData, additionalData: this.additionalData,\n                    cellData: this.cellData, row: this.row, field: this.field\n                }\n            });\n        } else {\n            let componentFactory = this.componentFactoryResolver.resolveComponentFactory(renderer);\n            let componentRef = this.rendererHost.viewContainerRef.createComponent(componentFactory);\n            componentRef.instance.row = this.row;\n            componentRef.instance.field = this.field;\n            componentRef.instance.tableData = this.tableData;\n            componentRef.instance.additionalData = this.additionalData;\n            componentRef.instance.cellData = this.cellData;\n            componentRef.instance.initData = initData;\n            return componentRef;\n        }\n    }\n\n    /*\n     * 插入渲染器\n     * */\n    protected insertRenderer() {\n        this.rendererRef = this.rendererFactory(this.renderer, this.rendererInitData);\n        this.changeDetector.detectChanges();\n    }\n\n    ngAfterViewInit(): void {\n        this.insertRenderer();\n    }\n}\n\n/**\n * 表头单元格\n *\n * @internal\n */\n@Component({\n    selector: 'jigsaw-table-header',\n    template: `\n        <div class=\"jigsaw-table-header-cell\" [style.padding-right]=\"sortable ? '14px' : '0'\">\n            <ng-template jigsaw-renderer-host></ng-template>\n            <div *ngIf=\"sortable\" [ngClass]=\"_$sortOrderClass\">\n                <span (click)=\"_$sortAsc()\" class=\"jigsaw-table-sort-btn jigsaw-table-sort-up\"></span>\n                <span (click)=\"_$sortDes()\" class=\"jigsaw-table-sort-btn jigsaw-table-sort-down\"></span>\n            </div>\n        </div>`\n})\nexport class JigsawTableHeaderInternalComponent extends TableInternalCellBase implements OnInit, OnDestroy {\n    constructor(resolver: ComponentFactoryResolver, changeDetector: ChangeDetectorRef) {\n        super(resolver, changeDetector);\n    }\n\n    @Input() public sortable: boolean;\n\n    @Input() public sortAs: SortAs;\n\n    /**\n     * @internal\n     */\n    public _$sortOrderClass: Object;\n\n    public updateSortOrderClass(sortOrder: SortOrder): void {\n        this._$sortOrderClass = {\n            'jigsaw-table-sort-box': true,\n            'jigsaw-table-asc': sortOrder == SortOrder.asc,\n            'jigsaw-table-des': sortOrder == SortOrder.desc\n        }\n    }\n\n    private _defaultSortOrder: SortOrder;\n\n    @Input()\n    public get defaultSortOrder(): SortOrder {\n        return this._defaultSortOrder;\n    }\n\n    public set defaultSortOrder(newValue: SortOrder) {\n        this._defaultSortOrder = newValue;\n        this.updateSortOrderClass(newValue);\n    };\n\n    @Output()\n    public sort: EventEmitter<SortChangeEvent> = new EventEmitter<SortChangeEvent>();\n\n    /**\n     * @internal\n     */\n    public _$sortAsc(): void {\n        if (this._$sortOrderClass['jigsaw-table-asc']) {\n            return;\n        }\n        this._sort(SortOrder.asc);\n    }\n\n    /**\n     * @internal\n     */\n    public _$sortDes(): void {\n        if (this._$sortOrderClass['jigsaw-table-des']) {\n            return;\n        }\n        this._sort(SortOrder.desc);\n    }\n\n    private _sort(order: SortOrder): void {\n        this.updateSortOrderClass(order);\n        this.sort.emit({sortAs: this.sortAs, order: order, field: this.field});\n        this.tableData.sort(this.sortAs, order, this.field);\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n        //设置默认渲染器\n        this.renderer = this.renderer ? this.renderer : DefaultCellRenderer;\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance.cellDataChange.unsubscribe();\n        }\n    }\n}\n\n/**\n * 单元格渲染器\n * @internal\n */\n@Component({\n    selector: 'jigsaw-table-cell',\n    template: '<ng-template jigsaw-renderer-host></ng-template>'\n})\nexport class JigsawTableCellInternalComponent extends TableInternalCellBase implements OnInit, OnDestroy {\n\n    private _editable: boolean = false;\n\n    @Input()\n    public get editable(): boolean {\n        return this._editable;\n    }\n\n    public set editable(value: boolean) {\n        if (this._editable === value) {\n            return;\n        }\n        this._editable = value;\n\n        if (!this.initialized) {\n            return;\n        }\n\n        const cursor = this._editable ? 'pointer' : 'default';\n        this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', cursor);\n        if (this._editable) {\n            this._setGoEditListener();\n        }\n    }\n\n    @Input()\n    public editorRenderer: Type<TableCellRendererBase>;\n    @Input()\n    public editorRendererInitData: any;\n\n    @Input()\n    public group: boolean;\n\n    @Input()\n    public rowSpan: number;\n\n    @Output()\n    public edit = new EventEmitter<TableDataChangeEvent>();\n\n    public editorRendererRef: ComponentRef<TableCellRendererBase> | EmbeddedViewRef<any>;\n\n    private _goEditCallback: () => void;\n\n    constructor(cfr: ComponentFactoryResolver, cd: ChangeDetectorRef,\n                private _renderer: Renderer2, private _elementRef: ElementRef) {\n        super(cfr, cd);\n    }\n\n    private _emitDataChange(cellData: string | number): void {\n        let rows = [];\n        for (let i = 0; i < this.rowSpan; i++) {\n            rows.push(this.row + i);\n            // update tableData directly, therefor table.ts need not to do this.\n            this.targetData.data[this.row + i][this.column] = cellData;\n        }\n        this.targetData.refresh();\n\n        const change: TableDataChangeEvent = {\n            field: this.field,\n            row: rows,\n            column: this.column,\n            cellData: cellData,\n            oldCellData: this.cellData\n        };\n        this.edit.emit(change);\n\n        this.cellData = cellData;\n        this.cellDataChange.emit(this.cellData);\n    }\n\n    private _rendererSubscribe(renderer: TableCellRendererBase): void {\n        renderer.cellDataChange.subscribe(cellData => {\n            if (CommonUtils.isUndefined(cellData)) {\n                //cellData === '' 认为是合法值\n                return;\n            }\n            this._emitDataChange(cellData);\n        });\n    }\n\n    private _editorRendererSubscribe(renderer: TableCellRendererBase) {\n        renderer.cellDataChange.subscribe(cellData => {\n            if (CommonUtils.isUndefined(cellData)) {\n                //cellData === '' 认为是合法值\n                return;\n            }\n            if (this.cellData != cellData) {\n                this._emitDataChange(cellData);\n            }\n            this.rendererHost.viewContainerRef.clear();\n\n            this.callLater(() => {\n                this.insertRenderer();\n                this._setGoEditListener();\n            });\n        });\n    }\n\n    /*\n     * 插入渲染器\n     * */\n    protected insertRenderer() {\n        super.insertRenderer();\n        if (this.rendererRef instanceof ComponentRef) {\n            this._rendererSubscribe(this.rendererRef.instance);\n        }\n    }\n\n    /*\n     * 插入编辑渲染器\n     * */\n    protected insertEditorRenderer() {\n        this.editorRendererRef = this.rendererFactory(this.editorRenderer, this.editorRendererInitData);\n        if (this.editorRendererRef instanceof ComponentRef) {\n            this._editorRendererSubscribe(this.editorRendererRef.instance);\n        }\n\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n\n        this.changeDetector.detectChanges();\n    }\n\n    /*\n     * 如果可编辑，单元格绑定点击事件\n     * */\n    private _setGoEditListener() {\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n        this._goEditCallback = this._editable ? this._renderer.listen(\n            this._elementRef.nativeElement.parentElement, 'click', () => {\n                this.rendererHost.viewContainerRef.clear();\n                this.insertEditorRenderer();\n            }) : null;\n    }\n\n    ngOnInit() {\n        super.ngOnInit();\n\n        //设置默认渲染器\n        this.renderer = this.renderer ? this.renderer : DefaultCellRenderer;\n\n        if (this._editable) {\n            this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', 'pointer');\n            //绑定点击事件\n            this._setGoEditListener();\n        }\n    }\n\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        if (this._editable) {\n            this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', 'default');\n        }\n\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance.cellDataChange.unsubscribe();\n        }\n\n        if (this.editorRendererRef instanceof ComponentRef) {\n            this.editorRendererRef.instance.cellDataChange.unsubscribe();\n        }\n    }\n}\n","import * as tslib_1 from \"tslib\";\nimport { AfterViewInit, ChangeDetectorRef, ComponentFactoryResolver, ComponentRef, ElementRef, EmbeddedViewRef, EventEmitter, OnDestroy, OnInit, Renderer2, TemplateRef, Type } from \"@angular/core\";\nimport { AbstractJigsawViewBase, JigsawRendererHost } from \"../../common/common\";\nimport { _getColumnIndex } from \"./table-typings\";\nimport { DefaultCellRenderer } from \"./table-renderer\";\nimport { TableData } from \"../../common/core/data/table-data\";\nimport { SortAs, SortOrder } from \"../../common/core/data/component-data\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\nvar TableInternalCellBase = /** @class */ (function (_super) {\n    tslib_1.__extends(TableInternalCellBase, _super);\n    function TableInternalCellBase(componentFactoryResolver, changeDetector) {\n        var _this = _super.call(this) || this;\n        _this.componentFactoryResolver = componentFactoryResolver;\n        _this.changeDetector = changeDetector;\n        _this.cellDataChange = new EventEmitter();\n        _this._column = -1;\n        return _this;\n    }\n    Object.defineProperty(TableInternalCellBase.prototype, \"cellData\", {\n        get: function () {\n            return this._cellData;\n        },\n        set: function (value) {\n            this._cellData = value;\n            this._updateDataInRenderer('cellData', value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TableInternalCellBase.prototype, \"column\", {\n        get: function () {\n            return this._column;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TableInternalCellBase.prototype, \"tableData\", {\n        get: function () {\n            return this._tableData;\n        },\n        set: function (value) {\n            this._tableData = value;\n            this._updateDataInRenderer('tableData', value);\n            this._initTargetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TableInternalCellBase.prototype, \"additionalData\", {\n        get: function () {\n            return this._additionalData;\n        },\n        set: function (value) {\n            this._additionalData = value;\n            this._updateDataInRenderer('additionalData', value);\n            this._initTargetData();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TableInternalCellBase.prototype._updateDataInRenderer = function (prop, value) {\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance[prop] = value;\n        }\n        else if (this.rendererRef && this.rendererRef.context && this.rendererRef.context.context) {\n            this.rendererRef.context.context[prop] = value;\n        }\n    };\n    TableInternalCellBase.prototype._initTargetData = function () {\n        var _a;\n        if (!this.tableData || !this.additionalData) {\n            return;\n        }\n        _a = _getColumnIndex(this._tableData, this._additionalData, this.field), this._column = _a[0], this.targetData = _a[1];\n    };\n    /*\n     * 渲染器制造工厂\n     * */\n    TableInternalCellBase.prototype.rendererFactory = function (renderer, initData) {\n        if (renderer instanceof TemplateRef) {\n            return this.rendererHost.viewContainerRef.createEmbeddedView(renderer, {\n                context: {\n                    tableData: this.tableData, additionalData: this.additionalData,\n                    cellData: this.cellData, row: this.row, field: this.field\n                }\n            });\n        }\n        else {\n            var componentFactory = this.componentFactoryResolver.resolveComponentFactory(renderer);\n            var componentRef = this.rendererHost.viewContainerRef.createComponent(componentFactory);\n            componentRef.instance.row = this.row;\n            componentRef.instance.field = this.field;\n            componentRef.instance.tableData = this.tableData;\n            componentRef.instance.additionalData = this.additionalData;\n            componentRef.instance.cellData = this.cellData;\n            componentRef.instance.initData = initData;\n            return componentRef;\n        }\n    };\n    /*\n     * 插入渲染器\n     * */\n    TableInternalCellBase.prototype.insertRenderer = function () {\n        this.rendererRef = this.rendererFactory(this.renderer, this.rendererInitData);\n        this.changeDetector.detectChanges();\n    };\n    TableInternalCellBase.prototype.ngAfterViewInit = function () {\n        this.insertRenderer();\n    };\n    return TableInternalCellBase;\n}(AbstractJigsawViewBase));\nexport { TableInternalCellBase };\n/**\n * 表头单元格\n *\n * @internal\n */\nvar JigsawTableHeaderInternalComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTableHeaderInternalComponent, _super);\n    function JigsawTableHeaderInternalComponent(resolver, changeDetector) {\n        var _this = _super.call(this, resolver, changeDetector) || this;\n        _this.sort = new EventEmitter();\n        return _this;\n    }\n    JigsawTableHeaderInternalComponent.prototype.updateSortOrderClass = function (sortOrder) {\n        this._$sortOrderClass = {\n            'jigsaw-table-sort-box': true,\n            'jigsaw-table-asc': sortOrder == SortOrder.asc,\n            'jigsaw-table-des': sortOrder == SortOrder.desc\n        };\n    };\n    Object.defineProperty(JigsawTableHeaderInternalComponent.prototype, \"defaultSortOrder\", {\n        get: function () {\n            return this._defaultSortOrder;\n        },\n        set: function (newValue) {\n            this._defaultSortOrder = newValue;\n            this.updateSortOrderClass(newValue);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ;\n    /**\n     * @internal\n     */\n    JigsawTableHeaderInternalComponent.prototype._$sortAsc = function () {\n        if (this._$sortOrderClass['jigsaw-table-asc']) {\n            return;\n        }\n        this._sort(SortOrder.asc);\n    };\n    /**\n     * @internal\n     */\n    JigsawTableHeaderInternalComponent.prototype._$sortDes = function () {\n        if (this._$sortOrderClass['jigsaw-table-des']) {\n            return;\n        }\n        this._sort(SortOrder.desc);\n    };\n    JigsawTableHeaderInternalComponent.prototype._sort = function (order) {\n        this.updateSortOrderClass(order);\n        this.sort.emit({ sortAs: this.sortAs, order: order, field: this.field });\n        this.tableData.sort(this.sortAs, order, this.field);\n    };\n    JigsawTableHeaderInternalComponent.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n        //设置默认渲染器\n        this.renderer = this.renderer ? this.renderer : DefaultCellRenderer;\n    };\n    JigsawTableHeaderInternalComponent.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance.cellDataChange.unsubscribe();\n        }\n    };\n    return JigsawTableHeaderInternalComponent;\n}(TableInternalCellBase));\nexport { JigsawTableHeaderInternalComponent };\n/**\n * 单元格渲染器\n * @internal\n */\nvar JigsawTableCellInternalComponent = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawTableCellInternalComponent, _super);\n    function JigsawTableCellInternalComponent(cfr, cd, _renderer, _elementRef) {\n        var _this = _super.call(this, cfr, cd) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._editable = false;\n        _this.edit = new EventEmitter();\n        return _this;\n    }\n    Object.defineProperty(JigsawTableCellInternalComponent.prototype, \"editable\", {\n        get: function () {\n            return this._editable;\n        },\n        set: function (value) {\n            if (this._editable === value) {\n                return;\n            }\n            this._editable = value;\n            if (!this.initialized) {\n                return;\n            }\n            var cursor = this._editable ? 'pointer' : 'default';\n            this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', cursor);\n            if (this._editable) {\n                this._setGoEditListener();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawTableCellInternalComponent.prototype._emitDataChange = function (cellData) {\n        var rows = [];\n        for (var i = 0; i < this.rowSpan; i++) {\n            rows.push(this.row + i);\n            // update tableData directly, therefor table.ts need not to do this.\n            this.targetData.data[this.row + i][this.column] = cellData;\n        }\n        this.targetData.refresh();\n        var change = {\n            field: this.field,\n            row: rows,\n            column: this.column,\n            cellData: cellData,\n            oldCellData: this.cellData\n        };\n        this.edit.emit(change);\n        this.cellData = cellData;\n        this.cellDataChange.emit(this.cellData);\n    };\n    JigsawTableCellInternalComponent.prototype._rendererSubscribe = function (renderer) {\n        var _this = this;\n        renderer.cellDataChange.subscribe(function (cellData) {\n            if (CommonUtils.isUndefined(cellData)) {\n                //cellData === '' 认为是合法值\n                return;\n            }\n            _this._emitDataChange(cellData);\n        });\n    };\n    JigsawTableCellInternalComponent.prototype._editorRendererSubscribe = function (renderer) {\n        var _this = this;\n        renderer.cellDataChange.subscribe(function (cellData) {\n            if (CommonUtils.isUndefined(cellData)) {\n                //cellData === '' 认为是合法值\n                return;\n            }\n            if (_this.cellData != cellData) {\n                _this._emitDataChange(cellData);\n            }\n            _this.rendererHost.viewContainerRef.clear();\n            _this.callLater(function () {\n                _this.insertRenderer();\n                _this._setGoEditListener();\n            });\n        });\n    };\n    /*\n     * 插入渲染器\n     * */\n    JigsawTableCellInternalComponent.prototype.insertRenderer = function () {\n        _super.prototype.insertRenderer.call(this);\n        if (this.rendererRef instanceof ComponentRef) {\n            this._rendererSubscribe(this.rendererRef.instance);\n        }\n    };\n    /*\n     * 插入编辑渲染器\n     * */\n    JigsawTableCellInternalComponent.prototype.insertEditorRenderer = function () {\n        this.editorRendererRef = this.rendererFactory(this.editorRenderer, this.editorRendererInitData);\n        if (this.editorRendererRef instanceof ComponentRef) {\n            this._editorRendererSubscribe(this.editorRendererRef.instance);\n        }\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n        this.changeDetector.detectChanges();\n    };\n    /*\n     * 如果可编辑，单元格绑定点击事件\n     * */\n    JigsawTableCellInternalComponent.prototype._setGoEditListener = function () {\n        var _this = this;\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n        this._goEditCallback = this._editable ? this._renderer.listen(this._elementRef.nativeElement.parentElement, 'click', function () {\n            _this.rendererHost.viewContainerRef.clear();\n            _this.insertEditorRenderer();\n        }) : null;\n    };\n    JigsawTableCellInternalComponent.prototype.ngOnInit = function () {\n        _super.prototype.ngOnInit.call(this);\n        //设置默认渲染器\n        this.renderer = this.renderer ? this.renderer : DefaultCellRenderer;\n        if (this._editable) {\n            this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', 'pointer');\n            //绑定点击事件\n            this._setGoEditListener();\n        }\n    };\n    JigsawTableCellInternalComponent.prototype.ngOnDestroy = function () {\n        _super.prototype.ngOnDestroy.call(this);\n        if (this._editable) {\n            this._renderer.setStyle(this._elementRef.nativeElement.parentElement, 'cursor', 'default');\n        }\n        if (this._goEditCallback) {\n            this._goEditCallback();\n        }\n        if (this.rendererRef instanceof ComponentRef) {\n            this.rendererRef.instance.cellDataChange.unsubscribe();\n        }\n        if (this.editorRendererRef instanceof ComponentRef) {\n            this.editorRendererRef.instance.cellDataChange.unsubscribe();\n        }\n    };\n    return JigsawTableCellInternalComponent;\n}(TableInternalCellBase));\nexport { JigsawTableCellInternalComponent };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../../common/common\";\nimport * as i3 from \"./table-inner.components\";\nvar styles_JigsawTableHeaderInternalComponent = [];\nvar RenderType_JigsawTableHeaderInternalComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTableHeaderInternalComponent, data: {} });\nexport { RenderType_JigsawTableHeaderInternalComponent as RenderType_JigsawTableHeaderInternalComponent };\nfunction View_JigsawTableHeaderInternalComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nfunction View_JigsawTableHeaderInternalComponent_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 4, \"div\", [], null, null, null, null, null)), i0.ɵprd(512, null, i1.ɵNgClassImpl, i1.ɵNgClassR2Impl, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2]), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i1.ɵNgClassImpl], { ngClass: [0, \"ngClass\"] }, null), (_l()(), i0.ɵeld(3, 0, null, null, 0, \"span\", [[\"class\", \"jigsaw-table-sort-btn jigsaw-table-sort-up\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$sortAsc() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵeld(4, 0, null, null, 0, \"span\", [[\"class\", \"jigsaw-table-sort-btn jigsaw-table-sort-down\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$sortDes() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$sortOrderClass; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_JigsawTableHeaderInternalComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { rendererHost: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 4, \"div\", [[\"class\", \"jigsaw-table-header-cell\"]], [[4, \"padding-right\", null]], null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTableHeaderInternalComponent_1)), i0.ɵdid(3, 16384, [[1, 4]], 0, i2.JigsawRendererHost, [i0.ViewContainerRef], null, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTableHeaderInternalComponent_2)), i0.ɵdid(5, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _co.sortable; _ck(_v, 5, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.sortable ? \"14px\" : \"0\"); _ck(_v, 1, 0, currVal_0); }); }\nexport function View_JigsawTableHeaderInternalComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-table-header\", [], null, null, null, View_JigsawTableHeaderInternalComponent_0, RenderType_JigsawTableHeaderInternalComponent)), i0.ɵdid(1, 4440064, null, 0, i3.JigsawTableHeaderInternalComponent, [i0.ComponentFactoryResolver, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar JigsawTableHeaderInternalComponentNgFactory = i0.ɵccf(\"jigsaw-table-header\", i3.JigsawTableHeaderInternalComponent, View_JigsawTableHeaderInternalComponent_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", renderer: \"renderer\", rendererInitData: \"rendererInitData\", tableData: \"tableData\", additionalData: \"additionalData\", sortable: \"sortable\", sortAs: \"sortAs\", defaultSortOrder: \"defaultSortOrder\" }, { cellDataChange: \"cellDataChange\", sort: \"sort\" }, []);\nexport { JigsawTableHeaderInternalComponentNgFactory as JigsawTableHeaderInternalComponentNgFactory };\nvar styles_JigsawTableCellInternalComponent = [];\nvar RenderType_JigsawTableCellInternalComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTableCellInternalComponent, data: {} });\nexport { RenderType_JigsawTableCellInternalComponent as RenderType_JigsawTableCellInternalComponent };\nfunction View_JigsawTableCellInternalComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵand(0, null, null, 0))], null, null); }\nexport function View_JigsawTableCellInternalComponent_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { rendererHost: 0 }), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTableCellInternalComponent_1)), i0.ɵdid(2, 16384, [[1, 4]], 0, i2.JigsawRendererHost, [i0.ViewContainerRef], null, null)], null, null); }\nexport function View_JigsawTableCellInternalComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-table-cell\", [], null, null, null, View_JigsawTableCellInternalComponent_0, RenderType_JigsawTableCellInternalComponent)), i0.ɵdid(1, 4440064, null, 0, i3.JigsawTableCellInternalComponent, [i0.ComponentFactoryResolver, i0.ChangeDetectorRef, i0.Renderer2, i0.ElementRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }\nvar JigsawTableCellInternalComponentNgFactory = i0.ɵccf(\"jigsaw-table-cell\", i3.JigsawTableCellInternalComponent, View_JigsawTableCellInternalComponent_Host_0, { cellData: \"cellData\", row: \"row\", field: \"field\", renderer: \"renderer\", rendererInitData: \"rendererInitData\", tableData: \"tableData\", additionalData: \"additionalData\", editable: \"editable\", editorRenderer: \"editorRenderer\", editorRendererInitData: \"editorRendererInitData\", group: \"group\", rowSpan: \"rowSpan\" }, { cellDataChange: \"cellDataChange\", edit: \"edit\" }, []);\nexport { JigsawTableCellInternalComponentNgFactory as JigsawTableCellInternalComponentNgFactory };\n","\n        <div class=\"jigsaw-table-header-cell\" [style.padding-right]=\"sortable ? '14px' : '0'\">\n            <ng-template jigsaw-renderer-host></ng-template>\n            <div *ngIf=\"sortable\" [ngClass]=\"_$sortOrderClass\">\n                <span (click)=\"_$sortAsc()\" class=\"jigsaw-table-sort-btn jigsaw-table-sort-up\"></span>\n                <span (click)=\"_$sortDes()\" class=\"jigsaw-table-sort-btn jigsaw-table-sort-down\"></span>\n            </div>\n        </div>","<ng-template jigsaw-renderer-host></ng-template>","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./table\";\nimport * as i2 from \"./table-renderer.ngfactory\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../common/service/popup.service\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../../common/common\";\nimport * as i8 from \"../checkbox/index\";\nimport * as i9 from \"../input/input\";\nimport * as i10 from \"../switch/index\";\nimport * as i11 from \"../tag/tag\";\nimport * as i12 from \"../../common/directive/float/index\";\nimport * as i13 from \"ngx-perfect-scrollbar\";\nimport * as i14 from \"../combo-select/index\";\nimport * as i15 from \"../list-and-tile/list\";\nimport * as i16 from \"../list-and-tile/list-lite\";\nimport * as i17 from \"../select/select\";\nimport * as i18 from \"./table-renderer\";\nimport * as i19 from \"../../common/directive/trusted-html/trusted-html\";\nimport * as i20 from \"@angular/platform-browser\";\nimport * as i21 from \"./table-inner.components.ngfactory\";\nimport * as i22 from \"./table-inner.components\";\nvar JigsawTableModuleNgFactory = i0.ɵcmf(i1.JigsawTableModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.DefaultCellRendererNgFactory, i2.TableCellTextEditorRendererNgFactory, i2.TableHeadCheckboxRendererNgFactory, i2.TableCellCheckboxRendererNgFactory, i2.TableCellSwitchRendererNgFactory, i2.TableCellSelectRendererNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i3.NgLocalization, i3.NgLocaleLocalization, [i0.LOCALE_ID, [2, i3.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i4.ɵangular_packages_forms_forms_o, i4.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(4608, i5.PopupService, i5.PopupService, [i0.ComponentFactoryResolver, i0.NgZone, [2, i6.Router], [2, i6.ActivatedRoute]]), i0.ɵmpd(1073742336, i3.CommonModule, i3.CommonModule, []), i0.ɵmpd(1073742336, i7.JigsawCommonModule, i7.JigsawCommonModule, []), i0.ɵmpd(1073742336, i8.JigsawCheckBoxModule, i8.JigsawCheckBoxModule, []), i0.ɵmpd(1073742336, i4.ɵangular_packages_forms_forms_d, i4.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i4.FormsModule, i4.FormsModule, []), i0.ɵmpd(1073742336, i9.JigsawInputModule, i9.JigsawInputModule, []), i0.ɵmpd(1073742336, i10.JigsawSwitchModule, i10.JigsawSwitchModule, []), i0.ɵmpd(1073742336, i11.JigsawTagModule, i11.JigsawTagModule, []), i0.ɵmpd(1073742336, i12.JigsawFloatModule, i12.JigsawFloatModule, []), i0.ɵmpd(1073742336, i13.PerfectScrollbarModule, i13.PerfectScrollbarModule, []), i0.ɵmpd(1073742336, i14.JigsawComboSelectModule, i14.JigsawComboSelectModule, []), i0.ɵmpd(1073742336, i15.JigsawListModule, i15.JigsawListModule, []), i0.ɵmpd(1073742336, i16.JigsawListLiteModule, i16.JigsawListLiteModule, []), i0.ɵmpd(1073742336, i17.JigsawSelectModule, i17.JigsawSelectModule, []), i0.ɵmpd(1073742336, i18.JigsawTableRendererModule, i18.JigsawTableRendererModule, []), i0.ɵmpd(1073742336, i19.JigsawTrustedHtmlModule, i19.JigsawTrustedHtmlModule, []), i0.ɵmpd(1073742336, i1.JigsawTableModule, i1.JigsawTableModule, [])]); });\nexport { JigsawTableModuleNgFactory as JigsawTableModuleNgFactory };\nvar styles_JigsawTable = [];\nvar RenderType_JigsawTable = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawTable, data: {} });\nexport { RenderType_JigsawTable as RenderType_JigsawTable };\nfunction View_JigsawTable_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \"col\", [], [[8, \"width\", 0]], null, null, null, null))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.width, \"\"); _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-table-cell-content\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), i0.ɵdid(1, 212992, null, 0, i19.JigsawTrustedHtml, [i20.DomSanitizer, i0.NgZone], { trustedHtmlContext: [0, \"trustedHtmlContext\"], trustedHtml: [1, \"trustedHtml\"] }, null)], function (_ck, _v) { var currVal_1 = _v.parent.context.$implicit.innerHtmlContext; var currVal_2 = _v.parent.context.$implicit.cellData; _ck(_v, 1, 0, currVal_1, currVal_2); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).innerHtml; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-table-header\", [], null, [[null, \"sort\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"sort\" === en)) {\n        var pd_0 = (_co._$onSort($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, i21.View_JigsawTableHeaderInternalComponent_0, i21.RenderType_JigsawTableHeaderInternalComponent)), i0.ɵdid(1, 4440064, [[2, 4]], 0, i22.JigsawTableHeaderInternalComponent, [i0.ComponentFactoryResolver, i0.ChangeDetectorRef], { cellData: [0, \"cellData\"], row: [1, \"row\"], field: [2, \"field\"], renderer: [3, \"renderer\"], rendererInitData: [4, \"rendererInitData\"], tableData: [5, \"tableData\"], additionalData: [6, \"additionalData\"], sortable: [7, \"sortable\"], sortAs: [8, \"sortAs\"], defaultSortOrder: [9, \"defaultSortOrder\"] }, { sort: \"sort\" })], function (_ck, _v) { var _co = _v.component; var currVal_0 = _v.parent.context.$implicit.cellData; var currVal_1 = 0; var currVal_2 = _v.parent.context.$implicit.field; var currVal_3 = _v.parent.context.$implicit.renderer; var currVal_4 = _v.parent.context.$implicit.rendererInitData; var currVal_5 = _co.data; var currVal_6 = _co.additionalData; var currVal_7 = _v.parent.context.$implicit.sortable; var currVal_8 = _v.parent.context.$implicit.sortAs; var currVal_9 = _v.parent.context.$implicit.defaultSortOrder; _ck(_v, 1, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9); }, null); }\nfunction View_JigsawTable_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 6, \"td\", [], [[8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 5, null, null, null, null, null, null, null)), i0.ɵdid(2, 16384, null, 0, i3.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_3)), i0.ɵdid(4, 278528, null, 0, i3.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i3.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_4)), i0.ɵdid(6, 16384, null, 0, i3.NgSwitchDefault, [i0.ViewContainerRef, i0.TemplateRef, i3.NgSwitch], null, null)], function (_ck, _v) { var currVal_1 = _v.context.$implicit.renderer; _ck(_v, 2, 0, currVal_1); var currVal_2 = \"html\"; _ck(_v, 4, 0, currVal_2); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.clazz, \"\"); _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_5(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \"col\", [], [[8, \"width\", 0]], null, null, null, null))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.width, \"\"); _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_7(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 0, \"td\", [], [[8, \"className\", 0]], null, null, null, null))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", _v.context.$implicit.clazz, \"\"); _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_6(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 3, \"thead\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_7)), i0.ɵdid(3, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co._$headerSettings; _ck(_v, 3, 0, currVal_0); }, null); }\nfunction View_JigsawTable_10(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"div\", [[\"class\", \"jigsaw-table-cell-content\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-table-cell-text\"]], [[8, \"title\", 0]], null, null, null, null)), (_l()(), i0.ɵted(2, null, [\"\", \"\"]))], null, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", (_v.parent.context.$implicit.tooltip ? _v.parent.context.$implicit.tooltip : \"\"), \"\"); _ck(_v, 1, 0, currVal_0); var currVal_1 = _v.parent.context.$implicit.cellData; _ck(_v, 2, 0, currVal_1); }); }\nfunction View_JigsawTable_11(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-table-cell-content\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), i0.ɵdid(1, 212992, null, 0, i19.JigsawTrustedHtml, [i20.DomSanitizer, i0.NgZone], { trustedHtmlContext: [0, \"trustedHtmlContext\"], trustedHtml: [1, \"trustedHtml\"] }, null)], function (_ck, _v) { var currVal_1 = _v.parent.context.$implicit.innerHtmlContext; var currVal_2 = _v.parent.context.$implicit.cellData; _ck(_v, 1, 0, currVal_1, currVal_2); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).innerHtml; _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_12(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-table-cell\", [[\"class\", \"jigsaw-table-cell-content\"]], [[8, \"title\", 0]], [[null, \"cellDataChange\"], [null, \"edit\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"cellDataChange\" === en)) {\n        var pd_0 = ((_v.parent.context.$implicit.cellData = $event) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"edit\" === en)) {\n        var pd_1 = (_co.edit.emit($event) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, i21.View_JigsawTableCellInternalComponent_0, i21.RenderType_JigsawTableCellInternalComponent)), i0.ɵdid(1, 4440064, null, 0, i22.JigsawTableCellInternalComponent, [i0.ComponentFactoryResolver, i0.ChangeDetectorRef, i0.Renderer2, i0.ElementRef], { cellData: [0, \"cellData\"], row: [1, \"row\"], field: [2, \"field\"], renderer: [3, \"renderer\"], rendererInitData: [4, \"rendererInitData\"], tableData: [5, \"tableData\"], additionalData: [6, \"additionalData\"], editable: [7, \"editable\"], editorRenderer: [8, \"editorRenderer\"], editorRendererInitData: [9, \"editorRendererInitData\"], group: [10, \"group\"], rowSpan: [11, \"rowSpan\"] }, { cellDataChange: \"cellDataChange\", edit: \"edit\" })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _v.parent.context.$implicit.cellData; var currVal_2 = _v.parent.parent.context.index; var currVal_3 = _v.parent.context.$implicit.field; var currVal_4 = _v.parent.context.$implicit.renderer; var currVal_5 = _v.parent.context.$implicit.rendererInitData; var currVal_6 = _co.data; var currVal_7 = _co.additionalData; var currVal_8 = _v.parent.context.$implicit.editable; var currVal_9 = _v.parent.context.$implicit.editorRenderer; var currVal_10 = _v.parent.context.$implicit.editorRendererInitData; var currVal_11 = _v.parent.context.$implicit.group; var currVal_12 = _v.parent.context.$implicit.rowSpan; _ck(_v, 1, 1, [currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8, currVal_9, currVal_10, currVal_11, currVal_12]); }, function (_ck, _v) { var currVal_0 = i0.ɵinlineInterpolate(1, \"\", (_v.parent.context.$implicit.tooltip ? _v.parent.context.$implicit.tooltip : \"\"), \"\"); _ck(_v, 0, 0, currVal_0); }); }\nfunction View_JigsawTable_9(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 8, \"td\", [], [[1, \"rowspan\", 0], [4, \"display\", null], [8, \"className\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 7, null, null, null, null, null, null, null)), i0.ɵdid(2, 16384, null, 0, i3.NgSwitch, [], { ngSwitch: [0, \"ngSwitch\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_10)), i0.ɵdid(4, 278528, null, 0, i3.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i3.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_11)), i0.ɵdid(6, 278528, null, 0, i3.NgSwitchCase, [i0.ViewContainerRef, i0.TemplateRef, i3.NgSwitch], { ngSwitchCase: [0, \"ngSwitchCase\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_12)), i0.ɵdid(8, 16384, null, 0, i3.NgSwitchDefault, [i0.ViewContainerRef, i0.TemplateRef, i3.NgSwitch], null, null)], function (_ck, _v) { var currVal_3 = _v.context.$implicit.renderer; _ck(_v, 2, 0, currVal_3); var currVal_4 = (null || undefined); _ck(_v, 4, 0, currVal_4); var currVal_5 = \"html\"; _ck(_v, 6, 0, currVal_5); }, function (_ck, _v) { var currVal_0 = ((_v.context.$implicit.rowSpan > 1) ? _v.context.$implicit.rowSpan : null); var currVal_1 = (_v.context.$implicit.rowSpan ? \"table-cell\" : \"none\"); var currVal_2 = i0.ɵinlineInterpolate(2, \"\", _v.context.$implicit.clazz, \" \", (_v.context.$implicit.tooltip ? \"jigsaw-table-line-ellipsis\" : \"\"), \"\"); _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2); }); }\nfunction View_JigsawTable_8(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, [[1, 0], [\"tableRow\", 1]], null, 2, \"tr\", [], null, [[null, \"click\"], [null, \"dblclick\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$clickRow(_v.context.index) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"dblclick\" === en)) {\n        var pd_1 = (_co._$handleRowDoubleClick(_v.context.index) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_9)), i0.ɵdid(2, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var currVal_0 = _v.context.$implicit; _ck(_v, 2, 0, currVal_0); }, null); }\nexport function View_JigsawTable_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _rowElementRefs: 1 }), i0.ɵqud(671088640, 2, { _headerComponents: 1 }), i0.ɵqud(671088640, 3, { contentScrollbar: 0 }), i0.ɵqud(671088640, 4, { _bodyScrollbar: 0 }), (_l()(), i0.ɵeld(4, 0, [[\"contentScrollbar\", 1]], null, 23, \"div\", [[\"class\", \"jigsaw-table-range\"]], [[2, \"jigsaw-table-hide-head\", null]], null, null, null, null)), i0.ɵdid(5, 999424, [[3, 4]], 0, i13.PerfectScrollbarDirective, [i0.NgZone, i0.KeyValueDiffers, i0.ElementRef, i0.PLATFORM_ID, [2, i13.PERFECT_SCROLLBAR_CONFIG]], { config: [0, \"config\"] }, null), i0.ɵpod(6, { suppressScrollY: 0, wheelSpeed: 1, wheelPropagation: 2, minScrollbarLength: 3 }), (_l()(), i0.ɵeld(7, 0, null, null, 7, \"table\", [[\"class\", \"jigsaw-table-header\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵeld(8, 0, null, null, 2, \"colgroup\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_1)), i0.ɵdid(10, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(11, 0, null, null, 3, \"thead\", [], null, null, null, null, null)), (_l()(), i0.ɵeld(12, 0, null, null, 2, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_2)), i0.ɵdid(14, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵeld(15, 0, [[\"bodyScrollbar\", 1]], null, 12, \"div\", [[\"class\", \"jigsaw-table-body-range\"]], [[4, \"width\", null], [2, \"jigsaw-table-no-data\", null]], null, null, null, null)), i0.ɵdid(16, 999424, [[4, 4]], 0, i13.PerfectScrollbarDirective, [i0.NgZone, i0.KeyValueDiffers, i0.ElementRef, i0.PLATFORM_ID, [2, i13.PERFECT_SCROLLBAR_CONFIG]], { config: [0, \"config\"] }, null), i0.ɵpod(17, { suppressScrollX: 0, wheelSpeed: 1, wheelPropagation: 2, minScrollbarLength: 3 }), (_l()(), i0.ɵeld(18, 0, null, null, 0, \"img\", [[\"class\", \"jigsaw-table-no-data-img\"]], [[4, \"display\", null], [8, \"src\", 4]], null, null, null, null)), (_l()(), i0.ɵeld(19, 0, null, null, 8, \"table\", [[\"class\", \"jigsaw-table-body\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(20, 0, null, null, 2, \"colgroup\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_5)), i0.ɵdid(22, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_6)), i0.ɵdid(24, 16384, null, 0, i3.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵeld(25, 0, null, null, 2, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawTable_8)), i0.ɵdid(27, 278528, null, 0, i3.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_1 = _ck(_v, 6, 0, true, 0.5, true, 20); _ck(_v, 5, 0, currVal_1); var currVal_3 = _co._$headerSettings; _ck(_v, 10, 0, currVal_3); var currVal_4 = _co._$headerSettings; _ck(_v, 14, 0, currVal_4); var currVal_7 = _ck(_v, 17, 0, true, 0.5, true, 20); _ck(_v, 16, 0, currVal_7); var currVal_10 = _co._$headerSettings; _ck(_v, 22, 0, currVal_10); var currVal_11 = _co._$isFFBrowser; _ck(_v, 24, 0, currVal_11); var currVal_12 = _co._$cellSettings; _ck(_v, 27, 0, currVal_12); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.hideHeader; _ck(_v, 4, 0, currVal_0); var currVal_2 = _co.hideHeader; _ck(_v, 7, 0, currVal_2); var currVal_5 = _co.contentWidth; var currVal_6 = !_co._$cellSettings.length; _ck(_v, 15, 0, currVal_5, currVal_6); var currVal_8 = (!!_co._$cellSettings.length ? \"none\" : \"block\"); var currVal_9 = i0.ɵinlineInterpolate(1, \"\", _co._$noDataSrc, \"\"); _ck(_v, 18, 0, currVal_8, currVal_9); }); }\nexport function View_JigsawTable_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"jigsaw-table\", [], [[4, \"width\", null], [4, \"height\", null], [2, \"jigsaw-table-host\", null], [2, \"jigsaw-table-ff\", null]], null, null, View_JigsawTable_0, RenderType_JigsawTable)), i0.ɵdid(1, 4440064, null, 0, i1.JigsawTable, [i0.Renderer2, i0.ElementRef, i0.NgZone, i0.ChangeDetectorRef], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 1).width; var currVal_1 = i0.ɵnov(_v, 1).height; var currVal_2 = true; var currVal_3 = i0.ɵnov(_v, 1)._$isFFBrowser; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3); }); }\nvar JigsawTableNgFactory = i0.ɵccf(\"jigsaw-table, j-table\", i1.JigsawTable, View_JigsawTable_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", contentWidth: \"contentWidth\", hideHeader: \"hideHeader\", selectedRow: \"selectedRow\", additionalData: \"additionalData\", trackRowBy: \"trackRowBy\", data: \"data\", columnDefines: \"columnDefines\", columnDefineGeneratorContext: \"columnDefineGeneratorContext\", additionalColumnDefines: \"additionalColumnDefines\", floatingHeader: \"floatingHeader\" }, { sort: \"sort\", selectChange: \"selectChange\", selectedRowChange: \"selectedRowChange\", additionalDataChange: \"additionalDataChange\", edit: \"edit\", doubleClick: \"doubleClick\" }, []);\nexport { JigsawTableNgFactory as JigsawTableNgFactory };\n","<div class=\"jigsaw-table-range\" #contentScrollbar\n     [perfectScrollbar]=\"{suppressScrollY: true, wheelSpeed: 0.5, wheelPropagation: true, minScrollbarLength: 20}\"\n     [class.jigsaw-table-hide-head]=\"hideHeader\">\n    <table class=\"jigsaw-table-header\" [hidden]=\"hideHeader\">\n        <colgroup>\n            <col *ngFor=\"let head of _$headerSettings;\" width=\"{{head.width}}\">\n        </colgroup>\n        <thead>\n        <tr>\n            <td *ngFor=\"let head of _$headerSettings;\" class=\"{{head.clazz}}\">\n                <ng-container [ngSwitch]=\"head.renderer\">\n                    <div *ngSwitchCase=\"'html'\" class=\"jigsaw-table-cell-content\"\n                         [trustedHtml]=\"head.cellData\" [trustedHtmlContext]=\"head.innerHtmlContext\"></div>\n                    <jigsaw-table-header *ngSwitchDefault [tableData]=\"data\"\n                                         [additionalData]=\"additionalData\"\n                                         [cellData]=\"head.cellData\"\n                                         [field]=\"head.field\"\n                                         [row]=\"0\"\n                                         [renderer]=\"head.renderer\"\n                                         [rendererInitData]=\"head.rendererInitData\"\n                                         [sortable]=\"head.sortable\"\n                                         [sortAs]=\"head.sortAs\"\n                                         [defaultSortOrder]=\"head.defaultSortOrder\"\n                                         (sort)=\"_$onSort($event)\">\n                    </jigsaw-table-header>\n                </ng-container>\n            </td>\n        </tr>\n        </thead>\n    </table>\n    <div #bodyScrollbar class=\"jigsaw-table-body-range\" [style.width]=\"contentWidth\"\n         [class.jigsaw-table-no-data]=\"!_$cellSettings.length\"\n         [perfectScrollbar]=\"{suppressScrollX: true, wheelSpeed: 0.5, wheelPropagation: true, minScrollbarLength: 20}\">\n        <img [style.display]=\"!!_$cellSettings.length ? 'none' : 'block'\" class=\"jigsaw-table-no-data-img\"\n             src=\"{{_$noDataSrc}}\">\n        <table class=\"jigsaw-table-body\">\n            <colgroup>\n                <col *ngFor=\"let head of _$headerSettings;\" width=\"{{head.width}}\">\n            </colgroup>\n            <thead *ngIf=\"_$isFFBrowser\">\n            <tr>\n                <td *ngFor=\"let head of _$headerSettings;\" class=\"{{head.clazz}}\"></td>\n            </tr>\n            </thead>\n            <tbody>\n            <tr #tableRow *ngFor=\"let row of _$cellSettings; index as rowIndex\"\n                (click)=\"_$clickRow(rowIndex)\" (dblclick)=\"_$handleRowDoubleClick(rowIndex)\">\n                <td *ngFor=\"let cell of row;\"\n                    [attr.rowspan]=\"cell.rowSpan > 1 ? cell.rowSpan : null\"\n                    [style.display]=\"cell.rowSpan ? 'table-cell' : 'none'\"\n                    class=\"{{cell.clazz}} {{cell.tooltip ? 'jigsaw-table-line-ellipsis': ''}}\">\n                    <ng-container [ngSwitch]=\"cell.renderer\">\n                        <div *ngSwitchCase=\"null || undefined\" class=\"jigsaw-table-cell-content\">\n                            <span class=\"jigsaw-table-cell-text\" title=\"{{cell.tooltip ? cell.tooltip : ''}}\">{{cell.cellData}}</span>\n                        </div>\n                        <div *ngSwitchCase=\"'html'\" class=\"jigsaw-table-cell-content\"\n                             [trustedHtml]=\"cell.cellData\" [trustedHtmlContext]=\"cell.innerHtmlContext\"></div>\n                        <jigsaw-table-cell *ngSwitchDefault class=\"jigsaw-table-cell-content\"\n                                           title=\"{{cell.tooltip ? cell.tooltip : ''}}\"\n                                           [tableData]=\"data\"\n                                           [additionalData]=\"additionalData\"\n                                           [(cellData)]=\"cell.cellData\"\n                                           [row]=\"rowIndex\"\n                                           [field]=\"cell.field\"\n                                           [renderer]=\"cell.renderer\"\n                                           [rendererInitData]=\"cell.rendererInitData\"\n                                           [editable]=\"cell.editable\"\n                                           [editorRenderer]=\"cell.editorRenderer\"\n                                           [editorRendererInitData]=\"cell.editorRendererInitData\"\n                                           [group]=\"cell.group\"\n                                           [rowSpan]=\"cell.rowSpan\"\n                                           (edit)=\"edit.emit($event)\">\n                        </jigsaw-table-cell>\n                    </ng-container>\n                </td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n</div>\n","/**\n * Created by 10177553 on 2017/3/14.\n */\n\nimport {\n    Component, Input, EventEmitter, Output, OnInit, AfterContentInit, Renderer2, ElementRef, forwardRef\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\nimport {AbstractJigsawComponent} from '../../common/common';\nimport {CheckBoxStatus} from \"./typings\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\nexport type CheckBoxValue = boolean | CheckBoxStatus;\n\n/**\n * 复选框组件，支持勾选、非勾选、中间状态3种状态。\n *\n * 这是一个表单友好组件。\n *\n * $demo = checkbox/full\n * $demo = checkbox/basic\n */\n@Component({\n    selector: 'jigsaw-checkbox, j-checkbox',\n    templateUrl: './checkbox.html',\n    host: {\n        '[style.width]': 'width',\n        '[class.jigsaw-checkbox-host]': 'true',\n        '[class.jigsaw-checkbox-error]': '!valid'\n    },\n    providers: [\n        { provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawCheckBox), multi: true },\n    ]\n})\nexport class JigsawCheckBox extends AbstractJigsawComponent implements ControlValueAccessor, OnInit, AfterContentInit {\n\n    private _enableIndeterminate: boolean = false;\n\n    /**\n     * 复选框是否启用中间状态的开关\n     * - 等于`true`时，用户可以点出中间状态；\n     * - 等于`false`时，用户不可点出中间状态（默认）；\n     *\n     * 编程模式赋值复选框状态时，不受此开关的影响，即即使`enableIndeterminate`被设置为false，\n     * 应用依然可以在代码中直接将组件的状态设置为`CheckBoxStatus.indeterminate`。\n     *\n     * $demo = checkbox/basic\n     */\n    @Input()\n    public get enableIndeterminate(): boolean {\n        return this._enableIndeterminate;\n    }\n\n    public set enableIndeterminate(value: boolean) {\n        this._enableIndeterminate = value;\n        this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n        if (value) {\n            this._valueCandidates.push(CheckBoxStatus.indeterminate);\n        }\n    }\n\n    private _checked: CheckBoxStatus = CheckBoxStatus.unchecked;\n\n    /**\n     * 用于设置复选框的状态，支持的所有状态参考`CheckBoxStatus`，默认值是`CheckBoxStatus.unchecked`\n     *\n     * $demo = checkbox/basic\n     */\n    @Input()\n    public get checked(): CheckBoxValue {\n        return this._checked\n    }\n\n    public set checked(value: CheckBoxValue) {\n        this.writeValue(value);\n    }\n\n    /**\n     * 选中状态变化时发出此事件，此事件可以简化为`change`\n     *\n     */\n    @Output()\n    public checkedChange: EventEmitter<CheckBoxValue> = new EventEmitter();\n\n    /**\n     * 选中状态变化时发出此事件\n     *\n     */\n    @Output()\n    public change = this.checkedChange;\n\n    private _disabled: boolean = false;\n\n    /**\n     * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n     *\n     * $demo = checkbox/disabled\n     */\n    @Input()\n    public get disabled(): boolean {\n        return this._disabled;\n    }\n\n    public set disabled(value: boolean) {\n        this._disabled = value;\n        this._setCheckBoxClass();\n    }\n\n    @Input()\n    public valid: boolean = true;\n\n    constructor(private _renderer: Renderer2, private _elementRef: ElementRef) {\n        super();\n    }\n\n    public ngOnInit() {\n        this._setCheckBoxClass();\n    }\n\n    public ngAfterContentInit() {\n        const labelEl = this._elementRef.nativeElement.querySelector('.jigsaw-checkbox-label');\n        if (labelEl.innerText.trim() === '') {\n            this._renderer.setStyle(labelEl, 'padding', '0');\n        }\n    }\n\n    private _valueCandidates: CheckBoxStatus[] = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n\n    private _toggle(): void {\n        const index = this._valueCandidates.indexOf(this._checked);\n        if (index == -1) {\n            this._checked = this._valueCandidates[1];\n        } else {\n            this._checked = this._valueCandidates[(index + 1) % this._valueCandidates.length];\n        }\n\n        this.checkedChange.emit(this._checked);\n        this._propagateChange(this._checked);\n    }\n\n    private _fixCheckValue(value: CheckBoxValue): CheckBoxStatus {\n        let v: CheckBoxStatus;\n        if (CommonUtils.isUndefined(value)) {\n            v = CheckBoxStatus.unchecked;\n        } else if (typeof value === 'number') {\n            v = value > CheckBoxStatus.indeterminate ? CheckBoxStatus.checked : value;\n        } else {\n            v = value ? CheckBoxStatus.checked : CheckBoxStatus.unchecked;\n        }\n        return v;\n    }\n\n    /**\n     * checkbox点击调用的事件\n     * @param event\n     * @internal\n     */\n    public _$onCheckboxClick(event: Event) {\n        event.stopPropagation();\n        event.preventDefault();\n\n        if (!this.disabled) {\n            this._toggle();\n            this._setCheckBoxClass();\n        }\n    }\n\n    /**\n     * 更新checkbox的样式信息\n     * @internal\n     */\n    public _$checkboxClass: {};\n\n    private _setCheckBoxClass() {\n        this._$checkboxClass = {\n            'jigsaw-checkbox': 'true',\n            'jigsaw-checkbox-checked': this._checked,\n            'jigsaw-checkbox-indeterminate': this._checked === CheckBoxStatus.indeterminate,\n            'jigsaw-checkbox-disabled': this.disabled\n        }\n    }\n\n    private _propagateChange:any = () => {};\n\n    public writeValue(value: any): void {\n        this._checked = this._fixCheckValue(value);\n        this._setCheckBoxClass();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n}\n","/**\n * Created by 10177553 on 2017/3/14.\n */\nimport * as tslib_1 from \"tslib\";\nimport { EventEmitter, OnInit, AfterContentInit, Renderer2, ElementRef } from '@angular/core';\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from '../../common/common';\nimport { CheckBoxStatus } from \"./typings\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 复选框组件，支持勾选、非勾选、中间状态3种状态。\n *\n * 这是一个表单友好组件。\n *\n * $demo = checkbox/full\n * $demo = checkbox/basic\n */\nvar JigsawCheckBox = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawCheckBox, _super);\n    function JigsawCheckBox(_renderer, _elementRef) {\n        var _this = _super.call(this) || this;\n        _this._renderer = _renderer;\n        _this._elementRef = _elementRef;\n        _this._enableIndeterminate = false;\n        _this._checked = CheckBoxStatus.unchecked;\n        /**\n         * 选中状态变化时发出此事件，此事件可以简化为`change`\n         *\n         */\n        _this.checkedChange = new EventEmitter();\n        /**\n         * 选中状态变化时发出此事件\n         *\n         */\n        _this.change = _this.checkedChange;\n        _this._disabled = false;\n        _this.valid = true;\n        _this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n        _this._propagateChange = function () { };\n        return _this;\n    }\n    Object.defineProperty(JigsawCheckBox.prototype, \"enableIndeterminate\", {\n        /**\n         * 复选框是否启用中间状态的开关\n         * - 等于`true`时，用户可以点出中间状态；\n         * - 等于`false`时，用户不可点出中间状态（默认）；\n         *\n         * 编程模式赋值复选框状态时，不受此开关的影响，即即使`enableIndeterminate`被设置为false，\n         * 应用依然可以在代码中直接将组件的状态设置为`CheckBoxStatus.indeterminate`。\n         *\n         * $demo = checkbox/basic\n         */\n        get: function () {\n            return this._enableIndeterminate;\n        },\n        set: function (value) {\n            this._enableIndeterminate = value;\n            this._valueCandidates = [CheckBoxStatus.unchecked, CheckBoxStatus.checked];\n            if (value) {\n                this._valueCandidates.push(CheckBoxStatus.indeterminate);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawCheckBox.prototype, \"checked\", {\n        /**\n         * 用于设置复选框的状态，支持的所有状态参考`CheckBoxStatus`，默认值是`CheckBoxStatus.unchecked`\n         *\n         * $demo = checkbox/basic\n         */\n        get: function () {\n            return this._checked;\n        },\n        set: function (value) {\n            this.writeValue(value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawCheckBox.prototype, \"disabled\", {\n        /**\n         * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n         *\n         * $demo = checkbox/disabled\n         */\n        get: function () {\n            return this._disabled;\n        },\n        set: function (value) {\n            this._disabled = value;\n            this._setCheckBoxClass();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawCheckBox.prototype.ngOnInit = function () {\n        this._setCheckBoxClass();\n    };\n    JigsawCheckBox.prototype.ngAfterContentInit = function () {\n        var labelEl = this._elementRef.nativeElement.querySelector('.jigsaw-checkbox-label');\n        if (labelEl.innerText.trim() === '') {\n            this._renderer.setStyle(labelEl, 'padding', '0');\n        }\n    };\n    JigsawCheckBox.prototype._toggle = function () {\n        var index = this._valueCandidates.indexOf(this._checked);\n        if (index == -1) {\n            this._checked = this._valueCandidates[1];\n        }\n        else {\n            this._checked = this._valueCandidates[(index + 1) % this._valueCandidates.length];\n        }\n        this.checkedChange.emit(this._checked);\n        this._propagateChange(this._checked);\n    };\n    JigsawCheckBox.prototype._fixCheckValue = function (value) {\n        var v;\n        if (CommonUtils.isUndefined(value)) {\n            v = CheckBoxStatus.unchecked;\n        }\n        else if (typeof value === 'number') {\n            v = value > CheckBoxStatus.indeterminate ? CheckBoxStatus.checked : value;\n        }\n        else {\n            v = value ? CheckBoxStatus.checked : CheckBoxStatus.unchecked;\n        }\n        return v;\n    };\n    /**\n     * checkbox点击调用的事件\n     * @param event\n     * @internal\n     */\n    JigsawCheckBox.prototype._$onCheckboxClick = function (event) {\n        event.stopPropagation();\n        event.preventDefault();\n        if (!this.disabled) {\n            this._toggle();\n            this._setCheckBoxClass();\n        }\n    };\n    JigsawCheckBox.prototype._setCheckBoxClass = function () {\n        this._$checkboxClass = {\n            'jigsaw-checkbox': 'true',\n            'jigsaw-checkbox-checked': this._checked,\n            'jigsaw-checkbox-indeterminate': this._checked === CheckBoxStatus.indeterminate,\n            'jigsaw-checkbox-disabled': this.disabled\n        };\n    };\n    JigsawCheckBox.prototype.writeValue = function (value) {\n        this._checked = this._fixCheckValue(value);\n        this._setCheckBoxClass();\n    };\n    JigsawCheckBox.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawCheckBox.prototype.registerOnTouched = function (fn) {\n    };\n    return JigsawCheckBox;\n}(AbstractJigsawComponent));\nexport { JigsawCheckBox };\n","/**\n * Created by 10177553 on 2017/3/14.\n */\nimport {NgModule} from '@angular/core';\n\nimport {JigsawCheckBox} from './checkbox';\nimport {CommonModule} from \"@angular/common\";\n\nexport * from './checkbox';\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [JigsawCheckBox, CommonModule],\n    declarations: [JigsawCheckBox],\n    providers: [],\n})\nexport class JigsawCheckBoxModule { }\n\n"],"sourceRoot":""}