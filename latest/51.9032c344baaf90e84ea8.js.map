{"version":3,"sources":["webpack:///./src/app/demo/pc/tab/api/tabContent/tab-content.module.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/input/input.ngfactory.js.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/input/input.html","webpack:///./src/jigsaw/pc-components/input/input.ts.pre-build-optimizer.js","webpack:///./src/jigsaw/pc-components/input/input.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","TabContentModuleNgFactory","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_tab_content_module__WEBPACK_IMPORTED_MODULE_1__","_node_modules_angular_router_router_ngfactory__WEBPACK_IMPORTED_MODULE_2__","_tabContent_ngfactory__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","_jigsaw_pc_components_button_button__WEBPACK_IMPORTED_MODULE_7__","_jigsaw_pc_components_input_input__WEBPACK_IMPORTED_MODULE_8__","_tabContent__WEBPACK_IMPORTED_MODULE_9__","_l","path","component","outlet","RenderType_JigsawInput","View_JigsawInput_0","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","encapsulation","styles","data","View_JigsawInput_1","_v","en","$event","ad","_$clearValue","_ck","value","_inputElement","_co","_handleInput","target","onTouched","_compositionStart","_compositionEnd","_$handleBlur","_$handleFocus","p0_0","isDisabled","model","update","ngIf","disabled","clearable","placeholder","type","ngClassUntouched","ngClassTouched","ngClassPristine","ngClassDirty","ngClassValid","ngClassInvalid","ngClassPending","JigsawInput","JigsawInputModule","tslib__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","_common_common__WEBPACK_IMPORTED_MODULE_2__","_common_core_utils_common_utils__WEBPACK_IMPORTED_MODULE_3__","_super","_this","apply","this","arguments","valid","password","_focusEmitter","_blurEmitter","_propagateChange","_value","valueChange","_placeholder","_focused","blurOnClear","Object","defineProperty","prototype","get","enumerable","configurable","writeValue","isUndefined","toString","registerOnChange","fn","registerOnTouched","set","newValue","emit","txt","focus","nativeElement","select","event","callLater","_$stopPropagation","preventDefault","stopPropagation"],"mappings":"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","file":"51.9032c344baaf90e84ea8.js","sourcesContent":["/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./tab-content.module\";\nimport * as i2 from \"../../../../../../../node_modules/@angular/router/router.ngfactory\";\nimport * as i3 from \"./tabContent.ngfactory\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"../../../../../../jigsaw/pc-components/button/button\";\nimport * as i8 from \"../../../../../../jigsaw/pc-components/input/input\";\nimport * as i9 from \"./tabContent\";\nvar TabContentModuleNgFactory = i0.ɵcmf(i1.TabContentModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, [i2.ɵangular_packages_router_router_lNgFactory, i3.TabContentComponentNgFactory, i3.TabContentDefineNgFactory]], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i4.NgLocalization, i4.NgLocaleLocalization, [i0.LOCALE_ID, [2, i4.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i5.ɵangular_packages_forms_forms_o, i5.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(1073742336, i6.RouterModule, i6.RouterModule, [[2, i6.ɵangular_packages_router_router_a], [2, i6.Router]]), i0.ɵmpd(1073742336, i4.CommonModule, i4.CommonModule, []), i0.ɵmpd(1073742336, i7.JigsawButtonModule, i7.JigsawButtonModule, []), i0.ɵmpd(1073742336, i5.ɵangular_packages_forms_forms_d, i5.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i5.FormsModule, i5.FormsModule, []), i0.ɵmpd(1073742336, i8.JigsawInputModule, i8.JigsawInputModule, []), i0.ɵmpd(1073742336, i1.TabContentModule, i1.TabContentModule, []), i0.ɵmpd(1024, i6.ROUTES, function () { return [[{ path: \"\", component: i9.TabContentComponent, outlet: \"tab-page\" }]]; }, [])]); });\nexport { TabContentModuleNgFactory as TabContentModuleNgFactory };\n","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./input\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nvar JigsawInputModuleNgFactory = i0.ɵcmf(i1.JigsawInputModule, [], function (_l) { return i0.ɵmod([i0.ɵmpd(512, i0.ComponentFactoryResolver, i0.ɵCodegenComponentFactoryResolver, [[8, []], [3, i0.ComponentFactoryResolver], i0.NgModuleRef]), i0.ɵmpd(4608, i2.NgLocalization, i2.NgLocaleLocalization, [i0.LOCALE_ID, [2, i2.ɵangular_packages_common_common_a]]), i0.ɵmpd(4608, i3.ɵangular_packages_forms_forms_o, i3.ɵangular_packages_forms_forms_o, []), i0.ɵmpd(1073742336, i2.CommonModule, i2.CommonModule, []), i0.ɵmpd(1073742336, i3.ɵangular_packages_forms_forms_d, i3.ɵangular_packages_forms_forms_d, []), i0.ɵmpd(1073742336, i3.FormsModule, i3.FormsModule, []), i0.ɵmpd(1073742336, i1.JigsawInputModule, i1.JigsawInputModule, [])]); });\nexport { JigsawInputModuleNgFactory as JigsawInputModuleNgFactory };\nvar styles_JigsawInput = [];\nvar RenderType_JigsawInput = i0.ɵcrt({ encapsulation: 2, styles: styles_JigsawInput, data: {} });\nexport { RenderType_JigsawInput as RenderType_JigsawInput };\nfunction View_JigsawInput_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"span\", [[\"class\", \"jigsaw-input-clear-bar\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co._$clearValue() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\u00D7\"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = !_co.value; _ck(_v, 0, 0, currVal_0); }); }\nexport function View_JigsawInput_0(_l) { return i0.ɵvid(0, [i0.ɵqud(671088640, 1, { _inputElement: 0 }), (_l()(), i0.ɵeld(1, 0, null, null, 13, \"div\", [[\"class\", \"jigsaw-input-wrapper\"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"div\", [[\"class\", \"jigsaw-input-icon-front\"]], null, null, null, null, null)), i0.ɵncd(null, 0), i0.ɵncd(null, 1), (_l()(), i0.ɵeld(5, 0, [[1, 0], [\"input\", 1]], null, 5, \"input\", [], [[8, \"placeholder\", 0], [8, \"type\", 0], [2, \"ng-untouched\", null], [2, \"ng-touched\", null], [2, \"ng-pristine\", null], [2, \"ng-dirty\", null], [2, \"ng-valid\", null], [2, \"ng-invalid\", null], [2, \"ng-pending\", null]], [[null, \"ngModelChange\"], [null, \"blur\"], [null, \"focus\"], [null, \"input\"], [null, \"compositionstart\"], [null, \"compositionend\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"input\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 6)._handleInput($event.target.value) !== false);\n        ad = (pd_0 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_1 = (i0.ɵnov(_v, 6).onTouched() !== false);\n        ad = (pd_1 && ad);\n    } if ((\"compositionstart\" === en)) {\n        var pd_2 = (i0.ɵnov(_v, 6)._compositionStart() !== false);\n        ad = (pd_2 && ad);\n    } if ((\"compositionend\" === en)) {\n        var pd_3 = (i0.ɵnov(_v, 6)._compositionEnd($event.target.value) !== false);\n        ad = (pd_3 && ad);\n    } if ((\"ngModelChange\" === en)) {\n        var pd_4 = ((_co.value = $event) !== false);\n        ad = (pd_4 && ad);\n    } if ((\"blur\" === en)) {\n        var pd_5 = (_co._$handleBlur($event) !== false);\n        ad = (pd_5 && ad);\n    } if ((\"focus\" === en)) {\n        var pd_6 = (_co._$handleFocus($event) !== false);\n        ad = (pd_6 && ad);\n    } return ad; }, null, null)), i0.ɵdid(6, 16384, null, 0, i3.DefaultValueAccessor, [i0.Renderer2, i0.ElementRef, [2, i3.COMPOSITION_BUFFER_MODE]], null, null), i0.ɵprd(1024, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i3.DefaultValueAccessor]), i0.ɵdid(8, 671744, null, 0, i3.NgModel, [[8, null], [8, null], [8, null], [6, i3.NG_VALUE_ACCESSOR]], { isDisabled: [0, \"isDisabled\"], model: [1, \"model\"] }, { update: \"ngModelChange\" }), i0.ɵprd(2048, null, i3.NgControl, null, [i3.NgModel]), i0.ɵdid(10, 16384, null, 0, i3.NgControlStatus, [[4, i3.NgControl]], null, null), (_l()(), i0.ɵeld(11, 0, null, null, 3, \"div\", [[\"class\", \"jigsaw-input-icon-end\"]], null, null, null, null, null)), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_JigsawInput_1)), i0.ɵdid(13, 16384, null, 0, i2.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), i0.ɵncd(null, 2)], function (_ck, _v) { var _co = _v.component; var currVal_9 = _co.disabled; var currVal_10 = _co.value; _ck(_v, 8, 0, currVal_9, currVal_10); var currVal_11 = (_co.clearable && !_co.disabled); _ck(_v, 13, 0, currVal_11); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.placeholder; var currVal_1 = _co.type; var currVal_2 = i0.ɵnov(_v, 10).ngClassUntouched; var currVal_3 = i0.ɵnov(_v, 10).ngClassTouched; var currVal_4 = i0.ɵnov(_v, 10).ngClassPristine; var currVal_5 = i0.ɵnov(_v, 10).ngClassDirty; var currVal_6 = i0.ɵnov(_v, 10).ngClassValid; var currVal_7 = i0.ɵnov(_v, 10).ngClassInvalid; var currVal_8 = i0.ɵnov(_v, 10).ngClassPending; _ck(_v, 5, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5, currVal_6, currVal_7, currVal_8); }); }\nexport function View_JigsawInput_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 2, \"jigsaw-input\", [], [[4, \"width\", null], [4, \"height\", null], [2, \"jigsaw-input\", null], [2, \"jigsaw-input-error\", null], [2, \"jigsaw-input-focused\", null], [2, \"jigsaw-input-disabled\", null]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 2)._$stopPropagation($event) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, View_JigsawInput_0, RenderType_JigsawInput)), i0.ɵprd(5120, null, i3.NG_VALUE_ACCESSOR, function (p0_0) { return [p0_0]; }, [i1.JigsawInput]), i0.ɵdid(2, 245760, null, 0, i1.JigsawInput, [], null, null)], function (_ck, _v) { _ck(_v, 2, 0); }, function (_ck, _v) { var currVal_0 = i0.ɵnov(_v, 2).width; var currVal_1 = i0.ɵnov(_v, 2).height; var currVal_2 = true; var currVal_3 = !i0.ɵnov(_v, 2).valid; var currVal_4 = i0.ɵnov(_v, 2).focused; var currVal_5 = i0.ɵnov(_v, 2).disabled; _ck(_v, 0, 0, currVal_0, currVal_1, currVal_2, currVal_3, currVal_4, currVal_5); }); }\nvar JigsawInputNgFactory = i0.ɵccf(\"jigsaw-input, j-input\", i1.JigsawInput, View_JigsawInput_Host_0, { basicClass: \"basicClass\", width: \"width\", height: \"height\", maxHeight: \"maxHeight\", clearable: \"clearable\", disabled: \"disabled\", valid: \"valid\", password: \"password\", type: \"type\", value: \"value\", placeholder: \"placeholder\", blurOnClear: \"blurOnClear\" }, { _focusEmitter: \"focus\", _blurEmitter: \"blur\", valueChange: \"valueChange\" }, [\"[jigsaw-prefix-icon], [j-prefix-icon]\", \"*\", \"[jigsaw-icon], [j-icon]\"]);\nexport { JigsawInputNgFactory as JigsawInputNgFactory };\n","<div class=\"jigsaw-input-wrapper\">\n    <div class=\"jigsaw-input-icon-front\">\n        <ng-content select=\"[jigsaw-prefix-icon], [j-prefix-icon]\"></ng-content>\n    </div>\n    <ng-content></ng-content>\n    <input #input\n           [placeholder]=\"placeholder\"\n           [(ngModel)]=\"value\"\n           [disabled]=\"disabled\"\n           (blur)=\"_$handleBlur($event)\"\n           (focus)=\"_$handleFocus($event)\"\n           [type]=\"type\" >\n    <div class=\"jigsaw-input-icon-end\">\n        <span *ngIf=\"clearable && !disabled\" (click)=\"_$clearValue()\" [hidden]=\"!value\" class=\"jigsaw-input-clear-bar\">&times;</span>\n        <ng-content select=\"[jigsaw-icon], [j-icon]\"></ng-content>\n    </div>\n</div>\n","import * as tslib_1 from \"tslib\";\nimport { EventEmitter, ElementRef } from \"@angular/core\";\nimport { ControlValueAccessor } from \"@angular/forms\";\nimport { AbstractJigsawComponent } from \"../../common/common\";\nimport { CommonUtils } from \"../../common/core/utils/common-utils\";\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\nvar JigsawInput = /** @class */ (function (_super) {\n    tslib_1.__extends(JigsawInput, _super);\n    function JigsawInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /**\n         * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n         *\n         * $demo = input/clearable\n         */\n        _this.clearable = true;\n        /**\n         * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n         *\n         * $demo = input/disabled\n         */\n        _this.disabled = false;\n        /**\n         * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n         *\n         * $demo = input/valid\n         * $demo = form/template-driven\n         */\n        _this.valid = true;\n        /**\n         * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n         *\n         * $demo = input/password\n         */\n        _this.password = false;\n        _this._focusEmitter = new EventEmitter();\n        _this._blurEmitter = new EventEmitter();\n        _this._propagateChange = function () {\n        };\n        _this._value = ''; //input表单值\n        /**\n         * 当文本框中的文本发生变化时，组件会发出此事件。\n         *\n         * $demo = input/value-change\n         */\n        _this.valueChange = new EventEmitter();\n        _this._placeholder = '';\n        _this._focused = false;\n        /**\n         * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n         * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n         * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n         * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n         *\n         * $demo = table/update-column-define\n         */\n        _this.blurOnClear = true;\n        return _this;\n    }\n    Object.defineProperty(JigsawInput.prototype, \"type\", {\n        get: function () {\n            return this.password ? \"password\" : \"text\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JigsawInput.prototype.writeValue = function (value) {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    };\n    JigsawInput.prototype.registerOnChange = function (fn) {\n        this._propagateChange = fn;\n    };\n    JigsawInput.prototype.registerOnTouched = function (fn) {\n    };\n    Object.defineProperty(JigsawInput.prototype, \"value\", {\n        /**\n         * 文本框中当前的文本\n         *\n         * $demo = input/valid\n         */\n        get: function () {\n            return this._value;\n        },\n        set: function (newValue) {\n            if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n                return;\n            }\n            this._value = newValue;\n            this.valueChange.emit(this._value);\n            this._propagateChange(this._value);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(JigsawInput.prototype, \"placeholder\", {\n        get: function () {\n            return this._placeholder;\n        },\n        /**\n         * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n         *\n         * $demo = input/valid\n         */\n        set: function (txt) {\n            this._placeholder = txt;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    JigsawInput.prototype.focus = function () {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    };\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    JigsawInput.prototype.select = function () {\n        this._inputElement.nativeElement.select();\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$clearValue = function () {\n        this.value = '';\n        this.focus();\n    };\n    Object.defineProperty(JigsawInput.prototype, \"focused\", {\n        /**\n         * 获取文本框是否有焦点\n         *\n         * $demo = input/focus\n         */\n        get: function () {\n            return this._focused;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$handleFocus = function (event) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$handleBlur = function (event) {\n        var _this = this;\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        }\n        else {\n            this.callLater(function () {\n                if (!_this._focused) {\n                    _this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    };\n    /**\n     * @internal\n     */\n    JigsawInput.prototype._$stopPropagation = function (event) {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n    return JigsawInput;\n}(AbstractJigsawComponent));\nexport { JigsawInput };\nvar JigsawInputModule = /** @class */ (function () {\n    function JigsawInputModule() {\n    }\n    return JigsawInputModule;\n}());\nexport { JigsawInputModule };\n","import {\n    NgModule, Component, EventEmitter, Input, Output, ElementRef, ViewChild, forwardRef\n} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {ControlValueAccessor, FormsModule, NG_VALUE_ACCESSOR} from \"@angular/forms\";\nimport {AbstractJigsawComponent, IJigsawFormControl} from \"../../common/common\";\nimport {CommonUtils} from \"../../common/core/utils/common-utils\";\n\n/**\n * 单行输入框组件，常常用于接收用户的文本输入。\n *\n * 支持前后置图标，且每个图标都可交互，[参考demo]($demo=input/icons)。\n *\n * 这是一个表单友好组件。\n *\n * $demo = input/full\n */\n@Component({\n    selector: 'jigsaw-input, j-input',\n    templateUrl: 'input.html',\n    host: {\n        '[style.width]': 'width',\n        '[style.height]': 'height',\n        '(click)': '_$stopPropagation($event)',\n        '[class.jigsaw-input]': 'true',\n        '[class.jigsaw-input-error]': '!valid',\n        '[class.jigsaw-input-focused]': 'focused',\n        '[class.jigsaw-input-disabled]': 'disabled'\n    },\n    providers: [\n        {provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => JigsawInput), multi: true},\n    ]\n})\nexport class JigsawInput extends AbstractJigsawComponent implements IJigsawFormControl, ControlValueAccessor {\n\n    /**\n     * 在文本框里的文本非空时，是否显示快速清除按钮，默认为显示。用户单击了清除按钮时，文本框里的文本立即被清空。\n     *\n     * $demo = input/clearable\n     */\n    @Input() public clearable: boolean = true;\n\n    /**\n     * 设置按钮不可交互状态的开关，为true则不可交互，为false则可交互。\n     *\n     * $demo = input/disabled\n     */\n    @Input() public disabled: boolean = false;\n\n    /**\n     * 当用户输入非法时，组件给予样式上的提示，以提升易用性，常常和表单配合使用。\n     *\n     * $demo = input/valid\n     * $demo = form/template-driven\n     */\n    @Input() public valid: boolean = true;\n\n\n    /**\n     * 当用户设置类型为password时，输入内容隐藏为特殊字符。\n     *\n     * $demo = input/password\n     */\n    @Input() public password: boolean = false;\n\n    @Input()\n    public get type(): string {\n        return this.password ? \"password\" : \"text\";\n    }\n\n    @Output('focus')\n    private _focusEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    @Output('blur')\n    private _blurEmitter: EventEmitter<FocusEvent> = new EventEmitter<FocusEvent>();\n\n    private _propagateChange: any = () => {\n    };\n\n    public writeValue(value: any): void {\n        if (CommonUtils.isUndefined(value)) {\n            return;\n        }\n        this._value = value.toString();\n    }\n\n    public registerOnChange(fn: any): void {\n        this._propagateChange = fn;\n    }\n\n    public registerOnTouched(fn: any): void {\n    }\n\n    private _value: string = ''; //input表单值\n\n    /**\n     * 文本框中当前的文本\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public get value(): string {\n        return this._value;\n    }\n\n    public set value(newValue: string) {\n        if (CommonUtils.isUndefined(newValue) || this._value === newValue) {\n            return;\n        }\n        this._value = newValue;\n        this.valueChange.emit(this._value);\n        this._propagateChange(this._value);\n    }\n\n    /**\n     * 当文本框中的文本发生变化时，组件会发出此事件。\n     *\n     * $demo = input/value-change\n     */\n    @Output()\n    public valueChange: EventEmitter<string> = new EventEmitter<string>();\n\n    private _placeholder: string = '';\n\n    /**\n     * 当文本框内无文本时，显示这些文本以提示用户如何输入。\n     *\n     * $demo = input/valid\n     */\n    @Input()\n    public set placeholder(txt: string) {\n        this._placeholder = txt;\n    }\n\n    public get placeholder() {\n        return this._placeholder;\n    }\n\n\n    @ViewChild('input', {static: false})\n    private _inputElement: ElementRef;\n\n    /**\n     * 调用此方法可以通过编程方式使得文本获得焦点。\n     * 当确信用户需要在文本框中输入时，自动让文本框获得焦点可以提升体验。\n     *\n     * $demo = input/focus\n     */\n    public focus() {\n        this._focused = true;\n        this._inputElement.nativeElement.focus();\n    }\n\n    /**\n     * 调用此方法可以通过编程方式选中文本框中的所有文本。\n     * 当确信用户需要修改文本框里的文本时，自动选中所有文本可以提升体验。\n     *\n     * $demo = input/select\n     */\n    public select() {\n        this._inputElement.nativeElement.select();\n    }\n\n    /**\n     * @internal\n     */\n    public _$clearValue(): void {\n        this.value = '';\n        this.focus();\n    }\n\n    private _focused: boolean = false;\n\n    /**\n     * 获取文本框是否有焦点\n     *\n     * $demo = input/focus\n     */\n    public get focused(): boolean {\n        return this._focused;\n    }\n\n    /**\n     * @internal\n     */\n    public _$handleFocus(event: FocusEvent) {\n        this._focused = true;\n        this._focusEmitter.emit(event);\n    }\n\n    /**\n     * 在单击了清除文本按钮时，是否让文本失去焦点，默认为失去焦点。\n     * 一般来说，是否失去焦点关系不大，但是在一些特定场合，却有很大关系。`JigsawTable`的默认单元格编辑渲染就是`JigsawInput`组件，\n     * 按照`JigsawTable`的交互逻辑，单元格编辑器一旦失去焦点，就必须退回到单元格显示渲染器。\n     * 在这个情况下，用户单击了清除文本按钮时就不能让输入框失去焦点。参考[这个demo]($demo=table/update-column-define)的职位列\n     *\n     * $demo = table/update-column-define\n     */\n    @Input()\n    public blurOnClear: boolean = true;\n\n    /**\n     * @internal\n     */\n    public _$handleBlur(event: FocusEvent) {\n        this._focused = false;\n        if (this.blurOnClear) {\n            this._blurEmitter.emit(event);\n        } else {\n            this.callLater(() => {\n                if (!this._focused) {\n                    this._blurEmitter.emit(event);\n                }\n            }, 150);\n        }\n    }\n\n    /**\n     * @internal\n     */\n    public _$stopPropagation(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [JigsawInput],\n    exports: [JigsawInput],\n})\nexport class JigsawInputModule {\n\n}\n"],"sourceRoot":""}